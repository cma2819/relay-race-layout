<relay-info>
    <style>

        span.info {
            margin-left: 10px;
        }

        button{
            font-size: 16px;
            width: 100%;
        }
    </style>

    <div class="columns v-centered">
        <span class="info column">イベント名：{state.relayName}</span>
        <span class="column is-narrow">
            <button
                class="button is-success flat"
                onclick={editRelayInfoHandler}>編集</button>
        </span>
    </div>

    <relay-info-edit
        class="modal {state.showEdit ? 'is-active' : ''}"
        submitHandler={submitRelayInfoHandler}
        closeHandler={closeRelayInfoHandler}></relay-info-edit>
    
    <script type="ts">
        import {RelayInfoComponent} from './types'
        import RelayInfoEdit from './edit.riot'
        import {Relay as RelayType} from '../../../../nodecg/replicants'

        const relayRep = nodecg.Replicant('relay')

        function RelayInfo(): RelayInfoComponent {
            return {
                state: {
                    relayName: '',
                    showEdit: false
                },
                onMount() {
                    relayRep.on('change', this.relayChangeHandler)
                },
                relayChangeHandler(newVal: RelayType) {
                    this.state.relayName = newVal.name;
                },
                editRelayInfoHandler(e: Event) {
                    this.state.showEdit = true
                    this.update()
                },
                submitRelayInfoHandler(e: Event) {
                    this.state.showEdit = false
                    this.update()
                },
                closeRelayInfoHandler(e:Event) {
                    this.state.showEdit = false
                    this.update()
                }
            }
        }

        RelayInfo.components = {
            RelayInfoEdit
        }

        export default RelayInfo
    </script>
</relay-info>