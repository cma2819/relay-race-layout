<relay-info-edit>
    <style>
        :host {
            font-size: 16px;
        }

        div.wrapper > * {
            margin: 4px 0;
        }

        div.wrapper {
            background-color: #f7f7f7;
            padding: 64px;
        }
    </style>

    <div class="modal-background" onclick={props.closeHandler}></div>
    <div class="wrapper modal-content">
        <span class="hero">イベント情報設定</span>
        <label class="label">イベント名</label>
        <input class="input is-medium" type="text" name="title" value="{props.relayName}" placeholder="イベント名" />
        <label class="label">イベントテーマカラー</label>
        <input class="input is-medium" type="color" name="color" value="{props.relayColor}" placeholder="テーマカラー" />
        <div class="control level">
            <div class="level-left"></div>
            <div class="level-right">
                <button
                    class="button is-success level-item flat"
                    onclick={submit}>設定</button>
            </div>
        </div>
    </div>

    <script type="ts">
        import {RelayInfoEditComponent} from './types'
        import {Relay as RelayType} from '../../../../nodecg/replicants'


        function RelayInfoEdit(): RelayInfoEditComponent {
            const relayRep:Relay = nodecg.Replicant('relay')

            return {
                state: {},
                submit() {
                    this.props.submitHandler(this.$('input[name="title"]').value, this.$('input[name="color"]').value);
                }
            }
        }

        export default RelayInfoEdit
    </script>
</relay-info-edit>