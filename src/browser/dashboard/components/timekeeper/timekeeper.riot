<timekeeper>
    <style>
        div#timer {
            color: white;
            background-color: var(--theme-color);
        }

        button{
            font-size: 18px;
            width: 100%;
        }
    </style>

    <div id="timer" class="columns">
        <div class="column is-flex columns is-centered is-vcentered">
            <span id="timer-time" style="font-size:42px; font-weight: bold;">{state.time}</span>
        </div>
        <div class="timer-buttons column is-gapless">
            <div class="button-row row1 is-flex">
                <button
                    class="button is-success flat">
                    <span class="icon"><i class="fas fa-play"></i></span>
                    <span>開始</span>
                </button>

                <button
                    class="button is-success flat" disabled="disabled">
                    <span class="icon"><i class="fas fa-pause"></i></span>
                    <span>一時停止</span>
                </button>
            </div>

            <div class="button-row row2 is-flex">
                <button
                    class="button is-danger flat">
                    <span class="icon"><i class="fas fa-eraser"></i></span>
                    <span>リセット</span>
                </button>
                <button
                    class="button is-info flat">
                    <span class="icon"><i class="fas fa-pen"></i></span>
                    <span>編集</span>
                </button>
            </div>
        </div>
    </div>

    <script type="ts">
        import {TimekeeperComponent, TimeState} from './types'

        class Timekeeper implements TimekeeperComponent {
            state = {
                time: '',
                state: TimeState.Ready
            }
            onBeforeMount():void {
                this.state = {
                    time: '99:99:99',
                    state: TimeState.Ready
                }
            }
        }
        export default Timekeeper
    </script>
</timekeeper>