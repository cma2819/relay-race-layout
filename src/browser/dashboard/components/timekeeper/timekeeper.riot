<timekeeper>
    <style>
        div#timer {
            color: white;
            background-color: var(--theme-color);
        }

        button{
            width: 100%;
        }
    </style>

    <div id="timer" class="columns is-marginless">
        <div class="column is-flex columns is-centered is-vcentered is-marginless">
            <span id="timer-time" style="font-size:42px; font-weight: bold;">{state.time}</span>
        </div>
        <div class="timer-buttons column is-gapless">
            <div class="button-row row1 is-flex">
                <button
                    class="button is-success flat" onclick={startTimer} disabled={state.state === 'Running'}>
                    <span class="icon"><i class="fas fa-play"></i></span>
                    <span>開始</span>
                </button>

                <button
                    class="button is-success flat" disabled={state.state !== 'Running'} onclick={stopTimer}>
                    <span class="icon"><i class="fas fa-pause"></i></span>
                    <span>一時停止</span>
                </button>
            </div>

            <div class="button-row row2 is-flex">
                <button
                    class="button is-danger flat" onclick={resetTimer} disabled={state.state === 'Running'}>
                    <span class="icon"><i class="fas fa-eraser"></i></span>
                    <span>リセット</span>
                </button>
                <button
                    class="button is-info flat" onclick={editTimeHandler}>
                    <span class="icon"><i class="fas fa-pen"></i></span>
                    <span>編集</span>
                </button>
            </div>
        </div>
    </div>
    <runner idx="0"></runner>
    <runner idx="1"></runner>
    <runner idx="2"></runner>
    <runner idx="3"></runner>

    <div class="modal {state.showEdit ? 'is-active' : ''}">
        <time-edit
            submitHandler={editSubmitHandler}
            closeHandler={editCloseHandler}></time-edit>
    </div>

    <script type="ts">
        import {TimekeeperComponent, TimeState} from './types'
        import Runner from './runner.riot'
        import TimeEdit from './edit.riot'

        const stopwatchRep = nodecg.Replicant('stopwatch')

        function Timekeeper(): TimekeeperComponent {
            return {
                state: {
                    time: '',
                    state: TimeState.Ready,
                    showEdit: false
                },
                onMounted() {
                    stopwatchRep.on('change', (newVal) => {
                        this.state.time = newVal.time.formatted
                        this.state.state = newVal.state === 'running' ? TimeState.Running : TimeState.Ready
                        this.update()
                    })
                },
                startTimer() {
                    nodecg.sendMessage('startTimer')
                    this.update()
                },
                stopTimer() {
                    nodecg.sendMessage('stopTimer')
                    this.update()
                },
                resetTimer() {
                    nodecg.sendMessage('resetTimer')
                    this.update()
                },
                editTimeHandler() {
                    this.state.showEdit = true
                    this.update()
                },
                editSubmitHandler(formatted: string) {
                    nodecg.sendMessage('editTimer', formatted)
                    .then(result => {
                        this.notify(result, 'is-success')
                    })
                    .catch(err => {
                        this.notify(err, 'is-warning')
                    })
                    this.state.showEdit = false
                    this.update()
                },
                editCloseHandler() {
                    this.state.showEdit = false
                    this.update()
                }
            }
        }
        Timekeeper.components = {
            Runner,
            TimeEdit
        }

        export default Timekeeper
    </script>
</timekeeper>