<video-panel>
    <style>
        :host {
            border: 2px solid rgba(255, 255, 255, 0.9);
            position: relative;
        }

        div.label-container {
            font-weight: bold;
            font-size: 24px;
            padding: 0.1rem 0.5rem;
            position: absolute;
            height: 10%;
            width: 100%;
            bottom: 0%;
            background-color: white;
        }

        div.is-top {
            top: 0%;
        }

        div.is-bottom {
            bottom: 0%;
        }

    </style>
    
    <!-- <div class="column is-paddingless is-half top"> -->
        <div class="border-tr"></div>
        <div class="border-bl"></div>
        <div class="label-container {props.idx < 2 ? 'is-bottom' : 'is-top'}">
            <div class="columns is-marginless label-content">
                <div class="column is-paddingless is-narrow">{props.idx + 1}</div>
                <div class="column is-paddingless has-text-centered">{props.team.players[state.progress.segments.current.runIndex].name}</div>
            </div>
        </div>
    <!-- </div> -->

    <script type="ts">
        // Define logics about this component here.
        
        import { VideoPanelComponent } from './types'

        const progressRep = nodecg.Replicant('progress')

        function VideoPanel(): VideoPanelComponent {
            return {
                state:{
                    progress: {
                        segments: {
                            current: {
                                runIndex: 0
                            }
                        }
                    }
                },
                onMounted() {
                    progressRep.on('change', (newVal) => {
                        this.state.progress = newVal[this.props.idx]
                        this.update()
                    })
                }
            }
        }

        export default VideoPanel
        
    </script>
</video-panel>