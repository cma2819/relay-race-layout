{"version":3,"sources":["../../../node_modules/riot/riot.esm.js","../../../node_modules/bianco.dom-to-array/index.next.js","../../../node_modules/bianco.query/index.next.js","../../../node_modules/@riotjs/hot-reload/index.js","components/checkpoint/segment.riot","../../../node_modules/color-name/index.js","../../../node_modules/simple-swizzle/node_modules/is-arrayish/index.js","../../../node_modules/simple-swizzle/index.js","../../../node_modules/color-string/index.js","../../../node_modules/color-convert/conversions.js","../../../node_modules/color-convert/route.js","../../../node_modules/color-convert/index.js","../../../node_modules/color/index.js","components/checkpoint/checkpoint.riot","checkpoint.ts"],"names":["COMPONENTS_IMPLEMENTATION_MAP","Map","DOM_COMPONENT_INSTANCE_PROPERTY","Symbol","PLUGINS_SET","Set","IS_DIRECTIVE","VALUE_ATTRIBUTE","MOUNT_METHOD_KEY","UPDATE_METHOD_KEY","UNMOUNT_METHOD_KEY","SHOULD_UPDATE_KEY","ON_BEFORE_MOUNT_KEY","ON_MOUNTED_KEY","ON_BEFORE_UPDATE_KEY","ON_UPDATED_KEY","ON_BEFORE_UNMOUNT_KEY","ON_UNMOUNTED_KEY","PROPS_KEY","STATE_KEY","SLOTS_KEY","ROOT_KEY","IS_PURE_SYMBOL","for","PARENT_KEY_SYMBOL","ATTRIBUTES_KEY_SYMBOL","TEMPLATE_KEY_SYMBOL","globals","Object","freeze","__proto__","checkType","element","type","isFunction","value","noop","autobindMethods","source","methods","forEach","method","bind","callOrAssign","prototype","constructor","dashToCamelCase","string","replace","_","c","toUpperCase","moveChildren","target","firstChild","appendChild","cleanNode","node","clearChildren","childNodes","children","Array","from","removeNode","parentNode","remove","removeChild","EACH","IF","SIMPLE","TAG","SLOT","bindingTypes","ATTRIBUTE","EVENT","TEXT","VALUE","expressionTypes","createTemplateMeta","componentTemplate","fragment","dom","cloneNode","avoidDOMInjection","iOF","indexOf","append","get","parent","start","end","before","isSelect","noSelection","child","insertBefore","selected","selectedIndex","call","querySelectorAll","eqeq","a","b","identity","O","moreNodes","moreStart","moreEnd","lessNodes","lessStart","lessEnd","compare","length","m","l","isReversed","futureNodes","futureEnd","currentNodes","currentStart","currentEnd","next","list","i","nextSibling","drop","DELETION","INSERTION","SKIP","SKIP_OND","HS","futureStart","futureChanges","currentChanges","k","minLen","link","tresh","nodes","slice","index","idxInOld","findK","newi","oldi","prev","diff","ptr","OND","rows","cols","v","d","r","pv","cv","pd","outer","diffIdx","applyDiff","currentLength","live","currentIndex","push","ktr","j","lo","hi","mid","smartDiff","dropChild","domdiff","options","currentSame","futureSame","checkType$1","isSvg","el","owner","ownerSVGElement","isTemplate","isNil","content","isFunction$1","isBoolean","isObject","undefined","UNMOUNT_SCOPE","EachBinding","seal","mount","scope","parentScope","update","placeholder","childrenMap","collection","evaluate","items","createPatch","newChildrenMap","batches","patch","values","fn","unmount","redundant","item","info","pop","template","context","mustFilterItem","condition","Boolean","extendScope","_ref","itemName","indexName","binding","getKey","root","isTemplateTag","create","key","oldItem","clone","mustMount","meta","delete","set","_ref2","document","createTextNode","assign","createDOM","IfBinding","mustUnmount","pristine","create$1","_ref3","memoize","cache","cached","val","has","evaluateAttributeExpressions","attributes","reduce","acc","attribute","name","REMOVE_ATTRIBUTE","SET_ATTIBUTE","ElementProto","Element","isNativeHtmlProperty","hasOwnProperty","setAllAttributes","entries","_ref4","attributeExpression","removeAllAttributes","keys","removeAttribute","_ref5","oldValue","getMethod","normalizeValue","RE_EVENTS_PREFIX","eventExpression","_ref6","normalizedEventName","removeEventListener","addEventListener","normalizeStringValue","getTextNode","childNodeIndex","nodeType","Node","COMMENT_NODE","textNode","replaceChild","textExpression","data","valueExpression","expression","expressions","Expression","apply","create$2","flattenCollectionMethods","map","create$3","_ref7","extendParentScope","attr","SlotBinding","getTemplateScope","templateData","slots","find","_ref8","id","create$6","html","bindings","moveSlotInnerContent","mustRemoveRoot","slot","createSlot","_ref9","getTag","component","slotsToMarkup","slotBindings","_ref10","concat","TagBinding","tag","getComponent","keepRootTag","create$4","_ref11","fixTextExpressionsOffset","textExpressionsOffset","e","create$5","templateTagOffset","selector","redundantAttribute","querySelector","bindingExpressions","createHTMLTree","createElement","innerHTML","createSVGTree","container","svgNode","ownerDocument","importNode","window","DOMParser","parseFromString","documentElement","createDOMTree","injectDOM","createTemplateDOM","TemplateChunk","Error","Math","max","bindingsData","defineProperty","enumerable","writable","configurable","defineProperties","properties","defineDefaults","defaults","ATTRIBUTE$1","VALUE$1","camelToDashCase","toLowerCase","dashToCamelCase$1","panic","message","evaluateAttributeExpressions$1","domToArray","els","isArray","test","toString","$","ctx","normalize","parseNodes","names","n","attrs","props","prop","setAttribute","CSS_BY_NAME","STYLE_NODE_SELECTOR","getStyleNode","style","head","cssManager","add","css","inject","join","curry","_len","arguments","_key","_len2","args","_key2","getName","tagName","COMPONENT_CORE_HELPERS","$$","PURE_COMPONENT_API","COMPONENT_LIFECYCLE_METHODS","MOCKED_TEMPLATE_INTERFACE","bindDOMNodeToComponentObject","createCoreAPIMethods","mapFunction","componentTemplateFactory","components","createPureComponent","pureFactoryFunction","createComponent","exports","templateFn","createSubcomponents","componentAPI","defineComponent","state","preserveRoot","enhanceComponentAPI","createAttributeBindings","runPlugins","computeState","oldState","newState","addCssHook","newProps","filter","mountComponent","initialProps","componentName","DOMattributesToObject","compose","fns","f","g","DOM_COMPONENT_INSTANCE_PROPERTY$1","COMPONENTS_IMPLEMENTATION_MAP$1","PLUGINS_SET$1","evaluateInitialProps","register","unregister","keepRootElement","install","plugin","uninstall","implementation","_temp","pure","func","version","__","progressRep","nodecg","Replicant","graphicsRep","Segment","currentSegments","icons","top","other","topIndex","onMounted","_this","on","newVal","progress","segments","current","calcTopTeam","checkpointIcons","currentSegs","topSegment","run","seg","runIndex","segIndex","console","log","runIdx","segIdx","idx","segment","relayRep","teamListRep","Checkpoint","runs","checkpointIndex","minCpIdxs","teamIdxs","teamColorIsLight","team","color","isLight","calcCheckpointIndex","teams","totalSegmentCount","image","game"],"mappings":"ASAA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,ADAA;AGCA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,ADAA;AHDA,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,ADAA,AQFA;AXCA,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,ADAA;AHDA,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,ADAA,AQHA;AXEA,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,ADAA;AHDA,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,ADAA,AQJA,AVFA;ADKA,AFLA,ACAA,AOOA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,ADAA,AONA,ATAA,IAAIwc,WAAW,GAAGC,MAAM,CAACC,SAAP,CAAiB,UAAjB,CAAlB;ADKA,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,ADAA,AFNA,IAAIC,WAAW,GAAGF,MAAM,CAACC,SAAP,CAAiB,UAAjB,CAAlB;ADKA,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,ADAA,AOPA;AVMA,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AHPA,SAASE,OAAT,GAAmB;ADMnB,ADPA,AOSA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AHPI,SAAO;ADMX,AFLe,AQOf,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AHPQvC,IAAAA,KHAgBpD,AGAX,EAAE,QHAA,CAAoBC,GAApB,EAAyB;AEMxC,AFLE,AQOF,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AMbA,ATMY2F,MAAAA,eAAe,EAAE,EADd;ADOf,AFLE,AQOF,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AOVA,ADDA,ATIYC,IUHR,ADDAyB,CCCC,CbGC,AGAMzB,CHALjZ,IGAU,CHAL,AYJA,CZICsT,AGAM,CUHnB,CAAe,ADDAsF,KZIR,CAAcvF,AYJA,CAACwF,EZIf,CAAL,EAAyB,IYJZ,CAAiB,ECChC,EACE,GDFa,CAAf,ICEU,CAAC,cAAT,CAAwB,MAAxB,KAAmC,QAAQ,CAAC,IAD9C,EAEE,EAFF;AXSA,AFLI,AQOJ,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AMXA,ATIgBK,ISJZJ,ITIYI,GAAG,EAAE,ESJN,ATGI,GSHDN,MAAM,CAACC,SAAP,CAAiB,UAAjB,CAAlB;AVUA,AFLI,AQOJ,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AMXA,ATIgBM,ISJZwB,IZKE,AGDUxB,KAAK,ESJN,ATIQ,GSJLP,MAAM,CAACC,SAAP,CAAiB,WAAjB,CAAlB,SZMStF,IADH,CACQxV,MAAM,CAACgB,SAAP,CAAiByU,QAAjB,CAA0BnR,IAA1B,CAA+BgR,GAA/B,CADR,KAEK,OAAOA,GAAG,CAAClQ,MAAX,KAAsB,QAH7B,EAKE,OAAOnD,KAAK,CAACC,IAAN,CAAWoT,GAAX,CAAP,CALF,KAOE;AEDN,AFEM,ACTS,AOSf,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AHVmB,OAFJ,EFGSI,CAAT,CAAW7C,QAAX,EAAqB8C,GAArB,EAA0B;ACQzC,AFEM,ACTJ,AOSF,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AMZA,ATKY0F,MAAAA,GFFH,AWHAwB,IZYI,CAACvH,AGPM,EAAE,CHOT,AGPU,CHOjB,CYZN,GAAsB,QXGF,OAAOzC,QAAP,KAAoB,QAApB,GAChB,CAAC8C,GAAG,IAAI/I,QAAR,EAAkBrI,gBAAlB,CAAmCsO,QAAnC,CADgB,GAEhBA,QAFK,CAAP;ACQF,AFEG,ACNF,AOMD,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AMZI,ATFW,GHAyB,CAetC,CGhBS,ISGA;AVWX,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AMZQ4F,ATKA6C,ISLA7C,ATKA6C,KSLK,EAAE,ETKE,EAAE,qBAAY;ADM/B,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AMZYwB,ATKA,MSLAA,IAAI,ATKAvB,ESLE,EADH,CTMM,GAAG,IAAZ;ADMZ,AFCE,AQCF,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AMZYG,MAAAA,GZWHpG,GAAP,EYXkB,EAAE,EAFP;AVaf,AFCC,AQCD,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AMZYyH,ATIAnC,MSJAmC,ATIAnC,WAAW,CAACY,EAAZ,CSJe,ATIA,ESJE,CAHd,KTOH,EAAyB,UAAUC,MAAV,EAAkB;ADOvD,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AMZYuB,ATIIzB,MSJJyB,ETIIzB,KAAK,CAAC9C,CSJD,EAAE,ETIP,CAAYwC,eAAZ,GAA8BQ,MAAM,CAACjL,GAAP,CAAW,UAAUkL,QAAV,EAAoB;ADO7E,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AMZgBO,ATII,QSJJA,GAAG,EAAE,CADE,GTKIP,QAAQ,CAACC,QAAT,CAAkBC,OAAzB;ADOpB,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AMZgBM,ATIC,QSJDA,CTE8B,CAA9B,CSFG,EAAE;AVWrB,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AMfuB,OAJR;AVkBf,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AMZYe,ATGI1B,MSHJ0B,ETGI1B,KAAK,CSHD,ATGEM,ESHA,STGN,CAAkBN,KAAK,CAAC9C,KAAN,CAAYwC,eAA9B;ADQhB,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ALAA,AMrBe,KADJ;AVqBX,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ACZQiC,ATEQ3B,ISFR2B,ITEQ3B,KAAK,CAAClR,MSFE,ATER,ESFU,0BAAU8S,IAAV,EAAgB;AVW1C,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ACZY,ATEC,OAND,MSIO,oBAAMA,IAAI,CAACC,KAAX,EAAkBC,OAAlB,EAAP;AVWZ,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ACZS,ATEGtC,KSfD,CTeCA,WAAW,CAACS,EAAZ,CAAe,QAAf,EAAyB,UAAUC,MAAV,EAAkB;ADSvD,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ACZQH,ATEQC,ISFRD,ITEQC,KSFC,ATEI,CAAC9C,CSFH,ITEH,CAAYyC,KAAZ,GAAoBO,MAAM,CAACK,CSFZ,cTEf;ADShB,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ACZY,UAAIP,KAAK,GAAG,IAAZ;AVWZ,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ARXgBA,QAAAA,KAAK,CAAClR,MAAN;ADUhB,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,ACbYsS,ATEC,MSFDA,CTDA,OSCQ,CAACnB,EAAT,CAAY,QAAZ,EAAsB,UAAUC,MAAV,EAAkB;AVYpD,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,AZrCA,AawBgBF,ATEP,KAtBE,GSoBKA,KAAK,CAAC9C,KAAN,CAAYqE,IAAZ,GAAmBrB,MAAM,CAACqB,IAA1B;AVYhB,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,AZrCA,AI0BQjB,IJ1BFzd,AI0BEyd,WAAW,EAAE,gBJ1Bc,GAAG,EI0BPE,EJ1BW1d,GAAJ,EAAtC,II0BqB,EAAuB;ADU5C,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,AZtCA,AawBgBkd,ATGJ,IJ1BNjd,IauBUid,ETGAF,GSHK,CAACiC,ITGE,GAAG,CAAC,CAAhB,USHI,EbvBqB,GAAG/e,MAAM,CAAC,gBAAD,CAD9C;AGqCA,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,AZvCA,AI4BY,IJ1BNC,MI0BUwd,KJ1BC,GAAG,EI0BM,EJ1BFvd,CI0BK,EJ1BT,EAFpB;AGsCA,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,AZxCA,AayBgB8c,ATIAU,IJ1BVvd,IasBU6c,ATIAU,GAAG,ESJE,ATIA,CSJC5R,ATIA,CADO,CJzBX,GAAG,CasBL,GbzBhB;AGuCA,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,AZzCA,Aa0Ba,ATIG6R,IJ1BVvd,GakBM,CTQIud,GAAG,EAAE,CAAC,KJ1BD,GAAG,OAJxB;AGwCA,AMEA,AEAA,ADAA,ALAA,AGAA,AIAA,AZ1CA,Aa2BYnB,ATCiB,IJvBvBnc,EasBMmc,CTCA,USDW,CAACS,EbtBF,AasBV,CAAe,EbtBF,MasBb,Cb3BZ,Ca2BqC,UAAUC,MAAV,EAAkB;AJgBvD,AEAA,ADAA,ALAA,AGAA,AIAA,AZ3CA,Aa4BgBF,IbtBV1c,IasBU0c,KAAK,CAAC9C,KAAN,CAAYsE,CbtBL,GAAG,QAN1B,Ga4BgB,GAA8BtB,MAAM,CAACsB,eAArC;AJgBhB,AEAA,ADAA,ALAA,AGAA,AIAA,AZ5CA,AIgCY,IJzBNje,OIyBW,IAAIiH,CAAC,GAAG,CAAb,EJzBY,AIyBIA,CAAC,EJzBF,CIyBKgW,QJhChC,GIgC2C,CAAC3W,MAAhC,EAAwCW,CAAC,EAAzC,EAA6C;AKazD,AEAA,ADAA,ALAA,AGAA,AIAA,AZ7CA,Aa6BgBwV,ATIA,IJzBVxc,IaqBUwc,ITII,CSJC,ATIAQ,CSJCuB,ObrBC,GAAG,AIyBM,CAACvX,CAAD,CAAhB,EAAqB,ISJrB,Kb7BhB;AS8CA,AEAA,ADAA,ALAA,AGAA,AIAA,AZ9CA,AIkCoBsV,IJzBdrc,MIyBcqc,QAAQ,GAAGtV,CAAX,CJzBK,GAAG,eAT5B;AS+CA,AEAA,ADAA,ALAA,AGAA,AIAA,AZ/CA,Aa8BgBwV,ATKI,IJzBdtc,IaoBUsc,KAAK,CAAClR,IbpBF,EaoBJ,CbpBO,WAVvB;ASgDA,AEAA,ADAA,ALAA,AGAA,AIAA,AZhDA,Aa+Ba,ATKI,IJzBXnL,GagBM,iBbhBc,GAAG,gBAX7B;ASiDA,AEAA,ADAA,ALAA,AGAA,AIAA,AZjDA,AagCY0d,IbpBNzd,EaoBMyd,WAAW,CbpBH,AaoBIpB,EAAZ,CbpBW,AaoBI,QAAf,EAAyB,CbhCrC,SagC+CC,MAAV,EAAkB;AJkBvD,AEAA,ADAA,ALAA,AGAA,AIAA,AZlDA,AaiCgBF,ATIA,IJxBVnc,IaoBUmc,ITIIQ,CSJC,CAACtD,KAAN,CAAY8E,GTIG,CAACxX,CJxBL,AaoBX,ATIe,CAAX,CAAeoW,CJxBL,AaoBMV,MAApB,CTII,GAA0BO,OJrC9C,GIqCwD,CAACC,GAAzC,EAA8C;AKc9D,AEAA,ADAA,ALAA,AGAA,AIAA,AZnDA,AIsCoBZ,IJxBdhc,MIwBcgc,QAAQ,EJxBN,CIwBStV,CAAX,CJxBK,aAdzB;ASoDA,AEAA,ADAA,ALAA,AGAA,AIAA,AZpDA,AakCgBwV,ATKIS,IJxBd1c,IamBUic,ETKIS,GJxBL,AamBM,CAAC3R,EbnBJ,IamBF,ATKc,CAAC4R,EJvC/B,CIuCoB,GAAiBF,WAAW,CAAChW,CAAD,CAAX,CAAeoW,QAAhC;AKcpB,AEAA,ADAA,ALAA,AGAA,AIAA,AZrDA,AamCa,ATKOH,IJxBdzc,GagBM,GTQQyc,GJxBL,GAAG,IIwBY,CAACE,EJxC/B,CIwCoB,GAAiBH,WAAW,CAAChW,CAAD,CAAX,CAAeqW,QAAhC;AKcpB,AEAA,ADAA,ALAA,AGAA,AIAA,AZtDA,AaoCS,ATKQ,IJxBX5c,CaXK,IT+BK,IJpBD,EIyBM,CJzBH,GIyBOuc,IJ1CzB,OI0CoC,CAAChW,CAAD,CAAX,CAAeoW,QAAf,KAA4BH,UAAU,CAACC,GAAvC,IACLF,WAAW,CAAChW,CAAD,CAAX,CAAeqW,QAAf,GAA0BJ,UAAU,CAACE,GADpC,EACyC;AKY9D,AEAA,ADAA,ALAA,AGAA,AIAA,AZvDA,AaqCQoB,ATOYjC,IJ1Bd5b,AamBE6d,MTOYjC,EJ1BN,GAAG,GI0BW,GJ5C5B,AI4C+BtV,CAAX,CSPO,EAAE,+BAAY;AJmBzC,AEAA,ADAA,ALAA,AGAA,AIAA,AZxDA,AasCY,ATOQiW,IJ1Bdtc,MamBU8d,ATOIxB,QJ1BA,EI0BU,CJ1BPzd,AI0BQ0d,GAAX,GJ1BS,AamBI,ATOIF,CJ1BPpc,EamBM,CbnBb,AamBX,CbnBsB,MAAX,AI0ByB,CJ7ChD,AI6CiDoG,CAAD,CAAX,CAAeoW,QAAhC;AKYpB,AEAA,ADAA,ALAA,AGAA,AIAA,AZzDA,AI8CoBH,IJ1Bdpc,MI0Bcoc,UAAU,CJ1BP,AI0BQE,GJ1BL3d,AI0BN,GAAiBwd,GJ1BL,CAAC,OI0Be,CJ1BhB,AI0BiBhW,CJ9CjD,AI8CgD,CAAX,CAAeqW,QAAhC;AKYpB,AEAA,ADAA,ALAA,AGAA,AIAA,AZ1DA,AauCY,ATQK,IJ1BXvc,OakBW,IAAIkG,CAAC,GAAG,CAAb,EAAgBA,CAAC,EblBF,CakBK,EblBFxH,GakBOka,GblBD,CAAC,CakBL,CAAWqE,IAAX,CAAgB1X,KblBZ,CArBpC,AauCY,EAA4CW,CAAC,EAA7C,EAAiD;AJoB7D,AEAA,ADAA,ALAA,AGAA,AIAA,AZ3DA,AawCgB,ATQH,IJ1BPjG,SakBe2Y,KAAL,CAAWuE,IblBF,GAAGze,EakBZ,CAAqB0d,GblBH,AakBlB,CblBmB,EakBQlW,CAA3B,OblBkB,CAtBlC;AS4DA,AEAA,ADAA,ALAA,AGAA,AIAA,AZpCA,IAAIhG,OAAO;ASqCX,AEAA,ADAA,ALAA,AGAA,AIAA,AZrCc,AaiBE,ATQJ,WAAK0Y,CSRG,ITQR,CSRaA,ATQF4C,KSRH,CAAW0B,ETQnB,GAAsB1B,QAAtB,ESRQ,GAA8BmC,iBAAiB,GAAG,KAAK/E,KAAL,CAAWqE,IAAX,CAAgB/W,CAAhB,EAAmB4V,QAAnB,CAA4BvW,MAAlF,EAA2F;AJqB3G,AEAA,ADAA,ALAA,AGAA,AIAA,AZtC2BpF,AakBP,ATQRqc,MJ1BqB,AI0BrBA,CJ1BsBpc,MAAP,AI0BR,CJ1BsB,AI0BrBqc,GAAR,CAAYjB,QAAZ;AKaZ,AEAA,ADAA,ALAA,AGAA,AIAA,AZtCEnb,AakBe,ATQR,EJ1BPA,SAAS,EAAE,IAD4B;ASwCzC,AEAA,ADAA,ALAA,AGAA,AIAA,AZtCE9B,AIvBS,EJuBTA,CIvBE,4BJuB2B,EAAEA,6BAFQ;ASyCzC,AEAA,ADAA,ALAA,AGAA,AIAA,AZtCEE,AaiBckf,ATSf,EJ1BClf,MaiBckf,iBAAiB,IAAI,IbjBJ,CaiBS/E,CbjBPna,IaiBE,CAAWwe,IAAX,CAAgB/W,CAAhB,EAAmB4V,QAAnB,CAA4BvW,MAAjD,GbpByB;AS0CzC,AEAA,ADAA,ALAA,AGAA,AIAA,AZtCE5G,AaiBW,EbjBXA,WAAW,EAAEA,WAJ0B;AS2CzC,AEAA,ADAA,ALAA,AGAA,AIAA,AZtCEE,EAAAA,YAAY,CI0BC,CJ1BCA,YALyB;AS4CzC,AEAA,ADAA,ALAA,AGAA,AIAA,AZtCEC,AagBU,ATUV,EJ1BAA,SagBe8Z,KAAL,CbhBK,AagBMuE,EbhBJre,OagBP,CAAqBud,GAArB,GAA2B,CbtBE,IasBGzD,KAAL,CAAWsE,eAAX,GAA6BS,iBAAxD,sSTSG;AKcf,AEAA,ADAA,ALAA,AGAA,AIAA,AZtCE5e,AagBO,ATUP,EJ1BAA,WI0BWoc,KJ1BK,EAAEpc,AIwBL,gBJ/B0B;AS8CzC,AEAA,ADAA,ALAA,AGAA,AIAA,AZtCEC,Aa1BS,ATqDT,EJ3BAA,Ca1BE,WTqDU,KJ3BK,EAAEA,WI2BEyM,MJnCkB,GImC3B,EAAmBrI,eAAnB,EAAoCL,YAApC,EAAkDwP,YAAlD,EAAgE;AKY9E,AEAA,ADAA,ALAA,AGAA,AIAA,AZtCEtT,AagBD,ATWG,EJ3BFA,SI2BSwM,SJ3BS,AI2BD,CACb,CJ5BgBxM,kBATmB,iLIoCtB,EAEb,CAAC;AKUP,AEAA,ADAA,ALAA,AGAA,AIAA,AZtCEC,AI6BM,EJ7BNA,YI6Bc6D,KJ7BG,EAAE7D,KI6BO,CAACwD,IADtB,OJtCkC;ASiDzC,AEAA,ADAA,ALAA,AGAA,AIAA,AZtCEvD,AaeF6d,ATcQ,EJ7BN7d,QaeQ,CAACgZ,KTcO,IAFX,CJ3Bc,AaerB,EbfuBhZ,CaeC,kBb1BiB;ASkDzC,AEAA,ADAA,ALAA,AGAA,AIAA,AZtCEC,AaeE+b,ATcI,EJ7BN/b,AaeE+b,OAAO,EAAEA,KbfG,EAAE/b,CI6BG,IAHd,SJtCkC;ASmDzC,AEAA,ADAA,ALAA,AGAA,AIAA,AZtCEC,AaasB,ATiBhB,CSjBR,CbbEA,gBI8BkBoM,IJ9BE,EAAEpM,GI8BI,CAClB,gBJ5C+B,mGI2Cb,EAElB,CAAC;AKOX,AEAA,ADAA,ALAA,AGAA,AIAA,AZtCEC,AIgCU,EJhCVA,aagBa,CbhBC,EAAEA,KIgCS,CAAC,QJ9Ca;ASqDzC,AEAA,ADAA,ALAA,AGAA,AIAA,AZtCEC,AagBA,ATgBY,EJhCZA,gBIgCoB6D,KJhCC,EAAE7D,QIgCY,CAACyD,SADV,GJ9Ca,gXa8B1B;AJwBf,ACAA,ALAA,AGAA,AIAA,AZtCExD,AagBA,ATgBY,EJhCZA,WagBWwd,KbhBK,AIgCI,EJhCFxd,GacL,ETgBa,WJ9Ca;ASuDzC,ACAA,ALAA,AGAA,AIAA,AZtCEC,AaiBA,ATgBY,EJjCZA,SAAS,EAAEA,CaiBC,QblC2B,AIkDf,UShBHgM,QTgBYnB,CShBrB,EAAmBlH,ETgBP,EAAgB,WShB5B,EAAoCL,YAApC,EAAkDwP,YAAlD,EAAgE;AJsB9E,ACAA,ALAA,AGAA,AIAA,AZtCE7S,AaiBE,ATgBY,EJjCdA,SAAS,AaiBA+L,EbjBE/L,MIiCU,CShBJ,ATiBD,CShBZ,CbpCmC,sDImDlB,EAEJ4K,KAAK,CAACyR,OAAN,IAAiB,IAAjB,IAAyBzR,KAAK,CA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EAIL+E,KAAK,CAAC+S,gBAAN,CAAuB/S,KAAK,CAACgT,IAA7B,IAAqC,eAArC,GAAuD,gBAJlD,EAKLtG,IALK,CAKA,EALA,CAAP;AJiBd,ACAA,ALAA,AGAA,AIAA,AZtCE,Aa2BW,ATkBC,SJ7CL,QAAOzW,KI6CU,EJ7CjB,MAAmBC,EIqCgC,EJrC1D;ASuCF,AJAA,AGAA,AIAA,AZtCC,AaeY,AT+BC,SStCW,EAmBZ,WTmBaiL,SAAQ,CAAC,IAAD,EAAO,CAAC;AKP1C,AJAA,AGAA,AIAA,AZtCA,Aa2BY,ATmBI,kBSnBIrI,STmBW,CAAC,KSnBG,CAACJ,SADvB;AJab,AJAA,AGAA,AIAA,ACXY,ATmBM,kBSnBE,ITmBMI,GSrBb,YTqB4B,CAACJ,SADV;AKNhC,AJAA,AGAA,AIAA,ACVY,ATkBM,sBSlBM,ATkBE,KAFM,aShBCsH,KAAT,EAAgB;AJWxC,AJAA,AGAA,AIAA,ACVc,ATmBI,mBSnBG,CAAC,MTmBQ,cSnBT,EAAuBA,ETmBLA,GSnBU,CAACgT,CTmBpB,EAAgB,CSnBF,CAAWC,KAAlC,EAAyCvG,IAAzC,CAA8C,EAA9C,CAAP;AJWd,AJAA,AGAA,AIAA,ACVa,ATmBO,uBAAO1M,KAAK,CAACsS,GAAN,KAActS,KAAK,CAACsO,KAAN,CAAY4C,QAA1B,GAAqClR,KAAK,CAACsO,KAAN,CAAYyC,KAAZ,CAAkBC,GAAvD,GAA6DhR,KAAK,CAACsO,KAAN,CAAYyC,KAAZ,CAAkBE,KAAtF;AKRpB,AJAA,AGAA,AIAA,ACjBa,AT0BM,SS7CM;AJqCzB,AJAA,AGAA,AIAA,ACtCmC,ATwCH,OSxCE,CAAN,CALrB,IT6CwB;AKD/B,AJAA,AGAA,AIAA,AZvCA,Aa8BQ,ATSkC,SJvCjC9a,EIuCgC,CAAP,OJvClC,CAAoBC,KAApB,EAA2B,Ca8BG,OAnCvB;AJ6CP,AJAA,AGAA,AIAA,AZvCE,Aa8BM,ATFoD,SJ5BnDJ,AI4BkD,CAA3B,QJ5Bd,Aa8BE,Cb9BDI,KAAD,EAAQ,CaNnB,SbMW,CAAhB;ASwCF,AJAA,AGAA,AIAA,AZvCC,Aa8BO,ATbK,OAhBH,EA+CG,SSlBO,MArCb;AJ+CP,AJAA,AGAA,AIAA,ACTQ,ATkBI,gBAAQqC,GSlBC,KAtCd,ITwDyB,CAACJ,EADpB;AKPb,AJAA,AGAA,AIAA,AZvCA,Aa+BQ,ATkBI,SJjDHhC,IAAT,GAAgB,Ea+BI,ETkBI,gBSlBK2J,ETkBIA,GSlBb,EAAgB,ATkBZ,EAAgB;AKTxC,AJAA,AGAA,AIAA,AZvCE,Aa+BQ,ATkBI,SJjDL,IAAP,Ea+BeA,ETkBIA,GSlBC,CAACsO,CTkBG,CAACgE,GSlBV,ATkBI,CSlBQc,ITkBMpT,CSlBzB,ITkB8B,CAACsO,KAAN,CAAY4C,QAA1B,GAAqClR,KAAK,CAACsO,KAAN,CAAYyC,KAAZ,CAAkBC,GAAlB,KAA0B,EAA/D,GAAoEhR,KAAK,CAACsO,KAAN,CAAYyC,KAAZ,CAAkBE,KAAlB,KAA4B,EAAvG;AKTd,AJAA,AGAA,AIAA,AZvCC,Aa+BQ,ATkBI,SALA;AKJb,AJAA,AGAA,AIAA,AZvCA,AaZO,AT8DK,KS9DN,EA2CG,uBTmByB,QAPrB;AKHb,AJAA,AGAA,AIAA,ACRQ,ATmBI,cSnBIxY,MTmBQ,MSnBI,CAACL,GTWhB,CSZJ;AJUT,AJAA,AGAA,AIAA,ACRQ,AToBI,gBSpBM,IAFT,ATsBe+I,SAAQ,CAClB,uEADkB,EAElB,CAAC;AKbf,AJAA,AGAA,AIAA,ACRQ,ATsBQ,kBAAQ1I,CStBH,IAHZ,OTyB2B,CAACJ,EADtB;AKZf,AJAA,AGAA,AIAA,ACPQ,ATsBQ,kBStBI8I,ITsBQ,KStBA,CAAC,YTsBQnB,KAAT,EAAgB,yCStBhB,EAA+D,CAAC;AJQ5F,AJAA,AGAA,AIAA,ACPU,ATsBQ,gBStBAvH,GTsBOuH,KAAK,CAACyR,GStBD,CAACpZ,EAD6D,CTuBnE,IAAiB,IAAjB,IAAyB2H,KAAK,CAACyR,OAAN,CAAcO,QAAd,IAA0BhS,KAAK,CAAC8L,KAAN,CAAYsG,MAA/D,IAAyEpS,KAAK,CAACyR,OAAN,CAAcQ,QAAd,IAA0BjS,KAAK,CAAC8L,KAAN,CAAYuG,MAAtH;AKdlB,AJAA,AGAA,AIAA,ACNU,ATqBO,WALF,SShBO,kBAASrS,KAAT,EAAgB;AJOtC,AJAA,AGAA,AIAA,ACNY,ATsBI,iBStBGA,KAAK,CAACoS,MAAN,GTsBmB,CStBHpS,KAAK,CAACsO,CTe1B,ISfoB,CAAYuE,SAAZ,CAAsBf,GAA7C;AJOZ,AJAA,AGAA,AIAA,AZxCA,AakCW,ATsBK,SJxDPxb,Aa6BmF,aT2BhE,EJxD5B,CAAyBC,MAAzB,CIgDe,CJhDkBC,OAAjC,EAA0C;ASyC1C,AJAA,AGAA,AIAA,AZxCEA,AamCQ,ATqBM,EJxDdA,OAAO,CAACC,OAAR,CAAgB,IIwDU0K,MJxDVzK,EamCc,CTqBI,CAAC,EJxDb,EAAI,AIwDQ,CS5BwD,CT4BjD,EAAP;AKfpC,AJAA,AGAA,AIAA,AZxCIH,AamCM,ATWK,IJ9CXA,KI8CU,CJ9CJ,AI4CsB,CJ5CrBG,MAAD,CAAN,EamCkB,CbnCDH,MAAM,CAACG,Ca2BgE,Kb3BjE,CAAN,CAAeC,IAAf,CAAoBJ,MAApB,CAAjB;ASyCJ,AJAA,AGAA,AIAA,AZxCG,AaoCO,ATHG,GJnCX,IIZQ,CAFkB,CALrB,WSyDe4K,SAAQ,CAClB,wEADkB,EAElB,CAAC;AJGb,AJAA,AGAA,AIAA,AZxCE,AasCY,ATqBN,SJ3DC5K,MAAP,UasC2B,CAAC,ETqBA,QAjFvB;AK+DP,AJAA,AGAA,AIAA,AZxCC,AasCe,ATqBR,kBAAY,ESrBIuC,QT7DjB,OS6DgC,CAACJ,SADV;AJI9B,AJAA,AGAA,AIAA,AZxCA,AasCgB,ATqBR,kBAAY,ESrBI,OAFM,AT5DvB;AKiEP,AJAA,AGAA,AIAA,ACDgB,AToBR,mBAAa,KSpBO,AThErB,kBSgE8BsH,KAAT,EAAgB;AJE5C,AJAA,AGAA,AIAA,ACDkB,ATqBV,kBAAY,GSrBK,CACL,cToBSA,KAAT,EAAgB,iDSrBX,EAELA,KAAK,CAAC8R,GAAN,CAAUwB,KAAV,GAAkB,aAAlB,GAAkC,wBAF7B,EAGL5G,IAHK,CAGA,EAHA,CAAP;AJElB,AJAA,AGAA,AIAA,ACEiB,ATkBP,eAAO1M,KAAK,CAACsO,KAAN,CAAYwC,eAAnB;AKnBV,AJAA,AGAA,AIAA,ACR8B,AT4BrB,WS5BoB,EAUZ;AJDjB,AJAA,AGAA,AIAA,ACEgB,ATvET,KAAD,EAyFG,aSlBehY,eAAe,CAACJ,SADvB;AJAjB,AJAA,AGAA,AIAA,ACEgB,ATkBR,oBSlBgB,OAFP,CToBa,QADrB;AKlBT,AJAA,AGAA,AIAA,AZzCA,Aa4CgB,ATiBR,SJ7DC9B,SI6DW,GJ7DpB,CAAsBL,Ea4CM,Ib5C5B,AI2DS,EJ3DqB,Ya4COyJ,KAAT,EAAgB;AJF5C,AJAA,AGAA,AIAA,AZzCE,Aa4CgB,ATkBV,SJ9DC7J,UAAU,CAACI,Ca4CK,ATkBF,CSlBG,ATkBF,IJ9DL,CAAV,GAAqBA,MAAM,CAACM,SAAP,Ea4CL,Eb5CyBN,Aa4CIyJ,KAAK,Cb5CH,Aa4CI8R,Cb5CHjb,Ea4CH,CAAUyc,KAAvC,Cb5CyB,CAAiBxc,Aa4CI,KAA9C,EAAqD4V,Ib5ChD,Aa4CL,CAA0D,Eb5CF,Aa4CxD,CAAP,Gb5CmEnW,MAAJ,EAAnD,GAAkEA,MAAM,EAA7F,GAAkGA,MAAzG;AS0CF,AJAA,AGAA,AIAA,AZzCC,Aa4CgB,ATkBP,gBAAQuC,eAAe,CAACF,IADV;AKnBxB,AJAA,AGAA,AIAA,AZxCA,AaoCiB,ATyBP,WSnCmB,eTmCD,CAFJ;AKlBxB,AJAA,AGAA,AIAA,AChBa,ATsCH,SStCE,EAmBG,STmBO,kBAASoH,KAAT,EAAgB;AKrBtC,AJAA,AGAA,AIAA,ACGc,ATmBF,iBAAO,CAAC,cSnBgB,ITmBjB,EAAqBA,CSpBzB,IToB8B,CAAC8L,KAAN,CAAYyG,OAAjC,EAA0C,cAA1C,EAA0D7F,IAA1D,CAA+D,EAA/D,CAAP;AKrBZ,AJAA,AGAA,AIAA,ACGc,ATmBH,sBSnBe,SAFX;AJAf,AJAA,AGAA,AIAA,ACIc,ATWU,OAAD,kBSXM,CAAC;AJH9B,AJAA,AGAA,AIAA,ACIgB,ATMP,KAzFH,CAFa,CAAf,aSqFoB5T,eAAe,CAACF,IADV;AJF9B,AJAA,AGAA,AIAA,AZxCA,Aa4CgB,ATmBb,GA9GY,2BS2FmB,CAFJ;AJD9B,AJAA,AGAA,AIAA,ACKgB,ATmBd,UAAQ,cSnBkB,kBAASoH,KAAT,EAAgB;AJJ5C,AJAA,AGAA,AIAA,ACKkB,AT9FH,qBS8FUA,KAAK,CAAC8R,GAAN,CAAUyB,IAAjB;AJJlB,AJAA,AGAA,AIAA,ACKiB;AJJjB,AJAA,AGAA,AIAA,ACF8B,WAAD;AJG7B,AJAA,AGAA,AIAA,ACPe,SAnBH,CAFkB;AJ6B9B,AJAA,AGAA,AIAA,ACvC4F,OAAD,EA6ChF;AJLX,AJAA,AGAA,AIAA,AZ1CA,AagDU,SbhDDxc,OagDS0B,QbhDlB,CAAyBzB,GagDK,CAACoB,EbhD/B,EAAiC,Aa+CtB;AJJX,AJAA,AGAA,AIAA,AZ1CE,AagDQ,SbhDDpB,MAAM,CAACC,EagDI,IAFT,Cb9CF,CAAe,QAAf,EAAyB,UAACC,CAAD,EAAIC,CAAJ;AS2ClC,AJAA,AGAA,AIAA,AZ3CkC,AakDxB,WblDkCA,CAAC,CAACC,QakDvB,GblDqB,EAAV,cakDF4I,KAAT,EAAgB;AJNvC,ADAA,AIAA,AZ5CkC,AamDtB,GbnDH,CAAP,aamDiBA,KAAK,CAACoS,MAAN,GAAepS,KAAK,CAACsO,KAAN,CAAYuE,SAAZ,CAAsBf,GAArC,IAA6C9R,KAAK,CAACoS,MAAN,IAAgBpS,KAAK,CAACsO,KAAN,CAAYuE,SAAZ,CAAsBf,GAAtC,IAA6C9R,KAAK,CAACsS,GAAN,IAAatS,KAAK,CAACsO,KAAN,CAAYuE,SAAZ,CAAsBd,GAApI;AJNZ,ADAA,AIAA,AZ5CC,AamDU,SANA;AJAX,ADAA,AIAA,AZ5CA,AaoDU,oBAAY5Q,SAAQ,CAAC,IAAD,EAAO,CAAC;AJPtC,ADAA,AIAA,ACQY,kBAAQ1I,YAAY,CAACF,GADK;AJNtC,ADAA,AIAA,ACQY,0BAAgB0P,YAFU;AJLtC,ADAA,AIAA,ACSY,sBAAY,kBAASjI,KAAT,EAAgB;AJRxC,ADAA,AIAA,ACSc,mBAAO,SAAP;AJRd,ADAA,AIAA,ACSa,WANyB;AJFtC,ADAA,AIAA,AZ5CA,AasDY,mBAAS,EARiB;AJDtC,ADAA,AIAA,ACWY,wBAAc,CAAC;AJV3B,ADAA,AIAA,ACWc,oBAAQlH,eAAe,CAACJ,SADX;AJT3B,ADAA,AIAA,AZ5CA,AauDc,SbvDLrB,WauDa,CbvDtB,CAAsBd,MAAtB,CaqD2B,CbrDGe,MAA9B,EAAsC;AS6CtC,ADAA,AIAA,AZ5CE,AawDY,MbxDRf,MAAM,CAACgB,UAAX,CawDwB,CbxDD,iBawDUyI,KAAT,EAAgB;AJX1C,ADAA,AIAA,AZ5CI1I,AawDY,IbxDZA,MAAM,CAACE,UawDYwI,CbxDnB,CAAmBzJ,GawDK,CAACgc,EbxDA,CAAChb,IawDd,MbxDZ;AS6CJ,ADAA,AIAA,AZ5CIF,AawDW,IbxDXA,YAAY,CAACd,MAAD,EAASe,MAAT,CAAZ;AS6CJ,ADAA,AIAA,AZ5CG,AaiDwB,WAAD,EAOX;AJXf,ADAA,AIAA,AZ5CC,AawDa,oBAAQwB,eAAe,CAACJ,SADvB;AJVf,ADAA,AIAA,AZ5CA,AawDc,oBAAQ,QAFP;AJTf,ADAA,AIAA,ACac,wBAAY,kBAASsH,KAAT,EAAgB;AJZ1C,ADAA,AIAA,ACagB,qBAAOA,KAAK,CAACoS,MAAb;AJZhB,ADAA,AIAA,ACae;AJZf,ADAA,AIAA,ACMe,WAPW,EAcX;AJZf,ADAA,AIAA,ACac,oBAAQtZ,eAAe,CAACJ,SADvB;AJXf,ADAA,AIAA,ACac,oBAAQ,QAFP;AJVf,ADAA,AIAA,AZ5CA,Aa0Dc,Sb1DLjB,SAAT,CAAmBC,IAAnB,Ca0D0B,Cb1DD,iBa0DUsI,KAAT,EAAgB;AJb1C,ADAA,AIAA,AZ5CErI,Aa0Dc,Eb1DdA,aAAa,CAACD,IAAI,CAACE,Aa0DEoI,KAAK,CAACsS,GAAb,Cb1DD,CAAb;AS6CF,ADAA,AIAA,AZ5CC,Aa0Dc;AJbf,ADAA,AIAA,AZ5CA,AamDe,WAdW;AJQ1B,ADAA,AIAA,AClBsC,SAAD,CAAP,CARnB;AJ2BX,ADAA,AIAA,ACeU,8BAAsB,OA1CrB;AJ4BX,ADAA,AIAA,ACeU,oBAAY,SA3CX;AJ6BX,ADAA,AIAA,ACeU,oBAAY,SA5CX;AJ8BX,ADAA,AIAA,ACeU,qBAAa,KA7CZ;AJ+BX,ADAA,AIAA,ACgBU,oBAAY,kBAAStS,KAAT,EAAgB;AJftC,ADAA,AIAA,AZ5CA,Aa4DY,Sb5DHrI,Qa4DUqI,Kb5DnB,Aa4DwB,Cb5DDnI,Aa4DEia,GAAN,CAAUN,Ib5D7B,EAAiC,Ea4DrB;AJfZ,ADAA,AIAA,AZ5CE1Z,Aa4DS,Eb5DTA,KAAK,CAACC,IAAN,CAAWF,QAAX,EAAqBpB,OAArB,CAA6BuB,UAA7B;AS6CF,ADAA,AIAA,AZ5CC,AaUU,OA7CgF,CAA/D,CALnB;AJqFT,ADAA,AIAA,AZ5CA,Aa6DQ,4BAAsB,OAtGrB;AJsFT,ADAA,AIAA,ACiBQ,kBAAY,SAvGX;AJuFT,ADAA,AIAA,ACiBQ,kBAAY,KAxGX;AJwFT,ADAA,AIAA,ACiBQ,mBAAa,QAzGZ;AJyFT,ADAA,AIAA,ACkBQ,kBAAY,kBAASgI,KAAT,EAAgB;AJjBpC,ADAA,AIAA,ACkBU,eAAOA,KAAK,CAACsO,KAAN,CAAYqE,IAAnB;AJjBV,ADAA,AIAA,ACkBS;AJjBT,ADAA,AIAA,AZ5CA,AahDS,KA3CH,CAFa,CAAf,Eb6FK3a,UAAT,CAAoBN,IAApB,EAA0B;AS6C1B,ADAA,AIAA,AZ7C0B,AagEvB,GAlKY,GboGXO,UAFsB,GAGpBP,IAHoB,CAEtBO,UAFsB;AS8C1B,ADAA,AIAA,AZ1CE,Aa8DA,Mb9DIP,IAAI,Aa8DA,Cb9DCQ,MAAT,EAAiBR,IAAI,CAACQ,MAAL;AS2CnB,ADAA,AIAA,AZ1CE,AavGa;AJkJf,ADAA,AIAA,AZ5CE,OAEK,IAAID,UAAJ,EAAgBA,UAAU,CAACE,WAAX,CAAuBT,IAAvB;AS2CvB,ADAA,AIAA,AZ1CC;AS2CD,ADAA,AIAA;AHCA,ADAA,AIAA,AZ1CA,IAAMU,IAAI,GAAG,CAAb;AS2CA,ADAA,AIAA,AZ1CA,IAAMC,EAAE,GAAG,CAAX;AS2CA,ADAA,AIAA,AZ1CA,IAAMC,MAAM,GAAG,CAAf;AS2CA,ADAA,AIAA,AZ1CA,IAAMC,GAAG,GAAG,CAAZ;AS2CA,ADAA,AIAA,AZ1CA,IAAMC,IAAI,GAAG,CAAb;AS2CA,ADAA,AIAA,AZ1CA,IAAIC,YAAY,GAAG;AS2CnB,ADAA,AIAA,AZ1CEL,EAAAA,IAAI,EAAJA,IADiB;AS4CnB,ADAA,AIAA,AZ1CEC,EAAAA,EAAE,EAAFA,EAFiB;AS6CnB,ADAA,AIAA,AZ1CEC,EAAAA,MAAM,EAANA,MAHiB;AS8CnB,ADAA,AIAA,AZ1CEC,EAAAA,GAAG,EAAHA,GAJiB;AS+CnB,ADAA,AIAA,AZ1CEC,EAAAA,IAAI,EAAJA;AS2CF,ADAA,AIAA,AZhDmB,CAAnB;ASiDA,ADAA,AIAA,AZ1CA,IAAME,SAAS,GAAG,CAAlB;AS2CA,ADAA,AIAA,AZ1CA,IAAMC,KAAK,GAAG,CAAd;AS2CA,ADAA,AIAA,AZ1CA,IAAMC,IAAI,GAAG,CAAb;AS2CA,ADAA,AIAA,AZ1CA,IAAMC,KAAK,GAAG,CAAd;AS2CA,ADAA,AIAA,AZ1CA,IAAIC,eAAe,GAAG;AS2CtB,ADAA,AIAA,AZ1CEJ,EAAAA,SAAS,EAATA,SADoB;AS4CtB,ADAA,AIAA,AZ1CEC,EAAAA,KAAK,EAALA,KAFoB;AS6CtB,ADAA,AIAA,AZ1CEC,EAAAA,IAAI,EAAJA,IAHoB;AS8CtB,ADAA,AIAA,AZ1CEC,EAAAA,KAAK,EAALA;AS2CF,ADAA,AIAA,AZ/CsB,CAAtB;ASgDA,ADAA,AIAA,AZ1CA;AS2CA,ADAA,AIAA;AHCA,ADAA,AIAA;AHCA,ADAA,AIAA;AHCA,ADAA,AIAA;AHCA,ADAA,AIAA;AHCA,ADAA,AIAA,AZ1CA,SAASE,kBAAT,CAA4BC,iBAA5B,EAA+C;AS2C/C,ADAA,AIAA,AZ1CE,MAAMC,QAAQ,GAAGD,iBAAiB,CAACE,GAAlB,CAAsBC,SAAtB,CAAgC,IAAhC,CAAjB;AS2CF,ADAA,AIAA,AZ1CE,SAAO;AS2CT,AGAA,AZ1CIC,IAAAA,iBAAiB,EAAE,IADd;AS4CT,AGAA,AZ1CIH,IAAAA,QAAQ,EAARA,QAFK;AS6CT,AGAA,AZ1CIpB,IAAAA,QAAQ,EAAEC,KAAK,CAACC,IAAN,CAAWkB,QAAQ,CAACrB,UAApB;AS2Cd,AGAA,AZ9CS,GAAP;AS+CF,AGAA,AZ1CC;AS2CD,AGAA;AHCA,AGAA,IZzCWyB,MACP,GADFC;AS0CF,AGAA;AHCA,AGAA,AZxCA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAMC,MAAN,EAAc5B,QAAd,EAAwB6B,KAAxB,EAA+BC,GAA/B,EAAoCC,MAApC,EAA+C;ASyC9D,AGAA,AZxCE,MAAMC,QAAQ,GAAG,mBAAmBJ,MAApC;ASyCF,AGAA,AZxCE,MAAIK,WAAW,GAAGD,QAAlB;ASyCF,AGAA;AHCA,AGAA,AZxCE,SAAOH,KAAK,GAAGC,GAAf,EAAoB;ASyCtB,AGAA,AZxCI,QAAMI,KAAK,GAAGP,GAAG,CAAC3B,QAAQ,CAAC6B,KAAD,CAAT,EAAkB,CAAlB,CAAjB;ASyCJ,AGAA,AZxCID,IAAAA,MAAM,CAACO,YAAP,CAAoBD,KAApB,EAA2BH,MAA3B;ASyCJ,AGAA;AHCA,AGAA,AZxCI,QAAIC,QAAQ,IAAIC,WAAZ,IAA2BC,KAAK,CAACE,QAArC,EAA+C;ASyCnD,AGAA,AZxCMH,MAAAA,WAAW,GAAG,CAACA,WAAf;ASyCN,AGAA,AZ1CmD,UAG3CI,aAH2C,GAIzCT,MAJyC,CAG3CS,aAH2C;AS2CnD,AGAA,AZtCMT,MAAAA,MAAM,CAACS,aAAP,GAAuBA,aAAa,GAAG,CAAhB,GAAoBR,KAApB,GAA4BL,GAAG,CAACc,IAAJ,CAASV,MAAM,CAACW,gBAAP,CAAwB,QAAxB,CAAT,EAA4CL,KAA5C,CAAnD;ASuCN,AGAA,AZtCK;ASuCL,AGAA;AHCA,AGAA,AZtCIL,IAAAA,KAAK;ASuCT,AGAA,AZtCG;ASuCH,AGAA,AZtCC,CAlBD;ASyDA,AGAA;AHCA,AGAA,AZtCA,IAAMW,IAAI,GAAG,SAAPA,IAAO,CAACC,CAAD,EAAIC,CAAJ;ASuCb,AGAA,AZvCa,SAAUD,CAAC,IAAIC,CAAf;ASwCb,AGAA,AZxCa,CAAb;ASyCA,AGAA;AHCA,AGAA,AZxCA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC;ASyClB,AGAA,AZzCkB,SAAIA,CAAJ;AS0ClB,AGAA,AZ1CkB,CAAlB;AS2CA,AGAA;AHCA,AGAA,AZ1CA,IAAMnB,OAAO,GAAG,SAAVA,OAAU,CAACoB,SAAD,EAAYC,SAAZ,EAAuBC,OAAvB,EAAgCC,SAAhC,EAA2CC,SAA3C,EAAsDC,OAAtD,EAA+DC,OAA/D,EAA2E;AS2C3F,AGAA,AZ1CE,MAAMC,MAAM,GAAGF,OAAO,GAAGD,SAAzB;AS2CF,AGAA,AZ1CE;AS2CF,AGAA;AHCA,AGAA,AZ1CE,MAAIG,MAAM,GAAG,CAAb,EAAgB,OAAO,CAAC,CAAR;AS2ClB,AGAA;AHCA,AGAA,AZ1CE,SAAOL,OAAO,GAAGD,SAAV,IAAuBM,MAA9B,EAAsC;AS2CxC,AGAA,AZ1CI,QAAIC,CAAC,GAAGP,SAAR;AS2CJ,AGAA,AZ1CI,QAAIQ,CAAC,GAAGL,SAAR;AS2CJ,AGAA;AHCA,AGAA,AZ1CI,WAAOI,CAAC,GAAGN,OAAJ,IAAeO,CAAC,GAAGJ,OAAnB,IAA8BC,OAAO,CAACN,SAAS,CAACQ,CAAD,CAAV,EAAeL,SAAS,CAACM,CAAD,CAAxB,CAA5C,EAA0E;AS2C9E,AGAA,AZ1CMD,MAAAA,CAAC;AS2CP,AGAA,AZ1CMC,MAAAA,CAAC;AS2CP,AGAA,AZ1CK;AS2CL,AGAA;AHCA,AGAA,AZ1CI,QAAIA,CAAC,KAAKJ,OAAV,EAAmB,OAAOJ,SAAP;AS2CvB,AGAA,AZ1CIA,IAAAA,SAAS,GAAGO,CAAC,GAAG,CAAhB;AS2CJ,AGAA,AZ1CG;AS2CH,AGAA;AHCA,AGAA,AZ1CE,SAAO,CAAC,CAAR;AS2CF,AGAA,AZ1CC,CApBD;AS+DA,AGAA;AHCA,AGAA,AZ1CA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,WAAD,EAAcC,SAAd,EAAyBC,YAAzB,EAAuCC,YAAvC,EAAqDC,UAArD,EAAiET,OAAjE,EAA6E;AS2ChG,AGAA,AZ1CE,SAAOQ,YAAY,GAAGC,UAAf,IAA6BT,OAAO,CAACO,YAAY,CAACC,YAAD,CAAb,EAA6BH,WAAW,CAACC,SAAS,GAAG,CAAb,CAAxC,CAA3C,EAAqG;AS2CvG,AGAA,AZ1CIE,IAAAA,YAAY;AS2ChB,AGAA,AZ1CIF,IAAAA,SAAS;AS2Cb,AGAA,AZ1CG;AS2CH,AGAA;AHCA,AGAA,AZ1CE,SAAOA,SAAS,KAAK,CAArB;AS2CF,AGAA,AZ1CC,CAPD;ASkDA,AGAA;AHCA,AGAA,AZ1CA,IAAMI,IAAI,GAAG,SAAPA,IAAO,CAAClC,GAAD,EAAMmC,IAAN,EAAYC,CAAZ,EAAeX,MAAf,EAAuBrB,MAAvB;AS2Cb,AGAA,AZ3Ca,SAAkCgC,CAAC,GAAGX,MAAJ,GAAazB,GAAG,CAACmC,IAAI,CAACC,CAAD,CAAL,EAAU,CAAV,CAAhB,GAA+B,IAAIA,CAAJ,GAAQpC,GAAG,CAACmC,IAAI,CAACC,CAAC,GAAG,CAAL,CAAL,EAAc,CAAC,CAAf,CAAH,CAAqBC,WAA7B,GAA2CjC,MAA5G;AS4Cb,AGAA,AZ5Ca,CAAb;AS6CA,AGAA;AHCA,AGAA,AZ5CA,IAAM1B,MAAM,GAAG,SAATA,MAAS,CAACsB,GAAD,EAAM3B,QAAN,EAAgB6B,KAAhB,EAAuBC,GAAvB,EAA+B;AS6C9C,AGAA,AZ5CE,SAAOD,KAAK,GAAGC,GAAf;AS6CF,AGAA,AZ7CsBmC,IAAAA,IAAI,CAACtC,GAAG,CAAC3B,QAAQ,CAAC6B,KAAK,EAAN,CAAT,EAAoB,CAAC,CAArB,CAAJ,CAAJ;AS8CtB,AGAA,AZ9CE;AS+CF,AGAA,AZ9CC,CAFD,EAEG;AS+CH,AGAA,AZ9CA;AS+CA,AGAA,AZ9CA;AS+CA,AGAA;AHCA,AGAA;AHCA,AGAA,AZ9CA,IAAMqC,QAAQ,GAAG,CAAC,CAAlB;AS+CA,AGAA,AZ9CA,IAAMC,SAAS,GAAG,CAAlB;AS+CA,AGAA,AZ9CA,IAAMC,IAAI,GAAG,CAAb;AS+CA,AGAA,AZ9CA,IAAMC,QAAQ,GAAG,EAAjB;AS+CA,AGAA;AHCA,AGAA,AZ9CA,IAAMC,EAAE,GAAG,SAALA,EAAK,CAACd,WAAD,EAAce,WAAd,EAA2Bd,SAA3B,EAAsCe,aAAtC,EAAqDd,YAArD,EAAmEC,YAAnE,EAAiFC,UAAjF,EAA6Fa,cAA7F,EAAgH;AS+C3H,AGAA,AZ9CE,MAAIC,CAAC,GAAG,CAAR;AS+CF,AGAA,AZ9CE;AS+CF,AGAA;AHCA,AGAA,AZ9CE,MAAIC,MAAM,GAAGH,aAAa,GAAGC,cAAhB,GAAiCD,aAAjC,GAAiDC,cAA9D;AS+CF,AGAA,AZ9CE,MAAMG,IAAI,GAAG3E,KAAK,CAAC0E,MAAM,EAAP,CAAlB;AS+CF,AGAA,AZ9CE,MAAME,KAAK,GAAG5E,KAAK,CAAC0E,MAAD,CAAnB;AS+CF,AGAA,AZ9CEE,EAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,CAAC,CAAZ;AS+CF,AGAA;AHCA,AGAA,AZ9CE,OAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,MAApB,EAA4BZ,CAAC,EAA7B;AS+CF,AGAA,AZ/CmCc,IAAAA,KAAK,CAACd,CAAD,CAAL,GAAWH,UAAX;ASgDnC,AGAA,AZhDE;ASiDF,AGAA;AHCA,AGAA,AZhDE,MAAMkB,KAAK,GAAGpB,YAAY,CAACqB,KAAb,CAAmBpB,YAAnB,EAAiCC,UAAjC,CAAd;ASiDF,AGAA;AHCA,AGAA,AZhDE,OAAK,IAAIG,EAAC,GAAGQ,WAAb,EAA0BR,EAAC,GAAGN,SAA9B,EAAyCM,EAAC,EAA1C,EAA8C;ASiDhD,AGAA,AZhDI,QAAMiB,KAAK,GAAGF,KAAK,CAACrD,OAAN,CAAc+B,WAAW,CAACO,EAAD,CAAzB,CAAd;ASiDJ,AGAA;AHCA,AGAA,AZhDI,QAAI,CAAC,CAAD,GAAKiB,KAAT,EAAgB;ASiDpB,AGAA,AZhDM,UAAMC,QAAQ,GAAGD,KAAK,GAAGrB,YAAzB;ASiDN,AGAA,AZhDMe,MAAAA,CAAC,GAAGQ,KAAK,CAACL,KAAD,EAAQF,MAAR,EAAgBM,QAAhB,CAAT;ASiDN,AGAA,AZhDM;ASiDN,AGAA;AHCA,AGAA,AZhDM,UAAI,CAAC,CAAD,GAAKP,CAAT,EAAY;ASiDlB,AGAA,AZhDQG,QAAAA,KAAK,CAACH,CAAD,CAAL,GAAWO,QAAX;ASiDR,AGAA,AZhDQL,QAAAA,IAAI,CAACF,CAAD,CAAJ,GAAU;ASiDlB,AGAA,AZhDUS,UAAAA,IAAI,EAAEpB,EADE;ASkDlB,AGAA,AZhDUqB,UAAAA,IAAI,EAAEH,QAFE;ASmDlB,AGAA,AZhDUI,UAAAA,IAAI,EAAET,IAAI,CAACF,CAAC,GAAG,CAAL;ASiDpB,AGAA,AZpDkB,SAAV;ASqDR,AGAA,AZhDO;ASiDP,AGAA,AZhDK;ASiDL,AGAA,AZhDG;ASiDH,AGAA;AHCA,AGAA,AZhDEA,EAAAA,CAAC,GAAG,EAAEC,MAAN;ASiDF,AGAA,AZhDE,IAAEf,UAAF;ASiDF,AGAA;AHCA,AGAA,AZhDE,SAAOiB,KAAK,CAACH,CAAD,CAAL,GAAWd,UAAlB;ASiDF,AGAA,AZjDgC,MAAEc,CAAF;ASkDhC,AGAA,AZlDE;ASmDF,AGAA;AHCA,AGAA,AZlDEC,EAAAA,MAAM,GAAGF,cAAc,GAAGD,aAAjB,GAAiCE,CAA1C;ASmDF,AGAA,AZlDE,MAAMY,IAAI,GAAGrF,KAAK,CAAC0E,MAAD,CAAlB;ASmDF,AGAA,AZlDE,MAAIY,GAAG,GAAGX,IAAI,CAACF,CAAD,CAAd;ASmDF,AGAA,AZlDE,IAAEjB,SAAF;ASmDF,AGAA;AHCA,AGAA,AZlDE,SAAO8B,GAAP,EAAY;ASmDd,AGAA,AZnDc,eAINA,GAJM;ASoDd,AGAA,AZpDc,QAERJ,IAFQ,QAERA,IAFQ;ASqDd,AGAA,AZrDc,QAGRC,IAHQ,QAGRA,IAHQ;ASsDd,AGAA;AHCA,AGAA,AZjDI,WAAO3B,SAAS,GAAG0B,IAAnB,EAAyB;ASkD7B,AGAA,AZjDMG,MAAAA,IAAI,CAAC,EAAEX,MAAH,CAAJ,GAAiBR,SAAjB;ASkDN,AGAA,AZjDM,QAAEV,SAAF;ASkDN,AGAA,AZjDK;ASkDL,AGAA;AHCA,AGAA,AZjDI,WAAOG,UAAU,GAAGwB,IAApB,EAA0B;ASkD9B,AGAA,AZjDME,MAAAA,IAAI,CAAC,EAAEX,MAAH,CAAJ,GAAiBT,QAAjB;ASkDN,AGAA,AZjDM,QAAEN,UAAF;ASkDN,AGAA,AZjDK;ASkDL,AGAA;AHCA,AGAA,AZjDI0B,IAAAA,IAAI,CAAC,EAAEX,MAAH,CAAJ,GAAiBP,IAAjB;ASkDJ,AGAA,AZjDI,MAAEX,SAAF;ASkDJ,AGAA,AZjDI,MAAEG,UAAF;ASkDJ,AGAA,AZjDI2B,IAAAA,GAAG,GAAGA,GAAG,CAACF,IAAV;ASkDJ,AGAA,AZjDG;ASkDH,AGAA;AHCA,AGAA,AZjDE,SAAO5B,SAAS,IAAIc,WAApB,EAAiC;ASkDnC,AGAA,AZjDIe,IAAAA,IAAI,CAAC,EAAEX,MAAH,CAAJ,GAAiBR,SAAjB;ASkDJ,AGAA,AZjDI,MAAEV,SAAF;ASkDJ,AGAA,AZjDG;ASkDH,AGAA;AHCA,AGAA,AZjDE,SAAOG,UAAU,IAAID,YAArB,EAAmC;ASkDrC,AGAA,AZjDI2B,IAAAA,IAAI,CAAC,EAAEX,MAAH,CAAJ,GAAiBT,QAAjB;ASkDJ,AGAA,AZjDI,MAAEN,UAAF;ASkDJ,AGAA,AZjDG;ASkDH,AGAA;AHCA,AGAA,AZjDE,SAAO0B,IAAP;ASkDF,AGAA,AZjDC,CA3ED,EA2EG;ASkDH,AGAA,AZjDA;ASkDA,AGAA;AHCA,AGAA;AHCA,AGAA,AZjDA,IAAME,GAAG,GAAG,SAANA,GAAM,CAAChC,WAAD,EAAce,WAAd,EAA2BkB,IAA3B,EAAiC/B,YAAjC,EAA+CC,YAA/C,EAA6D+B,IAA7D,EAAmEvC,OAAnE,EAA+E;ASkD3F,AGAA,AZjDE,MAAMC,MAAM,GAAGqC,IAAI,GAAGC,IAAtB;ASkDF,AGAA,AZjDE,MAAMC,CAAC,GAAG,EAAV;ASkDF,AGAA,AZjDE,MAAIC,CAAJ,EAAOlB,CAAP,EAAUmB,CAAV,EAAavG,CAAb,EAAgBwG,EAAhB,EAAoBC,EAApB,EAAwBC,EAAxB;ASkDF,AGAA;AHCA,AGAA,AZjDEC,EAAAA,KAAK,EAAE,KAAKL,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAIxC,MAAjB,EAAyBwC,CAAC,EAA1B,EAA8B;ASkDvC,AGAA,AZjDI;ASkDJ,AGAA,AZjDI,QAAIA,CAAC,GAAGvB,QAAR,EAAkB,OAAO,IAAP;ASkDtB,AGAA,AZjDI2B,IAAAA,EAAE,GAAGJ,CAAC,GAAG,CAAT;ASkDJ,AGAA,AZjDI;ASkDJ,AGAA;AHCA,AGAA,AZjDIE,IAAAA,EAAE,GAAGF,CAAC,GAAGD,CAAC,CAACC,CAAC,GAAG,CAAL,CAAJ,GAAc,CAAC,CAAD,EAAI,CAAJ,CAApB;ASkDJ,AGAA,AZjDIG,IAAAA,EAAE,GAAGJ,CAAC,CAACC,CAAD,CAAD,GAAO,EAAZ;ASkDJ,AGAA;AHCA,AGAA,AZjDI,SAAKlB,CAAC,GAAG,CAACkB,CAAV,EAAalB,CAAC,IAAIkB,CAAlB,EAAqBlB,CAAC,IAAI,CAA1B,EAA6B;ASkDjC,AGAA,AZjDM,UAAIA,CAAC,KAAK,CAACkB,CAAP,IAAYlB,CAAC,KAAKkB,CAAN,IAAWE,EAAE,CAACE,EAAE,GAAGtB,CAAL,GAAS,CAAV,CAAF,GAAiBoB,EAAE,CAACE,EAAE,GAAGtB,CAAL,GAAS,CAAV,CAA9C,EAA4D;ASkDlE,AGAA,AZjDQpF,QAAAA,CAAC,GAAGwG,EAAE,CAACE,EAAE,GAAGtB,CAAL,GAAS,CAAV,CAAN;ASkDR,AGAA,AZjDO,OAFD,MAEO;ASkDb,AGAA,AZjDQpF,QAAAA,CAAC,GAAGwG,EAAE,CAACE,EAAE,GAAGtB,CAAL,GAAS,CAAV,CAAF,GAAiB,CAArB;ASkDR,AGAA,AZjDO;ASkDP,AGAA;AHCA,AGAA,AZjDMmB,MAAAA,CAAC,GAAGvG,CAAC,GAAGoF,CAAR;ASkDN,AGAA;AHCA,AGAA,AZjDM,aAAOpF,CAAC,GAAGoG,IAAJ,IAAYG,CAAC,GAAGJ,IAAhB,IAAwBtC,OAAO,CAACO,YAAY,CAACC,YAAY,GAAGrE,CAAhB,CAAb,EAAiCkE,WAAW,CAACe,WAAW,GAAGsB,CAAf,CAA5C,CAAtC,EAAsG;ASkD5G,AGAA,AZjDQvG,QAAAA,CAAC;ASkDT,AGAA,AZjDQuG,QAAAA,CAAC;ASkDT,AGAA,AZjDO;ASkDP,AGAA;AHCA,AGAA,AZjDM,UAAIvG,CAAC,KAAKoG,IAAN,IAAcG,CAAC,KAAKJ,IAAxB,EAA8B;ASkDpC,AGAA,AZjDQ,cAAMQ,KAAN;ASkDR,AGAA,AZjDO;ASkDP,AGAA;AHCA,AGAA,AZjDMF,MAAAA,EAAE,CAACH,CAAC,GAAGlB,CAAL,CAAF,GAAYpF,CAAZ;ASkDN,AGAA,AZjDK;ASkDL,AGAA,AZjDG;ASkDH,AGAA;AHCA,AGAA,AZjDE,MAAMgG,IAAI,GAAGrF,KAAK,CAAC2F,CAAC,GAAG,CAAJ,GAAQxC,MAAM,GAAG,CAAlB,CAAlB;ASkDF,AGAA,AZjDE,MAAI8C,OAAO,GAAGZ,IAAI,CAAClC,MAAL,GAAc,CAA5B;ASkDF,AGAA;AHCA,AGAA,AZjDE,OAAKwC,CAAC,GAAGD,CAAC,CAACvC,MAAF,GAAW,CAApB,EAAuBwC,CAAC,IAAI,CAA5B,EAA+BA,CAAC,EAAhC,EAAoC;ASkDtC,AGAA,AZjDI,WAAOtG,CAAC,GAAG,CAAJ,IAASuG,CAAC,GAAG,CAAb,IAAkB1C,OAAO,CAACO,YAAY,CAACC,YAAY,GAAGrE,CAAf,GAAmB,CAApB,CAAb,EAAqCkE,WAAW,CAACe,WAAW,GAAGsB,CAAd,GAAkB,CAAnB,CAAhD,CAAhC,EAAwG;ASkD5G,AGAA,AZjDM;ASkDN,AGAA,AZjDMP,MAAAA,IAAI,CAACY,OAAO,EAAR,CAAJ,GAAkB9B,IAAlB;ASkDN,AGAA,AZjDM9E,MAAAA,CAAC;ASkDP,AGAA,AZjDMuG,MAAAA,CAAC;ASkDP,AGAA,AZjDK;ASkDL,AGAA;AHCA,AGAA,AZjDI,QAAI,CAACD,CAAL,EAAQ;ASkDZ,AGAA,AZjDII,IAAAA,EAAE,GAAGJ,CAAC,GAAG,CAAT;ASkDJ,AGAA,AZjDI;ASkDJ,AGAA;AHCA,AGAA,AZjDIE,IAAAA,EAAE,GAAGF,CAAC,GAAGD,CAAC,CAACC,CAAC,GAAG,CAAL,CAAJ,GAAc,CAAC,CAAD,EAAI,CAAJ,CAApB;ASkDJ,AGAA,AZjDIlB,IAAAA,CAAC,GAAGpF,CAAC,GAAGuG,CAAR;ASkDJ,AGAA;AHCA,AGAA,AZjDI,QAAInB,CAAC,KAAK,CAACkB,CAAP,IAAYlB,CAAC,KAAKkB,CAAN,IAAWE,EAAE,CAACE,EAAE,GAAGtB,CAAL,GAAS,CAAV,CAAF,GAAiBoB,EAAE,CAACE,EAAE,GAAGtB,CAAL,GAAS,CAAV,CAA9C,EAA4D;ASkDhE,AGAA,AZjDM;ASkDN,AGAA,AZjDMmB,MAAAA,CAAC;ASkDP,AGAA,AZjDMP,MAAAA,IAAI,CAACY,OAAO,EAAR,CAAJ,GAAkB/B,SAAlB;ASkDN,AGAA,AZjDK,KAJD,MAIO;ASkDX,AGAA,AZjDM;ASkDN,AGAA,AZjDM7E,MAAAA,CAAC;ASkDP,AGAA,AZjDMgG,MAAAA,IAAI,CAACY,OAAO,EAAR,CAAJ,GAAkBhC,QAAlB;ASkDN,AGAA,AZjDK;ASkDL,AGAA,AZjDG;ASkDH,AGAA;AHCA,AGAA,AZjDE,SAAOoB,IAAP;ASkDF,AGAA,AZjDC,CAlED;ASoHA,AGAA;AHCA,AGAA,AZjDA,IAAMa,SAAS,GAAG,SAAZA,SAAY,CAACb,IAAD,EAAO3D,GAAP,EAAYvB,UAAZ,EAAwBoD,WAAxB,EAAqCe,WAArC,EAAkDb,YAAlD,EAAgEC,YAAhE,EAA8EyC,aAA9E,EAA6FrE,MAA7F,EAAwG;ASkD1H,AGAA,AZjDE,MAAMsE,IAAI,GAAG,EAAb;ASkDF,AGAA,AZjDE,MAAMjD,MAAM,GAAGkC,IAAI,CAAClC,MAApB;ASkDF,AGAA,AZjDE,MAAIkD,YAAY,GAAG3C,YAAnB;ASkDF,AGAA,AZjDE,MAAII,CAAC,GAAG,CAAR;ASkDF,AGAA;AHCA,AGAA,AZjDE,SAAOA,CAAC,GAAGX,MAAX,EAAmB;ASkDrB,AGAA,AZjDI,YAAQkC,IAAI,CAACvB,CAAC,EAAF,CAAZ;ASkDJ,AGAA,AZjDM,WAAKK,IAAL;ASkDN,AGAA,AZjDQG,QAAAA,WAAW;ASkDnB,AGAA,AZjDQ+B,QAAAA,YAAY;ASkDpB,AGAA,AZjDQ;ASkDR,AGAA;AHCA,AGAA,AZjDM,WAAKnC,SAAL;ASkDN,AGAA,AZjDQ;ASkDR,ATjDQkC,QAAAA,IAAI,CAACE,IAAL,CAAU/C,WAAW,CAACe,WAAD,CAArB;ASkDR,ATjDQ7C,QAAAA,MAAM,CAACC,GAAD,EAAMvB,UAAN,EAAkBoD,WAAlB,EAA+Be,WAAW,EAA1C,EAA8CA,WAA9C,EAA2D+B,YAAY,GAAGF,aAAf,GAA+BzE,GAAG,CAAC+B,YAAY,CAAC4C,YAAD,CAAb,EAA6B,CAA7B,CAAlC,GAAoEvE,MAA/H,CAAN;ASkDR,ATjDQ;ASkDR;AACA,ATjDM,WAAKmC,QAAL;ASkDN,ATjDQoC,QAAAA,YAAY;ASkDpB,ATjDQ;ASkDR,AThEI;ASiEJ,ATjDG;ASkDH;AACA,ATjDEvC,EAAAA,CAAC,GAAG,CAAJ;ASkDF;AACA,ATjDE,SAAOA,CAAC,GAAGX,MAAX,EAAmB;ASkDrB,ATjDI,YAAQkC,IAAI,CAACvB,CAAC,EAAF,CAAZ;ASkDJ,ATjDM,WAAKK,IAAL;ASkDN,ATjDQT,QAAAA,YAAY;ASkDpB,ATjDQ;ASkDR;AACA,ATjDM,WAAKO,QAAL;ASkDN,ATjDQ;ASkDR,ATjDQ,YAAI,CAAC,CAAD,GAAKmC,IAAI,CAAC5E,OAAL,CAAaiC,YAAY,CAACC,YAAD,CAAzB,CAAT,EAAmDA,YAAY,GAA/D,KAAuEtD,MAAM,CAACsB,GAAD,EAAM+B,YAAN,EAAoBC,YAAY,EAAhC,EAAoCA,YAApC,CAAN;ASkD/E,ATjDQ;ASkDR,AT1DI;AS2DJ,ATjDG;ASkDH,ATjDC,CAvCD;ASyFA;AACA,ATjDA,IAAMuB,KAAK,GAAG,SAARA,KAAQ,CAACsB,GAAD,EAAMpD,MAAN,EAAcqD,CAAd,EAAoB;ASkDlC,ATjDE,MAAIC,EAAE,GAAG,CAAT;ASkDF,ATjDE,MAAIC,EAAE,GAAGvD,MAAT;ASkDF;AACA,ATjDE,SAAOsD,EAAE,GAAGC,EAAZ,EAAgB;ASkDlB,ATjDI,QAAMC,GAAG,GAAG,CAACF,EAAE,GAAGC,EAAN,IAAY,CAAZ,KAAkB,CAA9B;ASkDJ,ATjDI,QAAIF,CAAC,GAAGD,GAAG,CAACI,GAAD,CAAX,EAAkBD,EAAE,GAAGC,GAAL,CAAlB,KAAgCF,EAAE,GAAGE,GAAG,GAAG,CAAX;ASkDpC,ATjDG;ASkDH;AACA,ATjDE,SAAOF,EAAP;ASkDF,ATjDC,CAVD;AS4DA;AACA,ATjDA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAAClF,GAAD,EAAMvB,UAAN,EAAkBoD,WAAlB,EAA+Be,WAA/B,EAA4Cd,SAA5C,EAAuDe,aAAvD,EAAsEd,YAAtE,EAAoFC,YAApF,EAAkGC,UAAlG,EAA8Ga,cAA9G,EAA8H2B,aAA9H,EAA6IjD,OAA7I,EAAsJpB,MAAtJ,EAAiK;ASkDnL,ATjDEoE,EAAAA,SAAS,CAACX,GAAG,CAAChC,WAAD,EAAce,WAAd,EAA2BC,aAA3B,EAA0Cd,YAA1C,EAAwDC,YAAxD,EAAsEc,cAAtE,EAAsFtB,OAAtF,CAAH,IAAqGmB,EAAE,CAACd,WAAD,EAAce,WAAd,EAA2Bd,SAA3B,EAAsCe,aAAtC,EAAqDd,YAArD,EAAmEC,YAAnE,EAAiFC,UAAjF,EAA6Fa,cAA7F,CAAxG,EAAsN9C,GAAtN,EAA2NvB,UAA3N,EAAuOoD,WAAvO,EAAoPe,WAApP,EAAiQb,YAAjQ,EAA+QC,YAA/Q,EAA6RyC,aAA7R,EAA4SrE,MAA5S,CAAT;ASkDF,ATjDC,CAFD;ASoDA;AACA,ATjDA,IAAMkC,IAAI,GAAG,SAAPA,IAAO,CAAApE,IAAI;ASkDjB,ATlDiB,SAAI,CAACA,IAAI,CAACQ,MAAL,IAAeyG,SAAhB,EAA2BxE,IAA3B,CAAgCzC,IAAhC,CAAJ;ASmDjB,ATnDiB,CAAjB;ASoDA;AACA,ATnDA,SAASiH,SAAT,GAAqB;ASoDrB,ATpDqB,MAEjB1G,UAFiB,GAGf,IAHe,CAEjBA,UAFiB;ASqDrB,ATjDE;ASkDF;AACA,ATjDE,MAAIA,UAAJ,EAAgBA,UAAU,CAACE,WAAX,CAAuB,IAAvB;ASkDlB,ATjDC;ASkDD,ATjDA;ASkDA;AACA;AACA,ATjDA,IAAMyG,OAAO,GAAG,SAAVA,OAAU,CAAC3G,UAAD,EAAa;ASkD7B,ATjDAsD,YADgB,EACF;ASkDd,ATjDAF,WAFgB,EAEH;ASkDb,ATjDAwD,OAHgB,CAGR;ASkDR,ATjDA;ASkDA,ATjDA;ASkDA,ATjDA;ASkDA,ATxDgB,EAOX;ASkDL,ATjDE,MAAI,CAACA,OAAL,EAAcA,OAAO,GAAG,EAAV;ASkDhB,ATjDE,MAAM7D,OAAO,GAAG6D,OAAO,CAAC7D,OAAR,IAAmBX,IAAnC;ASkDF,ATjDE,MAAMb,GAAG,GAAGqF,OAAO,CAACnH,IAAR,IAAgB8C,QAA5B;ASkDF,ATjDE,MAAMZ,MAAM,GAAGiF,OAAO,CAACjF,MAAR,IAAkB,IAAlB,GAAyB,IAAzB,GAAgCJ,GAAG,CAACqF,OAAO,CAACjF,MAAT,EAAiB,CAAjB,CAAlD;ASkDF,ATjDE,MAAMqE,aAAa,GAAG1C,YAAY,CAACN,MAAnC;ASkDF,ATjDE,MAAIQ,UAAU,GAAGwC,aAAjB;ASkDF,ATjDE,MAAIzC,YAAY,GAAG,CAAnB;ASkDF,ATjDE,MAAIF,SAAS,GAAGD,WAAW,CAACJ,MAA5B;ASkDF,ATjDE,MAAImB,WAAW,GAAG,CAAlB,CATG,CASkB;ASkDvB;AACA,ATjDE,SAAOZ,YAAY,GAAGC,UAAf,IAA6BW,WAAW,GAAGd,SAA3C,IAAwDN,OAAO,CAACO,YAAY,CAACC,YAAD,CAAb,EAA6BH,WAAW,CAACe,WAAD,CAAxC,CAAtE,EAA8H;ASkDhI,ATjDIZ,IAAAA,YAAY;ASkDhB,ATjDIY,IAAAA,WAAW;ASkDf,ATjDG,GAdE,CAcD;ASkDJ;AACA;AACA,ATjDE,SAAOZ,YAAY,GAAGC,UAAf,IAA6BW,WAAW,GAAGd,SAA3C,IAAwDN,OAAO,CAACO,YAAY,CAACE,UAAU,GAAG,CAAd,CAAb,EAA+BJ,WAAW,CAACC,SAAS,GAAG,CAAb,CAA1C,CAAtE,EAAkI;ASkDpI,ATjDIG,IAAAA,UAAU;ASkDd,ATjDIH,IAAAA,SAAS;ASkDb,ATjDG;ASkDH;AACA,ATjDE,MAAMwD,WAAW,GAAGtD,YAAY,KAAKC,UAArC;ASkDF,ATjDE,MAAMsD,UAAU,GAAG3C,WAAW,KAAKd,SAAnC,CAvBG,CAuB2C;ASkDhD;AACA,ATjDE,MAAIwD,WAAW,IAAIC,UAAnB,EAA+B,OAAO1D,WAAP,CAzB5B,CAyBgD;ASkDrD;AACA,ATjDE,MAAIyD,WAAW,IAAI1C,WAAW,GAAGd,SAAjC,EAA4C;ASkD9C,ATjDI/B,IAAAA,MAAM,CAACC,GAAD,EAAMvB,UAAN,EAAkBoD,WAAlB,EAA+Be,WAA/B,EAA4Cd,SAA5C,EAAuDI,IAAI,CAAClC,GAAD,EAAM+B,YAAN,EAAoBC,YAApB,EAAkCyC,aAAlC,EAAiDrE,MAAjD,CAA3D,CAAN;ASkDJ,ATjDI,WAAOyB,WAAP;ASkDJ,ATjDG,GA9BE,CA8BD;ASkDJ;AACA;AACA,ATjDE,MAAI0D,UAAU,IAAIvD,YAAY,GAAGC,UAAjC,EAA6C;ASkD/C,ATjDIvD,IAAAA,MAAM,CAACsB,GAAD,EAAM+B,YAAN,EAAoBC,YAApB,EAAkCC,UAAlC,CAAN;ASkDJ,ATjDI,WAAOJ,WAAP;ASkDJ,ATjDG;ASkDH;AACA,ATjDE,MAAMiB,cAAc,GAAGb,UAAU,GAAGD,YAApC;ASkDF,ATjDE,MAAMa,aAAa,GAAGf,SAAS,GAAGc,WAAlC;ASkDF,ATjDE,MAAIR,CAAC,GAAG,CAAC,CAAT,CAxCG,CAwCS;ASkDd;AACA,ATjDE,MAAIU,cAAc,GAAGD,aAArB,EAAoC;ASkDtC,ATjDIT,IAAAA,CAAC,GAAGtC,OAAO,CAAC+B,WAAD,EAAce,WAAd,EAA2Bd,SAA3B,EAAsCC,YAAtC,EAAoDC,YAApD,EAAkEC,UAAlE,EAA8ET,OAA9E,CAAX,CADkC,CACiE;ASkDvG;AACA,ATjDI,QAAI,CAAC,CAAD,GAAKY,CAAT,EAAY;ASkDhB,ATjDMrC,MAAAA,MAAM,CAACC,GAAD,EAAMvB,UAAN,EAAkBoD,WAAlB,EAA+Be,WAA/B,EAA4CR,CAA5C,EAA+CpC,GAAG,CAAC+B,YAAY,CAACC,YAAD,CAAb,EAA6B,CAA7B,CAAlD,CAAN;ASkDN,ATjDMjC,MAAAA,MAAM,CAACC,GAAD,EAAMvB,UAAN,EAAkBoD,WAAlB,EAA+BO,CAAC,GAAGU,cAAnC,EAAmDhB,SAAnD,EAA8DI,IAAI,CAAClC,GAAD,EAAM+B,YAAN,EAAoBE,UAApB,EAAgCwC,aAAhC,EAA+CrE,MAA/C,CAAlE,CAAN;ASkDN,ATjDM,aAAOyB,WAAP;ASkDN,ATjDK;ASkDL,ATjDG;ASkDH,ATjDE;ASkDF,AT3DE,OAUK,IAAIgB,aAAa,GAAGC,cAApB,EAAoC;ASkD3C,ATjDMV,MAAAA,CAAC,GAAGtC,OAAO,CAACiC,YAAD,EAAeC,YAAf,EAA6BC,UAA7B,EAAyCJ,WAAzC,EAAsDe,WAAtD,EAAmEd,SAAnE,EAA8EN,OAA9E,CAAX,CADqC,CAC8D;ASkDzG;AACA,ATjDM,UAAI,CAAC,CAAD,GAAKY,CAAT,EAAY;ASkDlB,ATjDQ1D,QAAAA,MAAM,CAACsB,GAAD,EAAM+B,YAAN,EAAoBC,YAApB,EAAkCI,CAAlC,CAAN;ASkDR,ATjDQ1D,QAAAA,MAAM,CAACsB,GAAD,EAAM+B,YAAN,EAAoBK,CAAC,GAAGS,aAAxB,EAAuCZ,UAAvC,CAAN;ASkDR,ATjDQ,eAAOJ,WAAP;ASkDR,ATjDO;ASkDP,ATjDK,KA5DA,CA4DC;ASkDN,ATjDE;ASkDF;AACA,ATjDE;ASkDF;AACA;AACA,ATjDE,MAAIiB,cAAc,GAAG,CAAjB,IAAsBD,aAAa,GAAG,CAA1C,EAA6C;ASkD/C,ATjDI9C,IAAAA,MAAM,CAACC,GAAD,EAAMvB,UAAN,EAAkBoD,WAAlB,EAA+Be,WAA/B,EAA4Cd,SAA5C,EAAuD9B,GAAG,CAAC+B,YAAY,CAACC,YAAD,CAAb,EAA6B,CAA7B,CAA1D,CAAN;ASkDJ,ATjDItD,IAAAA,MAAM,CAACsB,GAAD,EAAM+B,YAAN,EAAoBC,YAApB,EAAkCC,UAAlC,CAAN;ASkDJ,ATjDI,WAAOJ,WAAP;ASkDJ,ATjDG,GAtEE,CAsED;ASkDJ,ATjDE;ASkDF,ATjDE;ASkDF,ATjDE;ASkDF,ATjDE;ASkDF,ATjDE;ASkDF,ATjDE;ASkDF;AACA;AACA,ATjDE,MAAIiB,cAAc,KAAKD,aAAnB,IAAoCjB,UAAU,CAACC,WAAD,EAAcC,SAAd,EAAyBC,YAAzB,EAAuCC,YAAvC,EAAqDC,UAArD,EAAiET,OAAjE,CAAlD,EAA6H;ASkD/H,ATjDIzB,IAAAA,MAAM,CAACC,GAAD,EAAMvB,UAAN,EAAkBoD,WAAlB,EAA+Be,WAA/B,EAA4Cd,SAA5C,EAAuDI,IAAI,CAAClC,GAAD,EAAM+B,YAAN,EAAoBE,UAApB,EAAgCwC,aAAhC,EAA+CrE,MAA/C,CAA3D,CAAN;ASkDJ,ATjDI,WAAOyB,WAAP;ASkDJ,ATjDG,GAlFE,CAkFD;ASkDJ;AACA;AACA,ATjDEqD,EAAAA,SAAS,CAAClF,GAAD,EAAMvB,UAAN,EAAkBoD,WAAlB,EAA+Be,WAA/B,EAA4Cd,SAA5C,EAAuDe,aAAvD,EAAsEd,YAAtE,EAAoFC,YAApF,EAAkGC,UAAlG,EAA8Ga,cAA9G,EAA8H2B,aAA9H,EAA6IjD,OAA7I,EAAsJpB,MAAtJ,CAAT;ASkDF,ATjDE,SAAOyB,WAAP;ASkDF,ATjDC,CA9FD;ASgJA,ATjDA;ASkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ATjDA,SAAS2D,WAAT,CAAqB/I,OAArB,EAA8BC,IAA9B,EAAoC;ASkDpC,ATjDE,SAAO,QAAOD,OAAP,MAAmBC,IAA1B;ASkDF,ATjDC;ASkDD,ATjDA;ASkDA;AACA;AACA;AACA;AACA;AACA;AACA,ATjDA,SAAS+I,KAAT,CAAeC,EAAf,EAAmB;ASkDnB,ATjDE,MAAMC,KAAK,GAAGD,EAAE,CAACE,eAAjB;ASkDF,ATjDE,SAAO,CAAC,CAACD,KAAF,IAAWA,KAAK,KAAK,IAA5B;ASkDF,ATjDC;ASkDD,ATjDA;ASkDA;AACA;AACA;AACA;AACA;AACA;AACA,ATjDA,SAASE,UAAT,CAAoBH,EAApB,EAAwB;ASkDxB,ATjDE,SAAO,CAACI,KAAK,CAACJ,EAAE,CAACK,OAAJ,CAAb;ASkDF,ATjDC;ASkDD,ATjDA;ASkDA;AACA;AACA;AACA;AACA;AACA;AACA,ATjDA,SAASC,YAAT,CAAsBpJ,KAAtB,EAA6B;ASkD7B,ATjDE,SAAO4I,WAAW,CAAC5I,KAAD,EAAQ,UAAR,CAAlB;ASkDF,ATjDC;ASkDD,ATjDA;ASkDA;AACA;AACA;AACA;AACA;AACA;AACA,ATjDA,SAASqJ,SAAT,CAAmBrJ,KAAnB,EAA0B;ASkD1B,ATjDE,SAAO4I,WAAW,CAAC5I,KAAD,EAAQ,SAAR,CAAlB;ASkDF,ATjDC;ASkDD,ATjDA;ASkDA;AACA;AACA;AACA;AACA;AACA;AACA,ATjDA,SAASsJ,QAAT,CAAkBtJ,KAAlB,EAAyB;ASkDzB,ATjDE,SAAO,CAACkJ,KAAK,CAAClJ,KAAD,CAAN,IAAiB4I,WAAW,CAAC5I,KAAD,EAAQ,QAAR,CAAnC;ASkDF,ATjDC;ASkDD,ATjDA;ASkDA;AACA;AACA;AACA;AACA;AACA;AACA,ATjDA,SAASkJ,KAAT,CAAelJ,KAAf,EAAsB;ASkDtB,ATjDE,SAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKuJ,SAAnC;ASkDF,ATjDC;ASkDD;AACA,ATjDA,IAAMC,aAAa,GAAGxL,MAAM,CAAC,SAAD,CAA5B;ASkDA,ATjDA,IAAMyL,WAAW,GAAGhK,MAAM,CAACiK,IAAP,CAAY;ASkDhC,ATjDE;ASkDF,ATjDE;ASkDF,ATjDE;ASkDF,ATjDE;ASkDF,ATjDE;ASkDF,ATjDE;ASkDF,ATjDE;ASkDF,ATjDE;ASkDF,ATjDEnD,EAAAA,KAAK,EAAE,EATuB;AS2DhC,AThDE;ASiDF,AThDE;ASiDF,AThDE;ASiDF,AThDE;ASiDF,AThDE;ASiDF,AThDE;ASiDF,AThDEoD,EAAAA,KAjB8B,iBAiBxBC,KAjBwB,EAiBjBC,WAjBiB,EAiBJ;ASiD5B,AThDI,WAAO,KAAKC,MAAL,CAAYF,KAAZ,EAAmBC,WAAnB,CAAP;ASiDJ,AThDG,GAnB6B;ASoEhC,AT/CEC,EAAAA,MArB8B,kBAqBvBF,KArBuB,EAqBhBC,WArBgB,EAqBH;ASgD7B,AThD6B,QAEvBE,WAFuB,GAKrB,IALqB,CAEvBA,WAFuB;ASiD7B,ATjD6B,QAGvBxD,KAHuB,GAKrB,IALqB,CAGvBA,KAHuB;ASkD7B,ATlD6B,QAIvByD,WAJuB,GAKrB,IALqB,CAIvBA,WAJuB;ASmD7B,AT7CI,QAAMC,UAAU,GAAGL,KAAK,KAAKJ,aAAV,GAA0B,IAA1B,GAAiC,KAAKU,QAAL,CAAcN,KAAd,CAApD;AS8CJ,AT7CI,QAAMO,KAAK,GAAGF,UAAU,GAAGvI,KAAK,CAACC,IAAN,CAAWsI,UAAX,CAAH,GAA4B,EAApD;AS8CJ,AT7CI,QAAM5G,MAAM,GAAG0G,WAAW,CAAClI,UAA3B,CARyB,CAQc;AS8C3C;AACA,ATvD6B,uBAcrBuI,WAAW,CAACD,KAAD,EAAQP,KAAR,EAAeC,WAAf,EAA4B,IAA5B,CAdU;ASwD7B,ATxD6B,QAWvBQ,cAXuB,gBAWvBA,cAXuB;ASyD7B,ATzD6B,QAYvBC,OAZuB,gBAYvBA,OAZuB;AS0D7B,AT1D6B,QAavBrF,WAbuB,gBAavBA,WAbuB,EAcyB;AS6CtD;AACA;AACA,AT7CIuD,IAAAA,OAAO,CAACnF,MAAD,EAASkD,KAAT,EAAgBtB,WAAhB,EAA6B;AS8CxC,AT7CMzB,MAAAA,MAAM,EAAEuG,WAD0B;AS+CxC,AT7CMzI,MAAAA,IAAI,EAAEiJ,KAAK,CAAC7I,KAAK,CAACC,IAAN,CAAWqI,WAAW,CAACQ,MAAZ,EAAX,CAAD,EAAmCX,WAAnC;AS8CjB,AThDwC,KAA7B,CAAP,CAhByB,CAmBrB;AS8CR;AACA,AT7CIS,IAAAA,OAAO,CAACjK,OAAR,CAAgB,UAAAoK,EAAE;AS8CtB,AT9CsB,aAAIA,EAAE,EAAN;AS+CtB,AT/CsB,KAAlB,EArByB,CAqBI;ASgDjC;AACA,AT/CI,SAAKT,WAAL,GAAmBK,cAAnB;ASgDJ,AT/CI,SAAK9D,KAAL,GAAatB,WAAb;ASgDJ,AT/CI,WAAO,IAAP;ASgDJ,AT/CG,GA/C6B;AS+FhC,AT9CEyF,EAAAA,OAjD8B,mBAiDtBd,KAjDsB,EAiDfC,WAjDe,EAiDF;AS+C9B,AT9CI,SAAKC,MAAL,CAAYN,aAAZ,EAA2BK,WAA3B;AS+CJ,AT9CI,WAAO,IAAP;AS+CJ,AT9CG;AS+CH,ATnGgC,CAAZ,CAApB;ASoGA,AT7CA;AS8CA;AACA;AACA;AACA;AACA;AACA;AACA,AT7CA,SAASU,KAAT,CAAeI,SAAf,EAA0Bd,WAA1B,EAAuC;AS8CvC,AT7CE,SAAO,UAACe,IAAD,EAAOC,IAAP,EAAgB;AS8CzB,AT7CI,QAAIA,IAAI,GAAG,CAAX,EAAc;AS8ClB,AT7CM,UAAMhL,OAAO,GAAG8K,SAAS,CAACG,GAAV,EAAhB;AS8CN;AACA,AT7CM,UAAIjL,OAAJ,EAAa;AS8CnB,AT9CmB,YAETkL,QAFS,GAIPlL,OAJO,CAETkL,QAFS;AS+CnB,AT/CmB,YAGTC,OAHS,GAIPnL,OAJO,CAGTmL,OAHS,EAIE;AS4CrB,AT3CQ;AS4CR;AACA,AT3CQD,QAAAA,QAAQ,CAACL,OAAT,CAAiBM,OAAjB,EAA0BnB,WAA1B,EAAuC,IAAvC;AS4CR,AT3CO;AS4CP,AT3CK;AS4CL;AACA,AT3CI,WAAOe,IAAP;AS4CJ,AT3CG,GAhBD;AS4DF,AT3CC;AS4CD,AT3CA;AS4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AT3CA,SAASK,cAAT,CAAwBC,SAAxB,EAAmCF,OAAnC,EAA4C;AS4C5C,AT3CE,SAAOE,SAAS,GAAGC,OAAO,CAACD,SAAS,CAACF,OAAD,CAAV,CAAP,KAAgC,KAAnC,GAA2C,KAA3D;AS4CF,AT3CC;AS4CD,AT3CA;AS4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AT3CA,SAASI,WAAT,CAAqBxB,KAArB,EAA4ByB,IAA5B,EAAkC;AS4ClC,AT5CkC,MAE9BC,QAF8B,GAM5BD,IAN4B,CAE9BC,QAF8B;AS6ClC,AT7CkC,MAG9BC,SAH8B,GAM5BF,IAN4B,CAG9BE,SAH8B;AS8ClC,AT9CkC,MAI9B9E,KAJ8B,GAM5B4E,IAN4B,CAI9B5E,KAJ8B;AS+ClC,AT/CkC,MAK9BmE,IAL8B,GAM5BS,IAN4B,CAK9BT,IAL8B;ASgDlC,ATzCEhB,EAAAA,KAAK,CAAC0B,QAAD,CAAL,GAAkBV,IAAlB;AS0CF,ATzCE,MAAIW,SAAJ,EAAe3B,KAAK,CAAC2B,SAAD,CAAL,GAAmB9E,KAAnB;AS0CjB,ATzCE,SAAOmD,KAAP;AS0CF,ATzCC;AS0CD,ATzCA;AS0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ATzCA,SAASQ,WAAT,CAAqBD,KAArB,EAA4BP,KAA5B,EAAmCC,WAAnC,EAAgD2B,OAAhD,EAAyD;AS0CzD,AT1CyD,MAErDN,SAFqD,GAUnDM,OAVmD,CAErDN,SAFqD;AS2CzD,AT3CyD,MAGrDH,QAHqD,GAUnDS,OAVmD,CAGrDT,QAHqD;AS4CzD,AT5CyD,MAIrDf,WAJqD,GAUnDwB,OAVmD,CAIrDxB,WAJqD;AS6CzD,AT7CyD,MAKrDsB,QALqD,GAUnDE,OAVmD,CAKrDF,QALqD;AS8CzD,AT9CyD,MAMrDG,MANqD,GAUnDD,OAVmD,CAMrDC,MANqD;AS+CzD,AT/CyD,MAOrDF,SAPqD,GAUnDC,OAVmD,CAOrDD,SAPqD;ASgDzD,AThDyD,MAQrDG,IARqD,GAUnDF,OAVmD,CAQrDE,IARqD;ASiDzD,ATjDyD,MASrDC,aATqD,GAUnDH,OAVmD,CASrDG,aATqD;ASkDzD,ATvCE,MAAMtB,cAAc,GAAG,IAAIvM,GAAJ,EAAvB;ASwCF,ATvCE,MAAMwM,OAAO,GAAG,EAAhB;ASwCF,ATvCE,MAAMrF,WAAW,GAAG,EAApB;ASwCF,ATvCEkF,EAAAA,KAAK,CAAC9J,OAAN,CAAc,UAACuK,IAAD,EAAOnE,KAAP,EAAiB;ASwCjC,ATvCI,QAAMuE,OAAO,GAAGI,WAAW,CAAC3L,MAAM,CAACmM,MAAP,CAAchC,KAAd,CAAD,EAAuB;ASwCtD,ATvCM0B,MAAAA,QAAQ,EAARA,QADgD;ASyCtD,ATvCMC,MAAAA,SAAS,EAATA,SAFgD;AS0CtD,ATvCM9E,MAAAA,KAAK,EAALA,KAHgD;AS2CtD,ATvCMmE,MAAAA,IAAI,EAAJA;ASwCN,AT5CsD,KAAvB,CAA3B;AS6CJ,ATvCI,QAAMiB,GAAG,GAAGJ,MAAM,GAAGA,MAAM,CAACT,OAAD,CAAT,GAAqBvE,KAAvC;ASwCJ,ATvCI,QAAMqF,OAAO,GAAG9B,WAAW,CAAC5G,GAAZ,CAAgByI,GAAhB,CAAhB;ASwCJ;AACA,ATvCI,QAAIZ,cAAc,CAACC,SAAD,EAAYF,OAAZ,CAAlB,EAAwC;ASwC5C,ATvCM;ASwCN,ATvCK;ASwCL;AACA,ATvCI,QAAMpI,iBAAiB,GAAGkJ,OAAO,GAAGA,OAAO,CAACf,QAAX,GAAsBA,QAAQ,CAACgB,KAAT,EAAvD;ASwCJ,ATvCI,QAAMjD,EAAE,GAAGgD,OAAO,GAAGlJ,iBAAiB,CAACkG,EAArB,GAA0B4C,IAAI,CAAC3I,SAAL,EAA5C;ASwCJ,ATvCI,QAAMiJ,SAAS,GAAG,CAACF,OAAnB;ASwCJ,ATvCI,QAAMG,IAAI,GAAGN,aAAa,IAAIK,SAAjB,GAA6BrJ,kBAAkB,CAACC,iBAAD,CAA/C,GAAqE,EAAlF;ASwCJ;AACA,ATvCI,QAAIoJ,SAAJ,EAAe;ASwCnB,ATvCM1B,MAAAA,OAAO,CAACtC,IAAR,CAAa;ASwCnB,ATxCmB,eAAMpF,iBAAiB,CAAC+G,KAAlB,CAAwBb,EAAxB,EAA4BkC,OAA5B,EAAqCnB,WAArC,EAAkDoC,IAAlD,CAAN;ASyCnB,ATzCmB,OAAb;AS0CN,ATzCK,KAFD,MAEO;AS0CX,ATzCM3B,MAAAA,OAAO,CAACtC,IAAR,CAAa;AS0CnB,AT1CmB,eAAMpF,iBAAiB,CAACkH,MAAlB,CAAyBkB,OAAzB,EAAkCnB,WAAlC,CAAN;AS2CnB,AT3CmB,OAAb;AS4CN,AT3CK,KAvB4B,CAuB3B;AS4CN,AT3CI;AS4CJ;AACA;AT1CI,QAAI8B,aAAJ,EAAmB;AACjB,UAAMlK,QAAQ,GAAGwK,IAAI,CAACxK,QAAL,IAAiBmB,iBAAiB,CAACnB,QAApD;AACAwD,MAAAA,WAAW,CAAC+C,IAAZ,OAAA/C,WAAW,qBAASxD,QAAT,EAAX;AACD,KAHD,MAGO;AACLwD,MAAAA,WAAW,CAAC+C,IAAZ,CAAiBc,EAAjB;AACD,KAhC4B,CAgC3B;;;AAGFkB,IAAAA,WAAW,CAACkC,MAAZ,CAAmBL,GAAnB,EAnC6B,CAmCJ;;AAEzBxB,IAAAA,cAAc,CAAC8B,GAAf,CAAmBN,GAAnB,EAAwB;AACtBd,MAAAA,QAAQ,EAAEnI,iBADY;AAEtBoI,MAAAA,OAAO,EAAPA,OAFsB;AAGtBvE,MAAAA,KAAK,EAALA;AAHsB,KAAxB;AAKD,GA1CD;AA2CA,SAAO;AACL4D,IAAAA,cAAc,EAAdA,cADK;AAELC,IAAAA,OAAO,EAAPA,OAFK;AAGLrF,IAAAA,WAAW,EAAXA;AAHK,GAAP;AAKD;;AAED,SAAS2G,MAAT,CAAgBtK,IAAhB,EAAsB8K,KAAtB,EAA6B;AAAA,MAEzBlC,QAFyB,GAQvBkC,KARuB,CAEzBlC,QAFyB;AAAA,MAGzBgB,SAHyB,GAQvBkB,KARuB,CAGzBlB,SAHyB;AAAA,MAIzBI,QAJyB,GAQvBc,KARuB,CAIzBd,QAJyB;AAAA,MAKzBC,SALyB,GAQvBa,KARuB,CAKzBb,SALyB;AAAA,MAMzBE,MANyB,GAQvBW,KARuB,CAMzBX,MANyB;AAAA,MAOzBV,QAPyB,GAQvBqB,KARuB,CAOzBrB,QAPyB;AAS3B,MAAMhB,WAAW,GAAGsC,QAAQ,CAACC,cAAT,CAAwB,EAAxB,CAApB;AACA,MAAMjJ,MAAM,GAAG/B,IAAI,CAACO,UAApB;AACA,MAAM6J,IAAI,GAAGpK,IAAI,CAACyB,SAAL,EAAb;AACAM,EAAAA,MAAM,CAACO,YAAP,CAAoBmG,WAApB,EAAiCzI,IAAjC;AACAM,EAAAA,UAAU,CAACN,IAAD,CAAV;AACA,SAAO7B,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkB9C,WAAlB,EAA+B;AACpCO,IAAAA,WAAW,EAAE,IAAIlM,GAAJ,EADuB;AAEpCwD,IAAAA,IAAI,EAAJA,IAFoC;AAGpCoK,IAAAA,IAAI,EAAJA,IAHoC;AAIpCR,IAAAA,SAAS,EAATA,SAJoC;AAKpChB,IAAAA,QAAQ,EAARA,QALoC;AAMpCyB,IAAAA,aAAa,EAAE1C,UAAU,CAACyC,IAAD,CANW;AAOpCX,IAAAA,QAAQ,EAAEA,QAAQ,CAACyB,SAAT,CAAmBlL,IAAnB,CAP0B;AAQpCmK,IAAAA,MAAM,EAANA,MARoC;AASpCF,IAAAA,SAAS,EAATA,SAToC;AAUpCD,IAAAA,QAAQ,EAARA,QAVoC;AAWpCvB,IAAAA,WAAW,EAAXA;AAXoC,GAA/B,CAAP;AAaD;AACD;;;;;AAKA,IAAM0C,SAAS,GAAGhN,MAAM,CAACiK,IAAP,CAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,KAR4B,iBAQtBC,KARsB,EAQfC,WARe,EAQF;AACxB,WAAO,KAAKC,MAAL,CAAYF,KAAZ,EAAmBC,WAAnB,CAAP;AACD,GAV2B;AAY5BC,EAAAA,MAZ4B,kBAYrBF,KAZqB,EAYdC,WAZc,EAYD;AAAA;;AACzB,QAAM7J,KAAK,GAAG,CAAC,CAAC,KAAKkK,QAAL,CAAcN,KAAd,CAAhB;AACA,QAAMoC,SAAS,GAAG,CAAC,KAAKhM,KAAN,IAAeA,KAAjC;AACA,QAAM0M,WAAW,GAAG,KAAK1M,KAAL,IAAc,CAACA,KAAnC;;AAEA,QAAM2J,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,UAAMgD,QAAQ,GAAG,KAAI,CAACrL,IAAL,CAAUyB,SAAV,EAAjB;;AACA,MAAA,KAAI,CAACgH,WAAL,CAAiBlI,UAAjB,CAA4B+B,YAA5B,CAAyC+I,QAAzC,EAAmD,KAAI,CAAC5C,WAAxD;;AACA,MAAA,KAAI,CAACgB,QAAL,GAAgB,KAAI,CAACA,QAAL,CAAcgB,KAAd,EAAhB;;AACA,MAAA,KAAI,CAAChB,QAAL,CAAcpB,KAAd,CAAoBgD,QAApB,EAA8B/C,KAA9B,EAAqCC,WAArC;AACD,KALD;;AAOA,YAAQ,IAAR;AACE,WAAKmC,SAAL;AACErC,QAAAA,KAAK;AACL;;AAEF,WAAK+C,WAAL;AACE,aAAKhC,OAAL,CAAad,KAAb;AACA;;AAEF;AACE,YAAI5J,KAAJ,EAAW,KAAK+K,QAAL,CAAcjB,MAAd,CAAqBF,KAArB,EAA4BC,WAA5B;AAVf;;AAaA,SAAK7J,KAAL,GAAaA,KAAb;AACA,WAAO,IAAP;AACD,GAvC2B;AAyC5B0K,EAAAA,OAzC4B,mBAyCpBd,KAzCoB,EAyCbC,WAzCa,EAyCA;AAC1B,SAAKkB,QAAL,CAAcL,OAAd,CAAsBd,KAAtB,EAA6BC,WAA7B,EAA0C,IAA1C;AACA,WAAO,IAAP;AACD;AA5C2B,CAAZ,CAAlB;;AAgDA,SAAS+C,QAAT,CAAkBtL,IAAlB,EAAwBuL,KAAxB,EAA+B;AAAA,MAE3B3C,QAF2B,GAIzB2C,KAJyB,CAE3B3C,QAF2B;AAAA,MAG3Ba,QAH2B,GAIzB8B,KAJyB,CAG3B9B,QAH2B;AAK7B,MAAM1H,MAAM,GAAG/B,IAAI,CAACO,UAApB;AACA,MAAMkI,WAAW,GAAGsC,QAAQ,CAACC,cAAT,CAAwB,EAAxB,CAApB;AACAjJ,EAAAA,MAAM,CAACO,YAAP,CAAoBmG,WAApB,EAAiCzI,IAAjC;AACAM,EAAAA,UAAU,CAACN,IAAD,CAAV;AACA,SAAO7B,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkBE,SAAlB,EAA6B;AAClCnL,IAAAA,IAAI,EAAJA,IADkC;AAElC4I,IAAAA,QAAQ,EAARA,QAFkC;AAGlCH,IAAAA,WAAW,EAAXA,WAHkC;AAIlCgB,IAAAA,QAAQ,EAAEA,QAAQ,CAACyB,SAAT,CAAmBlL,IAAnB;AAJwB,GAA7B,CAAP;AAMD;AACD;;;;;;;;AAQA,SAASwL,OAAT,CAAiBrC,EAAjB,EAAqB;AAAA;;AACnB,MAAMsC,KAAK,GAAG,IAAIjP,GAAJ,EAAd;;AAEA,MAAMkP,MAAM,GAAG,SAATA,MAAS,CAAAC,GAAG,EAAI;AACpB,WAAOF,KAAK,CAACG,GAAN,CAAUD,GAAV,IAAiBF,KAAK,CAAC3J,GAAN,CAAU6J,GAAV,CAAjB,GAAkCF,KAAK,CAACZ,GAAN,CAAUc,GAAV,EAAexC,EAAE,CAAC1G,IAAH,CAAQ,MAAR,EAAckJ,GAAd,CAAf,KAAsCF,KAAK,CAAC3J,GAAN,CAAU6J,GAAV,CAA/E;AACD,GAFD;;AAIAD,EAAAA,MAAM,CAACD,KAAP,GAAeA,KAAf;AACA,SAAOC,MAAP;AACD;AACD;;;;;;;AAOA,SAASG,4BAAT,CAAsCC,UAAtC,EAAkD;AAChD,SAAOA,UAAU,CAACC,MAAX,CAAkB,UAACC,GAAD,EAAMC,SAAN,EAAoB;AAAA,QAEzCvN,KAFyC,GAIvCuN,SAJuC,CAEzCvN,KAFyC;AAAA,QAGzCF,IAHyC,GAIvCyN,SAJuC,CAGzCzN,IAHyC;;AAM3C,YAAQ,IAAR;AACE;AACA,WAAK,CAACyN,SAAS,CAACC,IAAX,IAAmB1N,IAAI,KAAKwC,SAAjC;AACE,eAAO7C,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkBe,GAAlB,EAAuB,EAAvB,EAA2BtN,KAA3B,CAAP;AACF;;AAEA,WAAKF,IAAI,KAAK2C,KAAd;AACE6K,QAAAA,GAAG,CAACtN,KAAJ,GAAYuN,SAAS,CAACvN,KAAtB;AACA;AACF;;AAEA;AACEsN,QAAAA,GAAG,CAAC3M,eAAe,CAAC4M,SAAS,CAACC,IAAX,CAAhB,CAAH,GAAuCD,SAAS,CAACvN,KAAjD;AAZJ;;AAeA,WAAOsN,GAAP;AACD,GAtBM,EAsBJ,EAtBI,CAAP;AAuBD;;AAED,IAAMG,gBAAgB,GAAG,iBAAzB;AACA,IAAMC,YAAY,GAAG,cAArB;AACA,IAAMC,YAAY,GAAG,OAAOC,OAAP,KAAmB,WAAnB,GAAiC,EAAjC,GAAsCA,OAAO,CAACnN,SAAnE;AACA,IAAMoN,oBAAoB,GAAGf,OAAO,CAAC,UAAAU,IAAI;AAAA,SAAIG,YAAY,CAACG,cAAb,CAA4BN,IAA5B,CAAJ;AAAA,CAAL,CAApC,EAAiF;;AAEjF;;;;;;;AAOA,SAASO,gBAAT,CAA0BzM,IAA1B,EAAgC8L,UAAhC,EAA4C;AAC1C3N,EAAAA,MAAM,CAACuO,OAAP,CAAeZ,UAAf,EAA2B/M,OAA3B,CAAmC,UAAC4N,KAAD,EAAW;AAAA,gCACxBA,KADwB;AAAA,QACvCT,IADuC;AAAA,QACjCxN,KADiC;;AAE5C,WAAOkO,mBAAmB,CAAC5M,IAAD,EAAO;AAC/BkM,MAAAA,IAAI,EAAJA;AAD+B,KAAP,EAEvBxN,KAFuB,CAA1B;AAGD,GALD;AAMD;AACD;;;;;;;;AAQA,SAASmO,mBAAT,CAA6B7M,IAA7B,EAAmC8L,UAAnC,EAA+C;AAC7C3N,EAAAA,MAAM,CAAC2O,IAAP,CAAYhB,UAAZ,EAAwB/M,OAAxB,CAAgC,UAAAkN,SAAS;AAAA,WAAIjM,IAAI,CAAC+M,eAAL,CAAqBd,SAArB,CAAJ;AAAA,GAAzC;AACD;AACD;;;;;;;;;;;AAWA,SAASW,mBAAT,CAA6B5M,IAA7B,EAAmCgN,KAAnC,EAA0CtO,KAA1C,EAAiDuO,QAAjD,EAA2D;AAAA,MAEvDf,IAFuD,GAGrDc,KAHqD,CAEvDd,IAFuD,EAKzD;;AACA,MAAI,CAACA,IAAL,EAAW;AACT;AACA,QAAIxN,KAAJ,EAAW;AACT+N,MAAAA,gBAAgB,CAACzM,IAAD,EAAOtB,KAAP,CAAhB;AACD,KAFD,MAEO,IAAIuO,QAAJ,EAAc;AACnB;AACAJ,MAAAA,mBAAmB,CAAC7M,IAAD,EAAOiN,QAAP,CAAnB;AACD;;AAED;AACD,GAhBwD,CAgBvD;;;AAGF,MAAI,CAACV,oBAAoB,CAACL,IAAD,CAArB,KAAgCnE,SAAS,CAACrJ,KAAD,CAAT,IAAoBsJ,QAAQ,CAACtJ,KAAD,CAA5B,IAAuCoJ,YAAY,CAACpJ,KAAD,CAAnF,CAAJ,EAAiG;AAC/FsB,IAAAA,IAAI,CAACkM,IAAD,CAAJ,GAAaxN,KAAb;AACD;;AAEDsB,EAAAA,IAAI,CAACkN,SAAS,CAACxO,KAAD,CAAV,CAAJ,CAAuBwN,IAAvB,EAA6BiB,cAAc,CAACjB,IAAD,EAAOxN,KAAP,CAA3C;AACD;AACD;;;;;;;AAOA,SAASwO,SAAT,CAAmBxO,KAAnB,EAA0B;AACxB,SAAOkJ,KAAK,CAAClJ,KAAD,CAAL,IAAgBA,KAAK,KAAK,KAA1B,IAAmCA,KAAK,KAAK,EAA7C,IAAmDsJ,QAAQ,CAACtJ,KAAD,CAA3D,IAAsEoJ,YAAY,CAACpJ,KAAD,CAAlF,GAA4FyN,gBAA5F,GAA+GC,YAAtH;AACD;AACD;;;;;;;;AAQA,SAASe,cAAT,CAAwBjB,IAAxB,EAA8BxN,KAA9B,EAAqC;AACnC;AACA,MAAIA,KAAK,KAAK,IAAd,EAAoB,OAAOwN,IAAP;AACpB,SAAOxN,KAAP;AACD;;AAED,IAAM0O,gBAAgB,GAAG,KAAzB;AACA;;;;;;;;;;AAUA,SAASC,eAAT,CAAyBrN,IAAzB,EAA+BsN,KAA/B,EAAsC5O,KAAtC,EAA6CuO,QAA7C,EAAuD;AAAA,MAEnDf,IAFmD,GAGjDoB,KAHiD,CAEnDpB,IAFmD;AAIrD,MAAMqB,mBAAmB,GAAGrB,IAAI,CAAC3M,OAAL,CAAa6N,gBAAb,EAA+B,EAA/B,CAA5B;;AAEA,MAAIH,QAAJ,EAAc;AACZjN,IAAAA,IAAI,CAACwN,mBAAL,CAAyBD,mBAAzB,EAA8CN,QAA9C;AACD;;AAED,MAAIvO,KAAJ,EAAW;AACTsB,IAAAA,IAAI,CAACyN,gBAAL,CAAsBF,mBAAtB,EAA2C7O,KAA3C,EAAkD,KAAlD;AACD;AACF;AACD;;;;;;;AAOA,SAASgP,oBAAT,CAA8BhP,KAA9B,EAAqC;AACnC,SAAOkJ,KAAK,CAAClJ,KAAD,CAAL,GAAe,EAAf,GAAoBA,KAA3B;AACD;AACD;;;;;;;;AAQA,IAAMiP,WAAW,GAAG,SAAdA,WAAc,CAAC3N,IAAD,EAAO4N,cAAP,EAA0B;AAC5C,MAAMhO,MAAM,GAAGI,IAAI,CAACE,UAAL,CAAgB0N,cAAhB,CAAf;;AAEA,MAAIhO,MAAM,CAACiO,QAAP,KAAoBC,IAAI,CAACC,YAA7B,EAA2C;AACzC,QAAMC,QAAQ,GAAGjD,QAAQ,CAACC,cAAT,CAAwB,EAAxB,CAAjB;AACAhL,IAAAA,IAAI,CAACiO,YAAL,CAAkBD,QAAlB,EAA4BpO,MAA5B;AACA,WAAOoO,QAAP;AACD;;AAED,SAAOpO,MAAP;AACD,CAVD;AAWA;;;;;;;;;AASA,SAASsO,cAAT,CAAwBlO,IAAxB,EAA8BmO,IAA9B,EAAoCzP,KAApC,EAA2C;AACzCsB,EAAAA,IAAI,CAACmO,IAAL,GAAYT,oBAAoB,CAAChP,KAAD,CAAhC;AACD;AACD;;;;;;;;;AASA,SAAS0P,eAAT,CAAyBpO,IAAzB,EAA+BqO,UAA/B,EAA2C3P,KAA3C,EAAkD;AAChDsB,EAAAA,IAAI,CAACtB,KAAL,GAAagP,oBAAoB,CAAChP,KAAD,CAAjC;AACD;;AAED,IAAI4P,WAAW,qDACZtN,SADY,EACA4L,mBADA,iCAEZ3L,KAFY,EAEJoM,eAFI,iCAGZnM,IAHY,EAGLgN,cAHK,iCAIZ/M,KAJY,EAIJiN,eAJI,gBAAf;AAMA,IAAMG,UAAU,GAAGpQ,MAAM,CAACiK,IAAP,CAAY;AAC7B;AACA;AACA;AACA;;AAEA;;;;;AAKAC,EAAAA,KAX6B,iBAWvBC,KAXuB,EAWhB;AACX;AACA,SAAK5J,KAAL,GAAa,KAAKkK,QAAL,CAAcN,KAAd,CAAb,CAFW,CAEwB;;AAEnCkG,IAAAA,KAAK,CAAC,IAAD,EAAO,KAAK9P,KAAZ,CAAL;AACA,WAAO,IAAP;AACD,GAjB4B;;AAmB7B;;;;;AAKA8J,EAAAA,MAxB6B,kBAwBtBF,KAxBsB,EAwBf;AACZ;AACA,QAAM5J,KAAK,GAAG,KAAKkK,QAAL,CAAcN,KAAd,CAAd;;AAEA,QAAI,KAAK5J,KAAL,KAAeA,KAAnB,EAA0B;AACxB;AACA8P,MAAAA,KAAK,CAAC,IAAD,EAAO9P,KAAP,CAAL;AACA,WAAKA,KAAL,GAAaA,KAAb;AACD;;AAED,WAAO,IAAP;AACD,GAnC4B;;AAqC7B;;;;AAIA0K,EAAAA,OAzC6B,qBAyCnB;AACR;AACA,QAAI,KAAK5K,IAAL,KAAcyC,KAAlB,EAAyBuN,KAAK,CAAC,IAAD,EAAO,IAAP,CAAL;AACzB,WAAO,IAAP;AACD;AA7C4B,CAAZ,CAAnB;AAgDA;;;;;;;AAOA,SAASA,KAAT,CAAeH,UAAf,EAA2B3P,KAA3B,EAAkC;AAChC,SAAO4P,WAAW,CAACD,UAAU,CAAC7P,IAAZ,CAAX,CAA6B6P,UAAU,CAACrO,IAAxC,EAA8CqO,UAA9C,EAA0D3P,KAA1D,EAAiE2P,UAAU,CAAC3P,KAA5E,CAAP;AACD;;AAED,SAAS+P,QAAT,CAAkBzO,IAAlB,EAAwBmO,IAAxB,EAA8B;AAC5B,SAAOhQ,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkBsD,UAAlB,EAA8B,EAA9B,EAAkCJ,IAAlC,EAAwC;AAC7CnO,IAAAA,IAAI,EAAEmO,IAAI,CAAC3P,IAAL,KAAc0C,IAAd,GAAqByM,WAAW,CAAC3N,IAAD,EAAOmO,IAAI,CAACP,cAAZ,CAAhC,GAA8D5N;AADvB,GAAxC,CAAP;AAGD;AACD;;;;;;;;;;AAUA,SAAS0O,wBAAT,CAAkC/F,UAAlC,EAA8C7J,OAA9C,EAAuD4K,OAAvD,EAAgE;AAC9D,SAAO5K,OAAO,CAACiN,MAAR,CAAe,UAACC,GAAD,EAAMhN,MAAN,EAAiB;AACrC,WAAOb,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkBe,GAAlB,sBACJhN,MADI,EACK,UAAAsJ,KAAK,EAAI;AACjB,aAAOK,UAAU,CAACgG,GAAX,CAAe,UAAArF,IAAI;AAAA,eAAIA,IAAI,CAACtK,MAAD,CAAJ,CAAasJ,KAAb,CAAJ;AAAA,OAAnB,KAA+CoB,OAAtD;AACD,KAHI,EAAP;AAKD,GANM,EAMJ,EANI,CAAP;AAOD;;AAED,SAASkF,QAAT,CAAkB5O,IAAlB,EAAwB6O,KAAxB,EAA+B;AAAA,MAE3BP,WAF2B,GAGzBO,KAHyB,CAE3BP,WAF2B;AAI7B,SAAOnQ,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkByD,wBAAwB,CAACJ,WAAW,CAACK,GAAZ,CAAgB,UAAAN,UAAU;AAAA,WAAII,QAAQ,CAACzO,IAAD,EAAOqO,UAAP,CAAZ;AAAA,GAA1B,CAAD,EAA4D,CAAC,OAAD,EAAU,QAAV,EAAoB,SAApB,CAA5D,CAA1C,CAAP;AACD;;AAED,SAASS,iBAAT,CAA2BhD,UAA3B,EAAuCxD,KAAvC,EAA8CC,WAA9C,EAA2D;AACzD,MAAI,CAACuD,UAAD,IAAe,CAACA,UAAU,CAACvI,MAA/B,EAAuC,OAAOgF,WAAP;AACvC,MAAM+F,WAAW,GAAGxC,UAAU,CAAC6C,GAAX,CAAe,UAAAI,IAAI;AAAA,WAAI5Q,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkB8D,IAAlB,EAAwB;AACjErQ,MAAAA,KAAK,EAAEqQ,IAAI,CAACnG,QAAL,CAAcN,KAAd;AAD0D,KAAxB,CAAJ;AAAA,GAAnB,CAApB;AAGA,SAAOnK,MAAM,CAAC8M,MAAP,CAAc9M,MAAM,CAACmM,MAAP,CAAc/B,WAAW,IAAI,IAA7B,CAAd,EAAkDsD,4BAA4B,CAACyC,WAAD,CAA9E,CAAP;AACD;;AAED,IAAMU,WAAW,GAAG7Q,MAAM,CAACiK,IAAP,CAAY;AAC9B;AACA;AACA;AACA0D,EAAAA,UAAU,EAAE,EAJkB;AAM9B;AACAmD,EAAAA,gBAP8B,4BAOb3G,KAPa,EAONC,WAPM,EAOO;AACnC,WAAOuG,iBAAiB,CAAC,KAAKhD,UAAN,EAAkBxD,KAAlB,EAAyBC,WAAzB,CAAxB;AACD,GAT6B;AAW9B;AACAF,EAAAA,KAZ8B,iBAYxBC,KAZwB,EAYjBC,WAZiB,EAYJ;AAAA;;AACxB,QAAM2G,YAAY,GAAG5G,KAAK,CAAC6G,KAAN,GAAc7G,KAAK,CAAC6G,KAAN,CAAYC,IAAZ,CAAiB,UAACC,KAAD,EAAW;AAAA,UAE3DC,EAF2D,GAGzDD,KAHyD,CAE3DC,EAF2D;AAI7D,aAAOA,EAAE,KAAK,MAAI,CAACpD,IAAnB;AACD,KALkC,CAAd,GAKhB,KALL;AADwB,QAQtB3L,UARsB,GASpB,KAAKP,IATe,CAQtBO,UARsB;AAUxB,SAAKkJ,QAAL,GAAgByF,YAAY,IAAIK,QAAQ,CAACL,YAAY,CAACM,IAAd,EAAoBN,YAAY,CAACO,QAAjC,CAAR,CAAmDvE,SAAnD,CAA6D3K,UAA7D,CAAhC;;AAEA,QAAI,KAAKkJ,QAAT,EAAmB;AACjB,WAAKA,QAAL,CAAcpB,KAAd,CAAoB,KAAKrI,IAAzB,EAA+B,KAAKiP,gBAAL,CAAsB3G,KAAtB,EAA6BC,WAA7B,CAA/B;AACA,WAAKkB,QAAL,CAActJ,QAAd,GAAyBuP,oBAAoB,CAAC,KAAK1P,IAAN,CAA7C;AACD;;AAEDM,IAAAA,UAAU,CAAC,KAAKN,IAAN,CAAV;AACA,WAAO,IAAP;AACD,GA/B6B;AAiC9BwI,EAAAA,MAjC8B,kBAiCvBF,KAjCuB,EAiChBC,WAjCgB,EAiCH;AACzB,QAAI,KAAKkB,QAAT,EAAmB;AACjB,WAAKA,QAAL,CAAcjB,MAAd,CAAqB,KAAKyG,gBAAL,CAAsB3G,KAAtB,EAA6BC,WAA7B,CAArB;AACD;;AAED,WAAO,IAAP;AACD,GAvC6B;AAyC9Ba,EAAAA,OAzC8B,mBAyCtBd,KAzCsB,EAyCfC,WAzCe,EAyCFoH,cAzCE,EAyCc;AAC1C,QAAI,KAAKlG,QAAT,EAAmB;AACjB,WAAKA,QAAL,CAAcL,OAAd,CAAsB,KAAK6F,gBAAL,CAAsB3G,KAAtB,EAA6BC,WAA7B,CAAtB,EAAiE,IAAjE,EAAuEoH,cAAvE;AACD;;AAED,WAAO,IAAP;AACD;AA/C6B,CAAZ,CAApB;AAkDA;;;;;;;AAOA,SAASD,oBAAT,CAA8BE,IAA9B,EAAoCzP,QAApC,EAA8C;AAC5C,MAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AACvBA,IAAAA,QAAQ,GAAG,EAAX;AACD;;AAED,MAAMkC,KAAK,GAAGuN,IAAI,CAAC/P,UAAnB;;AAEA,MAAIwC,KAAJ,EAAW;AACTuN,IAAAA,IAAI,CAACrP,UAAL,CAAgB+B,YAAhB,CAA6BD,KAA7B,EAAoCuN,IAApC;AACA,YAAQvN,KAAR,4BAAkBqN,oBAAoB,CAACE,IAAD,CAAtC;AACD;;AAED,SAAOzP,QAAP;AACD;AACD;;;;;;;;AAQA,SAAS0P,UAAT,CAAoB7P,IAApB,EAA0B8P,KAA1B,EAAiC;AAAA,MAE7B5D,IAF6B,GAI3B4D,KAJ2B,CAE7B5D,IAF6B;AAAA,MAG7BJ,UAH6B,GAI3BgE,KAJ2B,CAG7BhE,UAH6B;AAK/B,SAAO3N,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkB+D,WAAlB,EAA+B;AACpClD,IAAAA,UAAU,EAAVA,UADoC;AAEpC9L,IAAAA,IAAI,EAAJA,IAFoC;AAGpCkM,IAAAA,IAAI,EAAJA;AAHoC,GAA/B,CAAP;AAKD;AACD;;;;;;;;;;AAUA,SAAS6D,MAAT,CAAgBC,SAAhB,EAA2Bb,KAA3B,EAAkCrD,UAAlC,EAA8C;AAC5C,MAAIqD,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpBA,IAAAA,KAAK,GAAG,EAAR;AACD;;AAED,MAAIrD,UAAU,KAAK,KAAK,CAAxB,EAA2B;AACzBA,IAAAA,UAAU,GAAG,EAAb;AACD,GAP2C,CAS5C;;;AACA,MAAIkE,SAAJ,EAAe;AACb,WAAOA,SAAS,CAAC;AACfb,MAAAA,KAAK,EAALA,KADe;AAEfrD,MAAAA,UAAU,EAAVA;AAFe,KAAD,CAAhB;AAID,GAf2C,CAe1C;;;AAGF,SAAOyD,QAAQ,CAACU,aAAa,CAACd,KAAD,CAAd,+BAA2Be,YAAY,CAACf,KAAD,CAAvC,IAAgD;AAC7D;AACA;AACAb,IAAAA,WAAW,EAAExC,UAAU,CAAC6C,GAAX,CAAe,UAAAI,IAAI,EAAI;AAClC,aAAO5Q,MAAM,CAAC8M,MAAP,CAAc;AACnBzM,QAAAA,IAAI,EAAEwC;AADa,OAAd,EAEJ+N,IAFI,CAAP;AAGD,KAJY;AAHgD,GAAhD,GAAf;AASD;AACD;;;;;;;AAOA,SAASmB,YAAT,CAAsBf,KAAtB,EAA6B;AAC3B,SAAOA,KAAK,CAACpD,MAAN,CAAa,UAACC,GAAD,EAAMmE,MAAN,EAAiB;AAAA,QAEjCV,QAFiC,GAG/BU,MAH+B,CAEjCV,QAFiC;AAInC,WAAOzD,GAAG,CAACoE,MAAJ,CAAWX,QAAX,CAAP;AACD,GALM,EAKJ,EALI,CAAP;AAMD;AACD;;;;;;;AAOA,SAASQ,aAAT,CAAuBd,KAAvB,EAA8B;AAC5B,SAAOA,KAAK,CAACpD,MAAN,CAAa,UAACC,GAAD,EAAM4D,IAAN,EAAe;AACjC,WAAO5D,GAAG,GAAG4D,IAAI,CAACJ,IAAlB;AACD,GAFM,EAEJ,EAFI,CAAP;AAGD;;AAED,IAAMa,UAAU,GAAGlS,MAAM,CAACiK,IAAP,CAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,KAT6B,iBASvBC,KATuB,EAShB;AACX,WAAO,KAAKE,MAAL,CAAYF,KAAZ,CAAP;AACD,GAX4B;AAa7BE,EAAAA,MAb6B,kBAatBF,KAbsB,EAafC,WAbe,EAaF;AACzB,QAAM2D,IAAI,GAAG,KAAKtD,QAAL,CAAcN,KAAd,CAAb,CADyB,CACU;;AAEnC,QAAI4D,IAAI,KAAK,KAAKA,IAAlB,EAAwB;AACtB,WAAKoE,GAAL,CAAS9H,MAAT,CAAgBF,KAAhB;AACD,KAFD,MAEO;AACL;AACA,WAAKc,OAAL,CAAad,KAAb,EAAoBC,WAApB,EAAiC,IAAjC,EAFK,CAEmC;;AAExC,WAAK2D,IAAL,GAAYA,IAAZ;AACA,WAAKoE,GAAL,GAAWP,MAAM,CAAC,KAAKQ,YAAL,CAAkBrE,IAAlB,CAAD,EAA0B,KAAKiD,KAA/B,EAAsC,KAAKrD,UAA3C,CAAjB;AACA,WAAKwE,GAAL,CAASjI,KAAT,CAAe,KAAKrI,IAApB,EAA0BsI,KAA1B;AACD;;AAED,WAAO,IAAP;AACD,GA5B4B;AA8B7Bc,EAAAA,OA9B6B,mBA8BrBd,KA9BqB,EA8BdC,WA9Bc,EA8BDiI,WA9BC,EA8BY;AACvC,QAAI,KAAKF,GAAT,EAAc;AACZ;AACA,WAAKA,GAAL,CAASlH,OAAT,CAAiBoH,WAAjB;AACD;;AAED,WAAO,IAAP;AACD;AArC4B,CAAZ,CAAnB;;AAyCA,SAASC,QAAT,CAAkBzQ,IAAlB,EAAwB0Q,MAAxB,EAAgC;AAAA,MAE5B9H,QAF4B,GAM1B8H,MAN0B,CAE5B9H,QAF4B;AAAA,MAG5B2H,YAH4B,GAM1BG,MAN0B,CAG5BH,YAH4B;AAAA,MAI5BpB,KAJ4B,GAM1BuB,MAN0B,CAI5BvB,KAJ4B;AAAA,MAK5BrD,UAL4B,GAM1B4E,MAN0B,CAK5B5E,UAL4B;AAO9B,SAAO3N,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkBoF,UAAlB,EAA8B;AACnCrQ,IAAAA,IAAI,EAAJA,IADmC;AAEnC4I,IAAAA,QAAQ,EAARA,QAFmC;AAGnCuG,IAAAA,KAAK,EAALA,KAHmC;AAInCrD,IAAAA,UAAU,EAAVA,UAJmC;AAKnCyE,IAAAA,YAAY,EAAZA;AALmC,GAA9B,CAAP;AAOD;;AAED,IAAId,QAAQ,+CACT9O,EADS,EACJ2K,QADI,8BAET1K,MAFS,EAEAgO,QAFA,8BAGTlO,IAHS,EAGF4J,MAHE,8BAITzJ,GAJS,EAIH4P,QAJG,8BAKT3P,IALS,EAKF+O,UALE,aAAZ;AAOA;;;;;;;;AAQA,SAASc,wBAAT,CAAkCrC,WAAlC,EAA+CsC,qBAA/C,EAAsE;AACpE,SAAOtC,WAAW,CAACK,GAAZ,CAAgB,UAAAkC,CAAC;AAAA,WAAIA,CAAC,CAACrS,IAAF,KAAW0C,IAAX,GAAkB/C,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkB4F,CAAlB,EAAqB;AACjEjD,MAAAA,cAAc,EAAEiD,CAAC,CAACjD,cAAF,GAAmBgD;AAD8B,KAArB,CAAlB,GAEvBC,CAFmB;AAAA,GAAjB,CAAP;AAGD;AACD;;;;;;;;;AASA,SAASC,QAAT,CAAkB1G,IAAlB,EAAwBF,OAAxB,EAAiC6G,iBAAjC,EAAoD;AAAA,MAEhDC,QAFgD,GAM9C9G,OAN8C,CAEhD8G,QAFgD;AAAA,MAGhDxS,IAHgD,GAM9C0L,OAN8C,CAGhD1L,IAHgD;AAAA,MAIhDyS,kBAJgD,GAM9C/G,OAN8C,CAIhD+G,kBAJgD;AAAA,MAKhD3C,WALgD,GAM9CpE,OAN8C,CAKhDoE,WALgD,EAMrC;;AAEb,MAAMtO,IAAI,GAAGgR,QAAQ,GAAG5G,IAAI,CAAC8G,aAAL,CAAmBF,QAAnB,CAAH,GAAkC5G,IAAvD,CARkD,CAQW;;AAE7D,MAAI6G,kBAAJ,EAAwBjR,IAAI,CAAC+M,eAAL,CAAqBkE,kBAArB;AACxB,MAAME,kBAAkB,GAAG7C,WAAW,IAAI,EAA1C,CAXkD,CAWJ;;AAE9C,SAAO,CAACmB,QAAQ,CAACjR,IAAD,CAAR,IAAkBiR,QAAQ,CAAC7O,MAAD,CAA3B,EAAqCZ,IAArC,EAA2C7B,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkBf,OAAlB,EAA2B;AAC3EoE,IAAAA,WAAW,EAAEyC,iBAAiB,IAAI,CAACC,QAAtB,GAAiCL,wBAAwB,CAACQ,kBAAD,EAAqBJ,iBAArB,CAAzD,GAAmGI;AADrC,GAA3B,CAA3C,CAAP;AAGD,EAAC;;;AAGF,SAASC,cAAT,CAAwB5B,IAAxB,EAA8BpF,IAA9B,EAAoC;AAClC,MAAMX,QAAQ,GAAG9B,UAAU,CAACyC,IAAD,CAAV,GAAmBA,IAAnB,GAA0BW,QAAQ,CAACsG,aAAT,CAAuB,UAAvB,CAA3C;AACA5H,EAAAA,QAAQ,CAAC6H,SAAT,GAAqB9B,IAArB;AACA,SAAO/F,QAAQ,CAAC5B,OAAhB;AACD,EAAC;;;AAGF,SAAS0J,aAAT,CAAuB/B,IAAvB,EAA6BgC,SAA7B,EAAwC;AACtC;AACA,MAAMC,OAAO,GAAGD,SAAS,CAACE,aAAV,CAAwBC,UAAxB,CAAmC,IAAIC,MAAM,CAACC,SAAX,GAAuBC,eAAvB,qDAAkFtC,IAAlF,aAAgG,iBAAhG,EAAmHuC,eAAtJ,EAAuK,IAAvK,CAAhB;AACA,SAAON,OAAP;AACD;AACD;;;;;;;;AAQA,SAASO,aAAT,CAAuB5H,IAAvB,EAA6BoF,IAA7B,EAAmC;AACjC,MAAIjI,KAAK,CAAC6C,IAAD,CAAT,EAAiB,OAAOmH,aAAa,CAAC/B,IAAD,EAAOpF,IAAP,CAApB;AACjB,SAAOgH,cAAc,CAAC5B,IAAD,EAAOpF,IAAP,CAArB;AACD;AACD;;;;;;;;AAQA,SAAS6H,SAAT,CAAmBzK,EAAnB,EAAuBhG,GAAvB,EAA4B;AAC1B,UAAQ,IAAR;AACE,SAAK+F,KAAK,CAACC,EAAD,CAAV;AACE7H,MAAAA,YAAY,CAAC6B,GAAD,EAAMgG,EAAN,CAAZ;AACA;;AAEF,SAAKG,UAAU,CAACH,EAAD,CAAf;AACEA,MAAAA,EAAE,CAACjH,UAAH,CAAc0N,YAAd,CAA2BzM,GAA3B,EAAgCgG,EAAhC;AACA;;AAEF;AACEA,MAAAA,EAAE,CAAC1H,WAAH,CAAe0B,GAAf;AAVJ;AAYD;AACD;;;;;;;;AAQA,SAAS0Q,iBAAT,CAA2B1K,EAA3B,EAA+BgI,IAA/B,EAAqC;AACnC,SAAOA,IAAI,KAAK,OAAOA,IAAP,KAAgB,QAAhB,GAA2BwC,aAAa,CAACxK,EAAD,EAAKgI,IAAL,CAAxC,GAAqDA,IAA1D,CAAX;AACD;AACD;;;;;;AAMA,IAAM2C,aAAa,GAAGhU,MAAM,CAACC,MAAP,CAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;AAKA8M,EAAAA,SAhBkC,qBAgBxB1D,EAhBwB,EAgBpB;AACZ;AACA,SAAKhG,GAAL,GAAW,KAAKA,GAAL,IAAY0Q,iBAAiB,CAAC1K,EAAD,EAAK,KAAKgI,IAAV,CAAxC;AACA,WAAO,IAAP;AACD,GApBiC;AAsBlC;;AAEA;;;;;;;;AAQAnH,EAAAA,KAhCkC,iBAgC5Bb,EAhC4B,EAgCxBc,KAhCwB,EAgCjBC,WAhCiB,EAgCJoC,IAhCI,EAgCE;AAAA;;AAClC,QAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AACnBA,MAAAA,IAAI,GAAG,EAAP;AACD;;AAED,QAAI,CAACnD,EAAL,EAAS,MAAM,IAAI4K,KAAJ,CAAU,yDAAV,CAAN;AACT,QAAI,KAAK5K,EAAT,EAAa,KAAK4B,OAAL,CAAad,KAAb,EANqB,CAMA;AAClC;;AAPkC,gBAa9BqC,IAb8B;AAAA,QAUhCpJ,QAVgC,SAUhCA,QAVgC;AAAA,QAWhCpB,QAXgC,SAWhCA,QAXgC;AAAA,QAYhCuB,iBAZgC,SAYhCA,iBAZgC,EAaxB;AACV;;AAdkC,iBAkB9BvB,QAAQ,GAAGA,QAAQ,CAAC,CAAD,CAAX,GAAiBqH,EAlBK;AAAA,QAiBhCjH,UAjBgC,UAiBhCA,UAjBgC;;AAmBlC,QAAM8J,aAAa,GAAG1C,UAAU,CAACH,EAAD,CAAhC;AACA,QAAMuJ,iBAAiB,GAAG1G,aAAa,GAAGgI,IAAI,CAACC,GAAL,CAASlS,KAAK,CAACC,IAAN,CAAWE,UAAU,CAACJ,QAAtB,EAAgCyB,OAAhC,CAAwC4F,EAAxC,CAAT,EAAsD,CAAtD,CAAH,GAA8D,IAArG;AACA,SAAK6C,aAAL,GAAqBA,aAArB,CArBkC,CAqBE;;AAEpC,SAAKa,SAAL,CAAe1D,EAAf;;AAEA,QAAI,KAAKhG,GAAT,EAAc;AACZ;AACA,WAAKD,QAAL,GAAgBA,QAAQ,IAAI,KAAKC,GAAL,CAASC,SAAT,CAAmB,IAAnB,CAA5B;AACD,KA5BiC,CA4BhC;AACF;;;AAGA,SAAK+F,EAAL,GAAU,KAAK6C,aAAL,GAAqB9J,UAArB,GAAkCiH,EAA5C,CAhCkC,CAgCc;;AAEhD,SAAKrH,QAAL,GAAgB,KAAKkK,aAAL,GAAqBlK,QAAQ,IAAIC,KAAK,CAACC,IAAN,CAAW,KAAKkB,QAAL,CAAcrB,UAAzB,CAAjC,GAAwE,IAAxF,CAlCkC,CAkC4D;;AAE9F,QAAI,CAACwB,iBAAD,IAAsB,KAAKH,QAA/B,EAAyC0Q,SAAS,CAACzK,EAAD,EAAK,KAAKjG,QAAV,CAAT,CApCP,CAoCqC;;AAEvE,SAAKkO,QAAL,GAAgB,KAAK8C,YAAL,CAAkB5D,GAAlB,CAAsB,UAAAzE,OAAO;AAAA,aAAI4G,QAAQ,CAAC,MAAI,CAACtJ,EAAN,EAAU0C,OAAV,EAAmB6G,iBAAnB,CAAZ;AAAA,KAA7B,CAAhB;AACA,SAAKtB,QAAL,CAAc1Q,OAAd,CAAsB,UAAA8D,CAAC;AAAA,aAAIA,CAAC,CAACwF,KAAF,CAAQC,KAAR,EAAeC,WAAf,CAAJ;AAAA,KAAvB;AACA,WAAO,IAAP;AACD,GAzEiC;;AA2ElC;;;;;;AAMAC,EAAAA,MAjFkC,kBAiF3BF,KAjF2B,EAiFpBC,WAjFoB,EAiFP;AACzB,SAAKkH,QAAL,CAAc1Q,OAAd,CAAsB,UAAA8D,CAAC;AAAA,aAAIA,CAAC,CAAC2F,MAAF,CAASF,KAAT,EAAgBC,WAAhB,CAAJ;AAAA,KAAvB;AACA,WAAO,IAAP;AACD,GApFiC;;AAsFlC;;;;;;;;AAQAa,EAAAA,OA9FkC,mBA8F1Bd,KA9F0B,EA8FnBC,WA9FmB,EA8FNoH,cA9FM,EA8FU;AAC1C,QAAI,KAAKnI,EAAT,EAAa;AACX,WAAKiI,QAAL,CAAc1Q,OAAd,CAAsB,UAAA8D,CAAC;AAAA,eAAIA,CAAC,CAACuG,OAAF,CAAUd,KAAV,EAAiBC,WAAjB,EAA8BoH,cAA9B,CAAJ;AAAA,OAAvB;;AAEA,cAAQ,IAAR;AACE;AACA;AACA;AACA,aAAK,KAAKxP,QAAL,IAAiBwP,cAAc,KAAK,IAAzC;AACE1P,UAAAA,aAAa,CAAC,KAAKE,QAAN,CAAb;AACA;AACF;;AAEA,aAAKwP,cAAc,KAAK,IAAxB;AACErP,UAAAA,UAAU,CAAC,KAAKkH,EAAN,CAAV;AACA;AACF;;AAEA,aAAKmI,cAAc,KAAK,IAAxB;AACE5P,UAAAA,SAAS,CAAC,KAAKyH,EAAN,CAAT;AACA;AAhBJ;;AAmBA,WAAKA,EAAL,GAAU,IAAV;AACD;;AAED,WAAO,IAAP;AACD,GAzHiC;;AA2HlC;;;;AAIAiD,EAAAA,KA/HkC,mBA+H1B;AACN,WAAOtM,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkB,IAAlB,EAAwB;AAC7BzD,MAAAA,EAAE,EAAE;AADyB,KAAxB,CAAP;AAGD;AAnIiC,CAAd,CAAtB;AAsIA;;;;;;;AAOA,SAAS+H,QAAT,CAAkBC,IAAlB,EAAwBC,QAAxB,EAAkC;AAChC,MAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AACvBA,IAAAA,QAAQ,GAAG,EAAX;AACD;;AAED,SAAOtR,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkBkH,aAAlB,EAAiC;AACtC3C,IAAAA,IAAI,EAAJA,IADsC;AAEtC+C,IAAAA,YAAY,EAAE9C;AAFwB,GAAjC,CAAP;AAID;AAED;;;;;;;;;;AAQA,SAAS+C,cAAT,CAAwB3T,MAAxB,EAAgC0L,GAAhC,EAAqC7L,KAArC,EAA4CyI,OAA5C,EAAqD;AACnD,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,EAAV;AACD;AAED;;;AACAhJ,EAAAA,MAAM,CAACqU,cAAP,CAAsB3T,MAAtB,EAA8B0L,GAA9B,EAAmCpM,MAAM,CAAC8M,MAAP,CAAc;AAC/CvM,IAAAA,KAAK,EAALA,KAD+C;AAE/C+T,IAAAA,UAAU,EAAE,KAFmC;AAG/CC,IAAAA,QAAQ,EAAE,KAHqC;AAI/CC,IAAAA,YAAY,EAAE;AAJiC,GAAd,EAKhCxL,OALgC,CAAnC;AAMA;;AAEA,SAAOtI,MAAP;AACD;AACD;;;;;;;;;AAQA,SAAS+T,gBAAT,CAA0B/T,MAA1B,EAAkCgU,UAAlC,EAA8C1L,OAA9C,EAAuD;AACrDhJ,EAAAA,MAAM,CAACuO,OAAP,CAAemG,UAAf,EAA2B9T,OAA3B,CAAmC,UAACgL,IAAD,EAAU;AAAA,gCACxBA,IADwB;AAAA,QACtCQ,GADsC;AAAA,QACjC7L,KADiC;;AAE3C8T,IAAAA,cAAc,CAAC3T,MAAD,EAAS0L,GAAT,EAAc7L,KAAd,EAAqByI,OAArB,CAAd;AACD,GAHD;AAIA,SAAOtI,MAAP;AACD;AACD;;;;;;;;AAOA,SAASiU,cAAT,CAAwBjU,MAAxB,EAAgCkU,QAAhC,EAA0C;AACxC5U,EAAAA,MAAM,CAACuO,OAAP,CAAeqG,QAAf,EAAyBhU,OAAzB,CAAiC,UAAC+L,KAAD,EAAW;AAAA,gCACvBA,KADuB;AAAA,QACrCP,GADqC;AAAA,QAChC7L,KADgC;;AAE1C,QAAI,CAACG,MAAM,CAAC0L,GAAD,CAAX,EAAkB1L,MAAM,CAAC0L,GAAD,CAAN,GAAc7L,KAAd;AACnB,GAHD;AAIA,SAAOG,MAAP;AACD;;AAED,IAAMmU,WAAW,GAAG,CAApB;AACA,IAAMC,OAAO,GAAG,CAAhB;AAEA;;;;;;AAKA,SAASC,eAAT,CAAyB5T,MAAzB,EAAiC;AAC/B,SAAOA,MAAM,CAACC,OAAP,CAAe,iBAAf,EAAkC,OAAlC,EAA2C4T,WAA3C,EAAP;AACD;AACD;;;;;;;AAMA,SAASC,iBAAT,CAA2B9T,MAA3B,EAAmC;AACjC,SAAOA,MAAM,CAACC,OAAP,CAAe,QAAf,EAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUA,CAAC,CAACC,WAAF,EAAV;AAAA,GAAzB,CAAP;AACD;AAED;;;;;;;AAMA,SAAS2T,KAAT,CAAeC,OAAf,EAAwB;AACtB,QAAM,IAAIlB,KAAJ,CAAUkB,OAAV,CAAN;AACD;AACD;;;;;;;AAMA,SAASC,8BAAT,CAAwCzH,UAAxC,EAAoD;AAClD,SAAOA,UAAU,CAACC,MAAX,CAAkB,UAACC,GAAD,EAAMC,SAAN,EAAoB;AAAA,QAEzCvN,KAFyC,GAIvCuN,SAJuC,CAEzCvN,KAFyC;AAAA,QAGzCF,IAHyC,GAIvCyN,SAJuC,CAGzCzN,IAHyC;;AAM3C,YAAQ,IAAR;AACE;AACA,WAAK,CAACyN,SAAS,CAACC,IAAX,IAAmB1N,IAAI,KAAKwU,WAAjC;AACE,eAAO7U,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkBe,GAAlB,EAAuB,EAAvB,EAA2BtN,KAA3B,CAAP;AACF;;AAEA,WAAKF,IAAI,KAAKyU,OAAd;AACEjH,QAAAA,GAAG,CAACtN,KAAJ,GAAYuN,SAAS,CAACvN,KAAtB;AACA;AACF;;AAEA;AACEsN,QAAAA,GAAG,CAACoH,iBAAiB,CAACnH,SAAS,CAACC,IAAX,CAAlB,CAAH,GAAyCD,SAAS,CAACvN,KAAnD;AAZJ;;AAeA,WAAOsN,GAAP;AACD,GAtBM,EAsBJ,EAtBI,CAAP;AAuBD;AAED;;;;;;;AAKA,SAASwH,UAAT,CAAoBC,GAApB,EAAyB;AACvB;AACA,MAAI,CAACrT,KAAK,CAACsT,OAAN,CAAcD,GAAd,CAAL,EAAyB;AACvB;AACA,QAAI,gDAAgDE,IAAhD,CAAqDxV,MAAM,CAACgB,SAAP,CAAiByU,QAAjB,CAA0BnR,IAA1B,CAA+BgR,GAA/B,CAArD,KAA6F,OAAOA,GAAG,CAAClQ,MAAX,KAAsB,QAAvH,EAAiI,OAAOnD,KAAK,CAACC,IAAN,CAAWoT,GAAX,CAAP,CAAjI,KAA6J;AAC3J;AACA,aAAO,CAACA,GAAD,CAAP;AACH,GAPsB,CAOrB;;;AAGF,SAAOA,GAAP;AACD;AAED;;;;;;;;AAOA,SAASI,EAAT,CAAW7C,QAAX,EAAqB8C,GAArB,EAA0B;AACxB,SAAON,UAAU,CAAC,OAAOxC,QAAP,KAAoB,QAApB,GAA+B,CAAC8C,GAAG,IAAI/I,QAAR,EAAkBrI,gBAAlB,CAAmCsO,QAAnC,CAA/B,GAA8EA,QAA/E,CAAjB;AACD;AAED;;;;;;;;AAOA,IAAM+C,SAAS,GAAG,SAAZA,SAAY,CAAA7K,MAAM;AAAA,SAAIA,MAAM,CAAC3F,MAAP,KAAkB,CAAlB,GAAsB2F,MAAM,CAAC,CAAD,CAA5B,GAAkCA,MAAtC;AAAA,CAAxB;AACA;;;;;;;;;;AAUA,SAAS8K,UAAT,CAAoBP,GAApB,EAAyBvH,IAAzB,EAA+BlN,MAA/B,EAAuC;AACrC,MAAMiV,KAAK,GAAG,OAAO/H,IAAP,KAAgB,QAAhB,GAA2B,CAACA,IAAD,CAA3B,GAAoCA,IAAlD;AACA,SAAO6H,SAAS,CAACP,UAAU,CAACC,GAAD,CAAV,CAAgB9E,GAAhB,CAAoB,UAAAnH,EAAE,EAAI;AACzC,WAAOuM,SAAS,CAACE,KAAK,CAACtF,GAAN,CAAU,UAAAuF,CAAC;AAAA,aAAI1M,EAAE,CAACxI,MAAD,CAAF,CAAWkV,CAAX,CAAJ;AAAA,KAAX,CAAD,CAAhB;AACD,GAFgB,CAAD,CAAhB;AAGD;AACD;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAASrJ,GAAT,CAAa4I,GAAb,EAAkBvH,IAAlB,EAAwBxN,KAAxB,EAA+B;AAC7B,MAAMyV,KAAK,GAAG,QAAOjI,IAAP,MAAgB,QAAhB,GAA2BA,IAA3B,uBACXA,IADW,EACJxN,KADI,CAAd;AAGA,MAAM0V,KAAK,GAAGjW,MAAM,CAAC2O,IAAP,CAAYqH,KAAZ,CAAd;AACAX,EAAAA,UAAU,CAACC,GAAD,CAAV,CAAgB1U,OAAhB,CAAwB,UAAAyI,EAAE,EAAI;AAC5B4M,IAAAA,KAAK,CAACrV,OAAN,CAAc,UAAAsV,IAAI;AAAA,aAAI7M,EAAE,CAAC8M,YAAH,CAAgBD,IAAhB,EAAsBF,KAAK,CAACE,IAAD,CAA3B,CAAJ;AAAA,KAAlB;AACD,GAFD;AAGA,SAAOZ,GAAP;AACD;AACD;;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAS3R,GAAT,CAAa2R,GAAb,EAAkBvH,IAAlB,EAAwB;AACtB,SAAO8H,UAAU,CAACP,GAAD,EAAMvH,IAAN,EAAY,cAAZ,CAAjB;AACD;;AAED,IAAMqI,WAAW,GAAG,IAAI/X,GAAJ,EAApB;AACA,IAAMgY,mBAAmB,GAAG,aAA5B,EAA2C;;AAE3C,IAAMC,YAAY,GAAI,UAAAC,KAAK,EAAI;AAC7B,SAAO,YAAM;AACX;AACA;AACA;AACA,QAAIA,KAAJ,EAAW,OAAOA,KAAP,CAJA,CAIc;AACzB;;AAEAA,IAAAA,KAAK,GAAGb,EAAC,CAACW,mBAAD,CAAD,CAAuB,CAAvB,KAA6BzJ,QAAQ,CAACsG,aAAT,CAAuB,OAAvB,CAArC;AACAxG,IAAAA,GAAG,CAAC6J,KAAD,EAAQ,MAAR,EAAgB,UAAhB,CAAH;AACA;;AAEA,QAAI,CAACA,KAAK,CAACnU,UAAX,EAAuBwK,QAAQ,CAAC4J,IAAT,CAAc7U,WAAd,CAA0B4U,KAA1B;AACvB,WAAOA,KAAP;AACD,GAbD;AAcD,CAfoB,EAArB;AAgBA;;;;;AAKA,IAAIE,UAAU,GAAG;AACfL,EAAAA,WAAW,EAAXA,WADe;;AAGf;;;;;;AAMAM,EAAAA,GATe,eASX3I,IATW,EASL4I,GATK,EASA;AACb,QAAI,CAACP,WAAW,CAAC3I,GAAZ,CAAgBM,IAAhB,CAAL,EAA4B;AAC1BqI,MAAAA,WAAW,CAAC1J,GAAZ,CAAgBqB,IAAhB,EAAsB4I,GAAtB;AACA,WAAKC,MAAL;AACD;;AAED,WAAO,IAAP;AACD,GAhBc;;AAkBf;;;;;AAKAA,EAAAA,MAvBe,oBAuBN;AACPN,IAAAA,YAAY,GAAGnD,SAAf,GAA2B,mBAAIiD,WAAW,CAACrL,MAAZ,EAAJ,EAA0B8L,IAA1B,CAA+B,IAA/B,CAA3B;AACA,WAAO,IAAP;AACD,GA1Bc;;AA4Bf;;;;;AAKAxU,EAAAA,MAjCe,kBAiCR0L,IAjCQ,EAiCF;AACX,QAAIqI,WAAW,CAAC3I,GAAZ,CAAgBM,IAAhB,CAAJ,EAA2B;AACzBqI,MAAAA,WAAW,CAAC3J,MAAZ,CAAmBsB,IAAnB;AACA,WAAK6I,MAAL;AACD;;AAED,WAAO,IAAP;AACD;AAxCc,CAAjB;AA4CA;;;;;;;;AAOA,SAASE,KAAT,CAAe9L,EAAf,EAAmB;AACjB,OAAK,IAAI+L,IAAI,GAAGC,SAAS,CAAC5R,MAArB,EAA6ByI,GAAG,GAAG,IAAI5L,KAAJ,CAAU8U,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAAnC,EAAuEE,IAAI,GAAG,CAAnF,EAAsFA,IAAI,GAAGF,IAA7F,EAAmGE,IAAI,EAAvG,EAA2G;AACzGpJ,IAAAA,GAAG,CAACoJ,IAAI,GAAG,CAAR,CAAH,GAAgBD,SAAS,CAACC,IAAD,CAAzB;AACD;;AAED,SAAO,YAAY;AACjB,SAAK,IAAIC,KAAK,GAAGF,SAAS,CAAC5R,MAAtB,EAA8B+R,IAAI,GAAG,IAAIlV,KAAJ,CAAUiV,KAAV,CAArC,EAAuDE,KAAK,GAAG,CAApE,EAAuEA,KAAK,GAAGF,KAA/E,EAAsFE,KAAK,EAA3F,EAA+F;AAC7FD,MAAAA,IAAI,CAACC,KAAD,CAAJ,GAAcJ,SAAS,CAACI,KAAD,CAAvB;AACD;;AAEDD,IAAAA,IAAI,aAAOtJ,GAAP,qBAAesJ,IAAf,EAAJ;AACA,WAAOA,IAAI,CAAC/R,MAAL,GAAc4F,EAAE,CAAC5F,MAAjB,GAA0B0R,KAAK,MAAL,UAAM9L,EAAN,4BAAamM,IAAb,GAA1B,GAA+CnM,EAAE,MAAF,4BAAMmM,IAAN,EAAtD;AACD,GAPD;AAQD;AAED;;;;;;;AAMA,SAASE,OAAT,CAAiBjX,OAAjB,EAA0B;AACxB,SAAOuD,GAAG,CAACvD,OAAD,EAAU1B,YAAV,CAAH,IAA8B0B,OAAO,CAACkX,OAAR,CAAgBtC,WAAhB,EAArC;AACD;;AAED,IAAMuC,sBAAsB,GAAGvX,MAAM,CAACC,MAAP,CAAc;AAC3C;AACAyV,EAAAA,CAF2C,aAEzC7C,QAFyC,EAE/B;AACV,WAAO6C,EAAC,CAAC7C,QAAD,EAAW,KAAK5G,IAAhB,CAAD,CAAuB,CAAvB,CAAP;AACD,GAJ0C;AAM3CuL,EAAAA,EAN2C,cAMxC3E,QANwC,EAM9B;AACX,WAAO6C,EAAC,CAAC7C,QAAD,EAAW,KAAK5G,IAAhB,CAAR;AACD;AAR0C,CAAd,CAA/B;AAWA,IAAMwL,kBAAkB,GAAGzX,MAAM,CAACC,MAAP,uDACxBrB,gBADwB,EACL4B,IADK,mCAExB3B,iBAFwB,EAEJ2B,IAFI,mCAGxB1B,kBAHwB,EAGH0B,IAHG,mBAA3B;AAKA,IAAMkX,2BAA2B,GAAG1X,MAAM,CAACC,MAAP,yDACjClB,iBADiC,EACbyB,IADa,oCAEjCxB,mBAFiC,EAEXwB,IAFW,oCAGjCvB,cAHiC,EAGhBuB,IAHgB,oCAIjCtB,oBAJiC,EAIVsB,IAJU,oCAKjCrB,cALiC,EAKhBqB,IALgB,oCAMjCpB,qBANiC,EAMToB,IANS,oCAOjCnB,gBAPiC,EAOdmB,IAPc,oBAApC;AASA,IAAMmX,yBAAyB,GAAG3X,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkB2K,kBAAlB,EAAsC;AACtEnL,EAAAA,KAAK,EAAE9L,IAD+D;AAEtEuM,EAAAA,SAAS,EAAEvM;AAF2D,CAAtC,CAAlC;AAIA;;;;;;;AAOA,IAAMoX,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAC/V,IAAD,EAAOgQ,SAAP;AAAA,SAAqBhQ,IAAI,CAACvD,+BAAD,CAAJ,GAAwCuT,SAA7D;AAAA,CAArC;AACA;;;;;;;AAOA,SAASgG,oBAAT,CAA8BC,WAA9B,EAA2C;AACzC,SAAO,CAAClZ,gBAAD,EAAmBC,iBAAnB,EAAsCC,kBAAtC,EAA0D8O,MAA1D,CAAiE,UAACC,GAAD,EAAMhN,MAAN,EAAiB;AACvFgN,IAAAA,GAAG,CAAChN,MAAD,CAAH,GAAciX,WAAW,CAACjX,MAAD,CAAzB;AACA,WAAOgN,GAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID;AACD;;;;;;;;AAQA,SAASkK,wBAAT,CAAkCzM,QAAlC,EAA4C0M,UAA5C,EAAwD;AACtD,SAAO1M,QAAQ,CAAC8F,QAAD,EAAWnO,eAAX,EAA4BL,YAA5B,EAA0C,UAAAmL,IAAI,EAAI;AAC/D,WAAOiK,UAAU,CAACjK,IAAD,CAAV,IAAoB3P,6BAA6B,CAACuF,GAA9B,CAAkCoK,IAAlC,CAA3B;AACD,GAFc,CAAf;AAGD;AACD;;;;;;;;;;;;AAYA,SAASkK,mBAAT,CAA6BC,mBAA7B,EAAkDtM,IAAlD,EAAwD;AAAA,MAEpDoF,KAFoD,GAOlDpF,IAPkD,CAEpDoF,KAFoD;AAAA,MAGpDrD,UAHoD,GAOlD/B,IAPkD,CAGpD+B,UAHoD;AAAA,MAIpDsI,KAJoD,GAOlDrK,IAPkD,CAIpDqK,KAJoD;AAAA,MAKpDU,GALoD,GAOlD/K,IAPkD,CAKpD+K,GALoD;AAAA,MAMpDrL,QANoD,GAOlDM,IAPkD,CAMpDN,QANoD;AAQtD,MAAIA,QAAJ,EAAc4J,KAAK,CAAC,mCAAD,CAAL;AACd,MAAIyB,GAAJ,EAASzB,KAAK,CAAC,iCAAD,CAAL;AACT,MAAMrD,SAAS,GAAG8C,cAAc,CAACuD,mBAAmB,CAAC;AACnDlH,IAAAA,KAAK,EAALA,KADmD;AAEnDrD,IAAAA,UAAU,EAAVA,UAFmD;AAGnDsI,IAAAA,KAAK,EAALA;AAHmD,GAAD,CAApB,EAI5BwB,kBAJ4B,CAAhC;AAKA,SAAOI,oBAAoB,CAAC,UAAAhX,MAAM;AAAA,WAAI,YAAY;AAChD,WAAK,IAAIkW,IAAI,GAAGC,SAAS,CAAC5R,MAArB,EAA6B+R,IAAI,GAAG,IAAIlV,KAAJ,CAAU8U,IAAV,CAApC,EAAqDE,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGF,IAA3E,EAAiFE,IAAI,EAArF,EAAyF;AACvFE,QAAAA,IAAI,CAACF,IAAD,CAAJ,GAAaD,SAAS,CAACC,IAAD,CAAtB;AACD,OAH+C,CAKhD;AACA;;;AACA,UAAIpW,MAAM,KAAKjC,gBAAf,EAAiC;AAAA,YACxByK,EADwB,GAClB8N,IADkB;AAE/BS,QAAAA,4BAA4B,CAACvO,EAAD,EAAKwI,SAAL,CAA5B;AACD;;AAEDA,MAAAA,SAAS,CAAChR,MAAD,CAAT,OAAAgR,SAAS,EAAYsF,IAAZ,CAAT;AACA,aAAOtF,SAAP;AACD,KAdiC;AAAA,GAAP,CAA3B;AAeD;AACD;;;;;;;;;;AAUA,SAASsG,eAAT,CAAyBxL,KAAzB,EAAgC;AAAA,MAE5BgK,GAF4B,GAM1BhK,KAN0B,CAE5BgK,GAF4B;AAAA,MAG5BrL,QAH4B,GAM1BqB,KAN0B,CAG5BrB,QAH4B;AAAA,MAI5B8M,OAJ4B,GAM1BzL,KAN0B,CAI5ByL,OAJ4B;AAAA,MAK5BrK,IAL4B,GAM1BpB,KAN0B,CAK5BoB,IAL4B;AAO9B,MAAMsK,UAAU,GAAG/M,QAAQ,GAAGyM,wBAAwB,CAACzM,QAAD,EAAW8M,OAAO,GAAGE,mBAAmB,CAACF,OAAO,CAACJ,UAAT,CAAtB,GAA6C,EAA/D,CAA3B,GAAgGL,yBAA3H;AACA,SAAO,UAACvK,KAAD,EAAW;AAAA,QAEd4D,KAFc,GAKZ5D,KALY,CAEd4D,KAFc;AAAA,QAGdrD,UAHc,GAKZP,KALY,CAGdO,UAHc;AAAA,QAIdsI,KAJc,GAKZ7I,KALY,CAId6I,KAJc,EAMhB;;AACA,QAAImC,OAAO,IAAIA,OAAO,CAAC1Y,cAAD,CAAtB,EAAwC,OAAOuY,mBAAmB,CAACG,OAAD,EAAU;AAC1EpH,MAAAA,KAAK,EAALA,KAD0E;AAE1ErD,MAAAA,UAAU,EAAVA,UAF0E;AAG1EsI,MAAAA,KAAK,EAALA,KAH0E;AAI1EU,MAAAA,GAAG,EAAHA,GAJ0E;AAK1ErL,MAAAA,QAAQ,EAARA;AAL0E,KAAV,CAA1B;AAOxC,QAAMiN,YAAY,GAAGxX,YAAY,CAACqX,OAAD,CAAZ,IAAyB,EAA9C;AACA,QAAMvG,SAAS,GAAG2G,eAAe,CAAC;AAChC7B,MAAAA,GAAG,EAAHA,GADgC;AAEhCrL,MAAAA,QAAQ,EAAE+M,UAFsB;AAGhCE,MAAAA,YAAY,EAAZA,YAHgC;AAIhCxK,MAAAA,IAAI,EAAJA;AAJgC,KAAD,CAAf,CAKf;AACDiD,MAAAA,KAAK,EAALA,KADC;AAEDrD,MAAAA,UAAU,EAAVA,UAFC;AAGDsI,MAAAA,KAAK,EAALA;AAHC,KALe,CAAlB,CAfgB,CAwBZ;AACJ;AACA;AACA;;AAEA,WAAO;AACL/L,MAAAA,KADK,iBACC9J,OADD,EACUgK,WADV,EACuBqO,KADvB,EAC8B;AACjC,eAAO5G,SAAS,CAAC3H,KAAV,CAAgB9J,OAAhB,EAAyBqY,KAAzB,EAAgCrO,WAAhC,CAAP;AACD,OAHI;AAKLC,MAAAA,MALK,kBAKED,WALF,EAKeqO,KALf,EAKsB;AACzB,eAAO5G,SAAS,CAACxH,MAAV,CAAiBoO,KAAjB,EAAwBrO,WAAxB,CAAP;AACD,OAPI;AASLa,MAAAA,OATK,mBASGyN,YATH,EASiB;AACpB,eAAO7G,SAAS,CAAC5G,OAAV,CAAkByN,YAAlB,CAAP;AACD;AAXI,KAAP;AAcD,GA3CD;AA4CD;AACD;;;;;;;;AAOA,SAASF,eAAT,CAAyBhK,KAAzB,EAAgC;AAAA;;AAAA,MAE5BmI,GAF4B,GAM1BnI,KAN0B,CAE5BmI,GAF4B;AAAA,MAG5BrL,QAH4B,GAM1BkD,KAN0B,CAG5BlD,QAH4B;AAAA,MAI5BiN,YAJ4B,GAM1B/J,KAN0B,CAI5B+J,YAJ4B;AAAA,MAK5BxK,IAL4B,GAM1BS,KAN0B,CAK5BT,IAL4B,EAO9B;;AACA,MAAI4I,GAAG,IAAI5I,IAAX,EAAiB0I,UAAU,CAACC,GAAX,CAAe3I,IAAf,EAAqB4I,GAArB;AACjB,SAAOG,KAAK,CAAC6B,mBAAD,CAAL,CAA2BlE,gBAAgB,EAAE;AACpDE,EAAAA,cAAc,CAAC4D,YAAD,EAAevY,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkB4K,2BAAlB,sBAC1BnY,SAD0B,EACd,EADc,EAAf,CADoC,EAG7CS,MAAM,CAAC8M,MAAP,yDAEFtN,SAFE,EAEU,IAFV,oCAGFC,QAHE,EAGS,IAHT,qBAIF8X,sBAJE,EAIsB;AACzBxJ,IAAAA,IAAI,EAAJA,IADyB;AAEzB4I,IAAAA,GAAG,EAAHA,GAFyB;AAGzBrL,IAAAA,QAAQ,EAARA;AAHyB,GAJtB,CAH6C,CAA3C,CAAP;AAYD;AACD;;;;;;;;AAOA,SAASsN,uBAAT,CAAiC/W,IAAjC,EAAuC8L,UAAvC,EAAmD;AACjD,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AACzBA,IAAAA,UAAU,GAAG,EAAb;AACD;;AAED,MAAMwC,WAAW,GAAGxC,UAAU,CAAC6C,GAAX,CAAe,UAAA/L,CAAC;AAAA,WAAI6L,QAAQ,CAACzO,IAAD,EAAO4C,CAAP,CAAZ;AAAA,GAAhB,CAApB;AACA,MAAMsH,OAAO,GAAG,EAAhB;AACA,SAAO/L,MAAM,CAAC8M,MAAP,CAAcf,OAAd,EAAuB/L,MAAM,CAAC8M,MAAP,CAAc;AAC1CqD,IAAAA,WAAW,EAAXA;AAD0C,GAAd,EAE3B0H,oBAAoB,CAAC,UAAAhX,MAAM;AAAA,WAAI,UAAAsJ,KAAK,EAAI;AACzCgG,MAAAA,WAAW,CAACvP,OAAZ,CAAoB,UAAA8R,CAAC;AAAA,eAAIA,CAAC,CAAC7R,MAAD,CAAD,CAAUsJ,KAAV,CAAJ;AAAA,OAArB;AACA,aAAO4B,OAAP;AACD,KAH6B;AAAA,GAAP,CAFO,CAAvB,CAAP;AAMD;AACD;;;;;;;AAOA,SAASuM,mBAAT,CAA6BN,UAA7B,EAAyC;AACvC,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AACzBA,IAAAA,UAAU,GAAG,EAAb;AACD;;AAED,SAAOhY,MAAM,CAACuO,OAAP,CAAexN,YAAY,CAACiX,UAAD,CAA3B,EAAyCpK,MAAzC,CAAgD,UAACC,GAAD,EAAMgB,KAAN,EAAgB;AAAA,gCAClDA,KADkD;AAAA,QAChEzC,GADgE;AAAA,QAC3D7L,KAD2D;;AAErEsN,IAAAA,GAAG,CAACkH,eAAe,CAAC3I,GAAD,CAAhB,CAAH,GAA4B+L,eAAe,CAAC5X,KAAD,CAA3C;AACA,WAAOsN,GAAP;AACD,GAJM,EAIJ,EAJI,CAAP;AAKD;AACD;;;;;;;AAOA,SAASgL,UAAT,CAAoBhH,SAApB,EAA+B;AAC7B,SAAO,mBAAIrT,WAAJ,EAAiBoP,MAAjB,CAAwB,UAACtM,CAAD,EAAI0J,EAAJ;AAAA,WAAWA,EAAE,CAAC1J,CAAD,CAAF,IAASA,CAApB;AAAA,GAAxB,EAA+CuQ,SAA/C,CAAP;AACD;AACD;;;;;;;;AAQA,SAASiH,YAAT,CAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;AACxC,SAAOhZ,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkBiM,QAAlB,EAA4B,EAA5B,EAAgChY,YAAY,CAACiY,QAAD,CAA5C,CAAP;AACD;AACD;;;;;;;;AAQA,SAASC,UAAT,CAAoB7Y,OAApB,EAA6B2N,IAA7B,EAAmC;AACjC,MAAIsJ,OAAO,CAACjX,OAAD,CAAP,KAAqB2N,IAAzB,EAA+B;AAC7BrB,IAAAA,GAAG,CAACtM,OAAD,EAAU1B,YAAV,EAAwBqP,IAAxB,CAAH;AACD;AACF;AACD;;;;;;;;;AASA,SAAS4K,mBAAT,CAA6B9G,SAA7B,EAAwC1C,KAAxC,EAA+C;AAAA,MAE3C6B,KAF2C,GAKzC7B,KALyC,CAE3C6B,KAF2C;AAAA,MAG3CrD,UAH2C,GAKzCwB,KALyC,CAG3CxB,UAH2C;AAAA,MAI3CsI,KAJ2C,GAKzC9G,KALyC,CAI3C8G,KAJ2C;AAM7C,SAAOxV,eAAe,CAACoY,UAAU,CAACpE,gBAAgB,CAACzU,MAAM,CAACmM,MAAP,CAAc0F,SAAd,CAAD,EAA2B;AAC3E3H,IAAAA,KAD2E,iBACrE9J,OADqE,EAC5DqY,KAD4D,EACrDrO,WADqD,EACxC;AACjC,UAAIqO,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpBA,QAAAA,KAAK,GAAG,EAAR;AACD;;AAED,WAAK5Y,qBAAL,IAA8B+Y,uBAAuB,CAACxY,OAAD,EAAUuN,UAAV,CAAvB,CAA6CzD,KAA7C,CAAmDE,WAAnD,CAA9B;AACAiK,MAAAA,cAAc,CAAC,IAAD,EAAO/U,SAAP,EAAkBU,MAAM,CAACC,MAAP,CAAcD,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkBmJ,KAAlB,EAAyB,EAAzB,EAA6Bb,8BAA8B,CAAC,KAAKvV,qBAAL,EAA4BsQ,WAA7B,CAA3D,CAAd,CAAlB,CAAd;AACA,WAAK5Q,SAAL,IAAkBuZ,YAAY,CAAC,KAAKvZ,SAAL,CAAD,EAAkBkZ,KAAlB,CAA9B;AACA,WAAK3Y,mBAAL,IAA4B,KAAKwL,QAAL,CAAcyB,SAAd,CAAwB3M,OAAxB,EAAiCkM,KAAjC,EAA5B,CARiC,CAQqC;;AAEtEsL,MAAAA,4BAA4B,CAACxX,OAAD,EAAU,IAAV,CAA5B,CAViC,CAUY;;AAE7CyR,MAAAA,SAAS,CAAC9D,IAAV,IAAkBkL,UAAU,CAAC7Y,OAAD,EAAUyR,SAAS,CAAC9D,IAApB,CAA5B,CAZiC,CAYsB;;AAEvDsG,MAAAA,cAAc,CAAC,IAAD,EAAO5U,QAAP,EAAiBW,OAAjB,CAAd,CAdiC,CAcQ;;AAEzCiU,MAAAA,cAAc,CAAC,IAAD,EAAO7U,SAAP,EAAkBwR,KAAlB,CAAd,CAhBiC,CAgBO;;AAExC,WAAKhS,mBAAL,EAA0B,KAAKM,SAAL,CAA1B,EAA2C,KAAKC,SAAL,CAA3C,EAlBiC,CAkB4B;;AAE7D,WAAKO,mBAAL,EAA0BoK,KAA1B,CAAgC9J,OAAhC,EAAyC,IAAzC,EAA+CgK,WAA/C;AACA,WAAKxK,iBAAL,IAA0BwK,WAA1B;AACA,WAAKnL,cAAL,EAAqB,KAAKK,SAAL,CAArB,EAAsC,KAAKC,SAAL,CAAtC;AACA,aAAO,IAAP;AACD,KAzB0E;AA2B3E8K,IAAAA,MA3B2E,kBA2BpEoO,KA3BoE,EA2B7DrO,WA3B6D,EA2BhD;AACzB,UAAIqO,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpBA,QAAAA,KAAK,GAAG,EAAR;AACD;;AAED,UAAIrO,WAAJ,EAAiB;AACf,aAAKvK,qBAAL,EAA4BwK,MAA5B,CAAmCD,WAAnC;AACD;;AAED,UAAM8O,QAAQ,GAAG9D,8BAA8B,CAAC,KAAKvV,qBAAL,EAA4BsQ,WAA7B,CAA/C;AACA,UAAI,KAAKpR,iBAAL,EAAwBma,QAAxB,EAAkC,KAAK5Z,SAAL,CAAlC,MAAuD,KAA3D,EAAkE;AAClE+U,MAAAA,cAAc,CAAC,IAAD,EAAO/U,SAAP,EAAkBU,MAAM,CAACC,MAAP,CAAcD,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkBmJ,KAAlB,EAAyB,EAAzB,EAA6BiD,QAA7B,CAAd,CAAlB,CAAd;AACA,WAAK3Z,SAAL,IAAkBuZ,YAAY,CAAC,KAAKvZ,SAAL,CAAD,EAAkBkZ,KAAlB,CAA9B;AACA,WAAKvZ,oBAAL,EAA2B,KAAKI,SAAL,CAA3B,EAA4C,KAAKC,SAAL,CAA5C;AACA,WAAKO,mBAAL,EAA0BuK,MAA1B,CAAiC,IAAjC,EAAuC,KAAKzK,iBAAL,CAAvC;AACA,WAAKT,cAAL,EAAqB,KAAKG,SAAL,CAArB,EAAsC,KAAKC,SAAL,CAAtC;AACA,aAAO,IAAP;AACD,KA5C0E;AA8C3E0L,IAAAA,OA9C2E,mBA8CnEyN,YA9CmE,EA8CrD;AACpB,WAAKtZ,qBAAL,EAA4B,KAAKE,SAAL,CAA5B,EAA6C,KAAKC,SAAL,CAA7C;AACA,WAAKM,qBAAL,EAA4BoL,OAA5B,GAFoB,CAEmB;AACvC;;AAEA,WAAKnL,mBAAL,EAA0BmL,OAA1B,CAAkC,IAAlC,EAAwC,KAAKrL,iBAAL,CAAxC,EAAiE8Y,YAAY,KAAK,IAAjB,GAAwB,IAAxB,GAA+B,CAACA,YAAjG;AACA,WAAKrZ,gBAAL,EAAuB,KAAKC,SAAL,CAAvB,EAAwC,KAAKC,SAAL,CAAxC;AACA,aAAO,IAAP;AACD;AAtD0E,GAA3B,CAAjB,CAAX,EAwDjBS,MAAM,CAAC2O,IAAP,CAAYkD,SAAZ,EAAuBsH,MAAvB,CAA8B,UAAAjD,IAAI;AAAA,WAAI5V,UAAU,CAACuR,SAAS,CAACqE,IAAD,CAAV,CAAd;AAAA,GAAlC,CAxDiB,CAAtB;AAyDD;AACD;;;;;;;;;AAQA,SAASkD,cAAT,CAAwBhZ,OAAxB,EAAiCiZ,YAAjC,EAA+CC,aAA/C,EAA8D;AAC5D,MAAMvL,IAAI,GAAGuL,aAAa,IAAIjC,OAAO,CAACjX,OAAD,CAArC;AACA,MAAI,CAAChC,6BAA6B,CAACqP,GAA9B,CAAkCM,IAAlC,CAAL,EAA8CmH,KAAK,iCAAyBnH,IAAzB,6BAAL;AAC9C,MAAM8D,SAAS,GAAGzT,6BAA6B,CAACuF,GAA9B,CAAkCoK,IAAlC,EAAwC;AACxDkI,IAAAA,KAAK,EAAEoD;AADiD,GAAxC,CAAlB;AAGA,SAAOxH,SAAS,CAAC3H,KAAV,CAAgB9J,OAAhB,CAAP;AACD;AAED;;;;;;;AAMA,SAASmZ,qBAAT,CAA+BnZ,OAA/B,EAAwC;AACtC,SAAO6B,KAAK,CAACC,IAAN,CAAW9B,OAAO,CAACuN,UAAnB,EAA+BC,MAA/B,CAAsC,UAACC,GAAD,EAAMC,SAAN,EAAoB;AAC/DD,IAAAA,GAAG,CAACoH,iBAAiB,CAACnH,SAAS,CAACC,IAAX,CAAlB,CAAH,GAAyCD,SAAS,CAACvN,KAAnD;AACA,WAAOsN,GAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID;AAED;;;;;;;AAMA;;;;;;;;;;AASA,SAAS2L,OAAT,GAAmB;AACjB,OAAK,IAAItC,KAAK,GAAGF,SAAS,CAAC5R,MAAtB,EAA8BqU,GAAG,GAAG,IAAIxX,KAAJ,CAAUiV,KAAV,CAApC,EAAsDE,KAAK,GAAG,CAAnE,EAAsEA,KAAK,GAAGF,KAA9E,EAAqFE,KAAK,EAA1F,EAA8F;AAC5FqC,IAAAA,GAAG,CAACrC,KAAD,CAAH,GAAaJ,SAAS,CAACI,KAAD,CAAtB;AACD;;AAED,SAAOqC,GAAG,CAAC7L,MAAJ,CAAW,UAAC8L,CAAD,EAAIC,CAAJ;AAAA,WAAU,YAAY;AACtC,aAAOD,CAAC,CAACC,CAAC,MAAD,SAAK3C,SAAL,CAAD,CAAR;AACD,KAFiB;AAAA,GAAX,CAAP;AAGD;;IAGkC4C,oCAG/B7Z,QAHFzB;IAC+Bub,kCAE7B9Z,QAFF3B;IACa0b,gBACX/Z,QADFvB;AAEF;;;;;;;AAOA,SAASub,oBAAT,CAA8B3Z,OAA9B,EAAuCiZ,YAAvC,EAAqD;AACnD,MAAIA,YAAY,KAAK,KAAK,CAA1B,EAA6B;AAC3BA,IAAAA,YAAY,GAAG,EAAf;AACD;;AAED,SAAOrZ,MAAM,CAAC8M,MAAP,CAAc,EAAd,EAAkByM,qBAAqB,CAACnZ,OAAD,CAAvC,EAAkD,EAAlD,EAAsDW,YAAY,CAACsY,YAAD,CAAlE,CAAP;AACD;AACD;;;;AAIA;;;;;;;;AAQA,SAASW,QAAT,CAAkBjM,IAAlB,EAAwBnC,IAAxB,EAA8B;AAAA,MAE1B+K,GAF0B,GAKxB/K,IALwB,CAE1B+K,GAF0B;AAAA,MAG1BrL,QAH0B,GAKxBM,IALwB,CAG1BN,QAH0B;AAAA,MAI1B8M,OAJ0B,GAKxBxM,IALwB,CAI1BwM,OAJ0B;AAM5B,MAAIyB,+BAA+B,CAACpM,GAAhC,CAAoCM,IAApC,CAAJ,EAA+CmH,KAAK,2BAAmBnH,IAAnB,+BAAL;AAC/C8L,EAAAA,+BAA+B,CAACnN,GAAhC,CAAoCqB,IAApC,EAA0CoK,eAAe,CAAC;AACxDpK,IAAAA,IAAI,EAAJA,IADwD;AAExD4I,IAAAA,GAAG,EAAHA,GAFwD;AAGxDrL,IAAAA,QAAQ,EAARA,QAHwD;AAIxD8M,IAAAA,OAAO,EAAPA;AAJwD,GAAD,CAAzD;AAMA,SAAOyB,+BAAP;AACD;AACD;;;;;;;AAMA,SAASI,UAAT,CAAoBlM,IAApB,EAA0B;AACxB,MAAI,CAAC8L,+BAA+B,CAACpM,GAAhC,CAAoCM,IAApC,CAAL,EAAgDmH,KAAK,2BAAmBnH,IAAnB,6BAAL;AAChD8L,EAAAA,+BAA+B,CAACpN,MAAhC,CAAuCsB,IAAvC;AACA0I,EAAAA,UAAU,CAACpU,MAAX,CAAkB0L,IAAlB;AACA,SAAO8L,+BAAP;AACD;AACD;;;;;;;;;AAQA,SAAS3P,KAAT,CAAe2I,QAAf,EAAyBwG,YAAzB,EAAuCtL,IAAvC,EAA6C;AAC3C,SAAO2H,EAAC,CAAC7C,QAAD,CAAD,CAAYrC,GAAZ,CAAgB,UAAApQ,OAAO;AAAA,WAAIgZ,cAAc,CAAChZ,OAAD,EAAU2Z,oBAAoB,CAAC3Z,OAAD,EAAUiZ,YAAV,CAA9B,EAAuDtL,IAAvD,CAAlB;AAAA,GAAvB,CAAP;AACD;AACD;;;;;;;;AAOA,SAAS9C,OAAT,CAAiB4H,QAAjB,EAA2BqH,eAA3B,EAA4C;AAC1C,SAAOxE,EAAC,CAAC7C,QAAD,CAAD,CAAYrC,GAAZ,CAAgB,UAAApQ,OAAO,EAAI;AAChC,QAAIA,OAAO,CAACwZ,iCAAD,CAAX,EAAgD;AAC9CxZ,MAAAA,OAAO,CAACwZ,iCAAD,CAAP,CAA2C3O,OAA3C,CAAmDiP,eAAnD;AACD;;AAED,WAAO9Z,OAAP;AACD,GANM,CAAP;AAOD;AACD;;;;;;;AAMA,SAAS+Z,OAAT,CAAiBC,MAAjB,EAAyB;AACvB,MAAI,CAAC9Z,UAAU,CAAC8Z,MAAD,CAAf,EAAyBlF,KAAK,CAAC,kCAAD,CAAL;AACzB,MAAI4E,aAAa,CAACrM,GAAd,CAAkB2M,MAAlB,CAAJ,EAA+BlF,KAAK,CAAC,iCAAD,CAAL;AAC/B4E,EAAAA,aAAa,CAACpD,GAAd,CAAkB0D,MAAlB;AACA,SAAON,aAAP;AACD;AACD;;;;;;;AAMA,SAASO,SAAT,CAAmBD,MAAnB,EAA2B;AACzB,MAAI,CAACN,aAAa,CAACrM,GAAd,CAAkB2M,MAAlB,CAAL,EAAgClF,KAAK,CAAC,iCAAD,CAAL;AAChC4E,EAAAA,aAAa,CAACrN,MAAd,CAAqB2N,MAArB;AACA,SAAON,aAAP;AACD;AACD;;;;;;;AAMA,SAASjI,SAAT,CAAmByI,cAAnB,EAAmC;AACjC,SAAO,UAAUjR,EAAV,EAAc4M,KAAd,EAAqBsE,KAArB,EAA4B;AAAA,iBAI7BA,KAAK,KAAK,KAAK,CAAf,GAAmB,EAAnB,GAAwBA,KAJK;AAAA,QAE/BvJ,KAF+B,UAE/BA,KAF+B;AAAA,QAG/BrD,UAH+B,UAG/BA,UAH+B;;AAKjC,WAAO6L,OAAO,CAAC,UAAAlY,CAAC;AAAA,aAAIA,CAAC,CAAC4I,KAAF,CAAQb,EAAR,CAAJ;AAAA,KAAF,EAAmB,UAAA/H,CAAC;AAAA,aAAIA,CAAC,CAAC;AACtC2U,QAAAA,KAAK,EAAE8D,oBAAoB,CAAC1Q,EAAD,EAAK4M,KAAL,CADW;AAEtCjF,QAAAA,KAAK,EAALA,KAFsC;AAGtCrD,QAAAA,UAAU,EAAVA;AAHsC,OAAD,CAAL;AAAA,KAApB,EAIVwK,eAJU,CAAP,CAIcmC,cAJd,CAAP;AAKD,GAVD;AAWD;AACD;;;;;;;AAMA,SAASE,IAAT,CAAcC,IAAd,EAAoB;AAClB,MAAI,CAACna,UAAU,CAACma,IAAD,CAAf,EAAuBvF,KAAK,CAAC,qDAAD,CAAL;AACvBuF,EAAAA,IAAI,CAAC/a,cAAD,CAAJ,GAAuB,IAAvB;AACA,SAAO+a,IAAP;AACD;AACD;;;AAEA,IAAMC,OAAO,GAAG,QAAhB,EAA0B;;;AAE1B,IAAMC,EAAE,GAAG;AACTlE,EAAAA,UAAU,EAAVA,UADS;AAET0B,EAAAA,eAAe,EAAfA,eAFS;AAGTK,EAAAA,eAAe,EAAfA,eAHS;AAITzY,EAAAA,OAAO,EAAPA;AAJS,CAAX","file":"checkpoint.846431ef.js","sourceRoot":"..\\src\\browser\\graphics","sourcesContent":["/* Riot v4.8.7, @license MIT */\nconst COMPONENTS_IMPLEMENTATION_MAP = new Map(),\n      DOM_COMPONENT_INSTANCE_PROPERTY = Symbol('riot-component'),\n      PLUGINS_SET = new Set(),\n      IS_DIRECTIVE = 'is',\n      VALUE_ATTRIBUTE = 'value',\n      MOUNT_METHOD_KEY = 'mount',\n      UPDATE_METHOD_KEY = 'update',\n      UNMOUNT_METHOD_KEY = 'unmount',\n      SHOULD_UPDATE_KEY = 'shouldUpdate',\n      ON_BEFORE_MOUNT_KEY = 'onBeforeMount',\n      ON_MOUNTED_KEY = 'onMounted',\n      ON_BEFORE_UPDATE_KEY = 'onBeforeUpdate',\n      ON_UPDATED_KEY = 'onUpdated',\n      ON_BEFORE_UNMOUNT_KEY = 'onBeforeUnmount',\n      ON_UNMOUNTED_KEY = 'onUnmounted',\n      PROPS_KEY = 'props',\n      STATE_KEY = 'state',\n      SLOTS_KEY = 'slots',\n      ROOT_KEY = 'root',\n      IS_PURE_SYMBOL = Symbol.for('pure'),\n      PARENT_KEY_SYMBOL = Symbol('parent'),\n      ATTRIBUTES_KEY_SYMBOL = Symbol('attributes'),\n      TEMPLATE_KEY_SYMBOL = Symbol('template');\n\nvar globals = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  COMPONENTS_IMPLEMENTATION_MAP: COMPONENTS_IMPLEMENTATION_MAP,\n  DOM_COMPONENT_INSTANCE_PROPERTY: DOM_COMPONENT_INSTANCE_PROPERTY,\n  PLUGINS_SET: PLUGINS_SET,\n  IS_DIRECTIVE: IS_DIRECTIVE,\n  VALUE_ATTRIBUTE: VALUE_ATTRIBUTE,\n  MOUNT_METHOD_KEY: MOUNT_METHOD_KEY,\n  UPDATE_METHOD_KEY: UPDATE_METHOD_KEY,\n  UNMOUNT_METHOD_KEY: UNMOUNT_METHOD_KEY,\n  SHOULD_UPDATE_KEY: SHOULD_UPDATE_KEY,\n  ON_BEFORE_MOUNT_KEY: ON_BEFORE_MOUNT_KEY,\n  ON_MOUNTED_KEY: ON_MOUNTED_KEY,\n  ON_BEFORE_UPDATE_KEY: ON_BEFORE_UPDATE_KEY,\n  ON_UPDATED_KEY: ON_UPDATED_KEY,\n  ON_BEFORE_UNMOUNT_KEY: ON_BEFORE_UNMOUNT_KEY,\n  ON_UNMOUNTED_KEY: ON_UNMOUNTED_KEY,\n  PROPS_KEY: PROPS_KEY,\n  STATE_KEY: STATE_KEY,\n  SLOTS_KEY: SLOTS_KEY,\n  ROOT_KEY: ROOT_KEY,\n  IS_PURE_SYMBOL: IS_PURE_SYMBOL,\n  PARENT_KEY_SYMBOL: PARENT_KEY_SYMBOL,\n  ATTRIBUTES_KEY_SYMBOL: ATTRIBUTES_KEY_SYMBOL,\n  TEMPLATE_KEY_SYMBOL: TEMPLATE_KEY_SYMBOL\n});\n\n/**\n * Quick type checking\n * @param   {*} element - anything\n * @param   {string} type - type definition\n * @returns {boolean} true if the type corresponds\n */\nfunction checkType(element, type) {\n  return typeof element === type;\n}\n/**\n * Check that will be passed if its argument is a function\n * @param   {*} value - value to check\n * @returns {boolean} - true if the value is a function\n */\n\nfunction isFunction(value) {\n  return checkType(value, 'function');\n}\n\nfunction noop() {\n  return this;\n}\n/**\n * Autobind the methods of a source object to itself\n * @param   {Object} source - probably a riot tag instance\n * @param   {Array<string>} methods - list of the methods to autobind\n * @returns {Object} the original object received\n */\n\nfunction autobindMethods(source, methods) {\n  methods.forEach(method => {\n    source[method] = source[method].bind(source);\n  });\n  return source;\n}\n/**\n * Call the first argument received only if it's a function otherwise return it as it is\n * @param   {*} source - anything\n * @returns {*} anything\n */\n\nfunction callOrAssign(source) {\n  return isFunction(source) ? source.prototype && source.prototype.constructor ? new source() : source() : source;\n}\n\n/**\n * Convert a string from camel case to dash-case\n * @param   {string} string - probably a component tag name\n * @returns {string} component name normalized\n */\n\n/**\n * Convert a string containing dashes to camel case\n * @param   {string} string - input string\n * @returns {string} my-string -> myString\n */\nfunction dashToCamelCase(string) {\n  return string.replace(/-(\\w)/g, (_, c) => c.toUpperCase());\n}\n/**\n * Move all the child nodes from a source tag to another\n * @param   {HTMLElement} source - source node\n * @param   {HTMLElement} target - target node\n * @returns {undefined} it's a void method ¯\\_(ツ)_/¯\n */\n// Ignore this helper because it's needed only for svg tags\n\n\nfunction moveChildren(source, target) {\n  if (source.firstChild) {\n    target.appendChild(source.firstChild);\n    moveChildren(source, target);\n  }\n}\n/**\n * Remove the child nodes from any DOM node\n * @param   {HTMLElement} node - target node\n * @returns {undefined}\n */\n\n\nfunction cleanNode(node) {\n  clearChildren(node.childNodes);\n}\n/**\n * Clear multiple children in a node\n * @param   {HTMLElement[]} children - direct children nodes\n * @returns {undefined}\n */\n\n\nfunction clearChildren(children) {\n  Array.from(children).forEach(removeNode);\n}\n/**\n * Remove a node from the DOM\n * @param   {HTMLElement} node - target node\n * @returns {undefined}\n */\n\n\nfunction removeNode(node) {\n  const {\n    parentNode\n  } = node;\n  if (node.remove) node.remove();\n  /* istanbul ignore else */\n  else if (parentNode) parentNode.removeChild(node);\n}\n\nconst EACH = 0;\nconst IF = 1;\nconst SIMPLE = 2;\nconst TAG = 3;\nconst SLOT = 4;\nvar bindingTypes = {\n  EACH,\n  IF,\n  SIMPLE,\n  TAG,\n  SLOT\n};\nconst ATTRIBUTE = 0;\nconst EVENT = 1;\nconst TEXT = 2;\nconst VALUE = 3;\nvar expressionTypes = {\n  ATTRIBUTE,\n  EVENT,\n  TEXT,\n  VALUE\n};\n/**\n * Create the template meta object in case of <template> fragments\n * @param   {TemplateChunk} componentTemplate - template chunk object\n * @returns {Object} the meta property that will be passed to the mount function of the TemplateChunk\n */\n\nfunction createTemplateMeta(componentTemplate) {\n  const fragment = componentTemplate.dom.cloneNode(true);\n  return {\n    avoidDOMInjection: true,\n    fragment,\n    children: Array.from(fragment.childNodes)\n  };\n}\n\nconst {\n  indexOf: iOF\n} = [];\n\nconst append = (get, parent, children, start, end, before) => {\n  const isSelect = 'selectedIndex' in parent;\n  let noSelection = isSelect;\n\n  while (start < end) {\n    const child = get(children[start], 1);\n    parent.insertBefore(child, before);\n\n    if (isSelect && noSelection && child.selected) {\n      noSelection = !noSelection;\n      let {\n        selectedIndex\n      } = parent;\n      parent.selectedIndex = selectedIndex < 0 ? start : iOF.call(parent.querySelectorAll('option'), child);\n    }\n\n    start++;\n  }\n};\n\nconst eqeq = (a, b) => a == b;\n\nconst identity = O => O;\n\nconst indexOf = (moreNodes, moreStart, moreEnd, lessNodes, lessStart, lessEnd, compare) => {\n  const length = lessEnd - lessStart;\n  /* istanbul ignore if */\n\n  if (length < 1) return -1;\n\n  while (moreEnd - moreStart >= length) {\n    let m = moreStart;\n    let l = lessStart;\n\n    while (m < moreEnd && l < lessEnd && compare(moreNodes[m], lessNodes[l])) {\n      m++;\n      l++;\n    }\n\n    if (l === lessEnd) return moreStart;\n    moreStart = m + 1;\n  }\n\n  return -1;\n};\n\nconst isReversed = (futureNodes, futureEnd, currentNodes, currentStart, currentEnd, compare) => {\n  while (currentStart < currentEnd && compare(currentNodes[currentStart], futureNodes[futureEnd - 1])) {\n    currentStart++;\n    futureEnd--;\n  }\n\n  return futureEnd === 0;\n};\n\nconst next = (get, list, i, length, before) => i < length ? get(list[i], 0) : 0 < i ? get(list[i - 1], -0).nextSibling : before;\n\nconst remove = (get, children, start, end) => {\n  while (start < end) drop(get(children[start++], -1));\n}; // - - - - - - - - - - - - - - - - - - -\n// diff related constants and utilities\n// - - - - - - - - - - - - - - - - - - -\n\n\nconst DELETION = -1;\nconst INSERTION = 1;\nconst SKIP = 0;\nconst SKIP_OND = 50;\n\nconst HS = (futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges) => {\n  let k = 0;\n  /* istanbul ignore next */\n\n  let minLen = futureChanges < currentChanges ? futureChanges : currentChanges;\n  const link = Array(minLen++);\n  const tresh = Array(minLen);\n  tresh[0] = -1;\n\n  for (let i = 1; i < minLen; i++) tresh[i] = currentEnd;\n\n  const nodes = currentNodes.slice(currentStart, currentEnd);\n\n  for (let i = futureStart; i < futureEnd; i++) {\n    const index = nodes.indexOf(futureNodes[i]);\n\n    if (-1 < index) {\n      const idxInOld = index + currentStart;\n      k = findK(tresh, minLen, idxInOld);\n      /* istanbul ignore else */\n\n      if (-1 < k) {\n        tresh[k] = idxInOld;\n        link[k] = {\n          newi: i,\n          oldi: idxInOld,\n          prev: link[k - 1]\n        };\n      }\n    }\n  }\n\n  k = --minLen;\n  --currentEnd;\n\n  while (tresh[k] > currentEnd) --k;\n\n  minLen = currentChanges + futureChanges - k;\n  const diff = Array(minLen);\n  let ptr = link[k];\n  --futureEnd;\n\n  while (ptr) {\n    const {\n      newi,\n      oldi\n    } = ptr;\n\n    while (futureEnd > newi) {\n      diff[--minLen] = INSERTION;\n      --futureEnd;\n    }\n\n    while (currentEnd > oldi) {\n      diff[--minLen] = DELETION;\n      --currentEnd;\n    }\n\n    diff[--minLen] = SKIP;\n    --futureEnd;\n    --currentEnd;\n    ptr = ptr.prev;\n  }\n\n  while (futureEnd >= futureStart) {\n    diff[--minLen] = INSERTION;\n    --futureEnd;\n  }\n\n  while (currentEnd >= currentStart) {\n    diff[--minLen] = DELETION;\n    --currentEnd;\n  }\n\n  return diff;\n}; // this is pretty much the same petit-dom code without the delete map part\n// https://github.com/yelouafi/petit-dom/blob/bd6f5c919b5ae5297be01612c524c40be45f14a7/src/vdom.js#L556-L561\n\n\nconst OND = (futureNodes, futureStart, rows, currentNodes, currentStart, cols, compare) => {\n  const length = rows + cols;\n  const v = [];\n  let d, k, r, c, pv, cv, pd;\n\n  outer: for (d = 0; d <= length; d++) {\n    /* istanbul ignore if */\n    if (d > SKIP_OND) return null;\n    pd = d - 1;\n    /* istanbul ignore next */\n\n    pv = d ? v[d - 1] : [0, 0];\n    cv = v[d] = [];\n\n    for (k = -d; k <= d; k += 2) {\n      if (k === -d || k !== d && pv[pd + k - 1] < pv[pd + k + 1]) {\n        c = pv[pd + k + 1];\n      } else {\n        c = pv[pd + k - 1] + 1;\n      }\n\n      r = c - k;\n\n      while (c < cols && r < rows && compare(currentNodes[currentStart + c], futureNodes[futureStart + r])) {\n        c++;\n        r++;\n      }\n\n      if (c === cols && r === rows) {\n        break outer;\n      }\n\n      cv[d + k] = c;\n    }\n  }\n\n  const diff = Array(d / 2 + length / 2);\n  let diffIdx = diff.length - 1;\n\n  for (d = v.length - 1; d >= 0; d--) {\n    while (c > 0 && r > 0 && compare(currentNodes[currentStart + c - 1], futureNodes[futureStart + r - 1])) {\n      // diagonal edge = equality\n      diff[diffIdx--] = SKIP;\n      c--;\n      r--;\n    }\n\n    if (!d) break;\n    pd = d - 1;\n    /* istanbul ignore next */\n\n    pv = d ? v[d - 1] : [0, 0];\n    k = c - r;\n\n    if (k === -d || k !== d && pv[pd + k - 1] < pv[pd + k + 1]) {\n      // vertical edge = insertion\n      r--;\n      diff[diffIdx--] = INSERTION;\n    } else {\n      // horizontal edge = deletion\n      c--;\n      diff[diffIdx--] = DELETION;\n    }\n  }\n\n  return diff;\n};\n\nconst applyDiff = (diff, get, parentNode, futureNodes, futureStart, currentNodes, currentStart, currentLength, before) => {\n  const live = [];\n  const length = diff.length;\n  let currentIndex = currentStart;\n  let i = 0;\n\n  while (i < length) {\n    switch (diff[i++]) {\n      case SKIP:\n        futureStart++;\n        currentIndex++;\n        break;\n\n      case INSERTION:\n        // TODO: bulk appends for sequential nodes\n        live.push(futureNodes[futureStart]);\n        append(get, parentNode, futureNodes, futureStart++, futureStart, currentIndex < currentLength ? get(currentNodes[currentIndex], 0) : before);\n        break;\n\n      case DELETION:\n        currentIndex++;\n        break;\n    }\n  }\n\n  i = 0;\n\n  while (i < length) {\n    switch (diff[i++]) {\n      case SKIP:\n        currentStart++;\n        break;\n\n      case DELETION:\n        // TODO: bulk removes for sequential nodes\n        if (-1 < live.indexOf(currentNodes[currentStart])) currentStart++;else remove(get, currentNodes, currentStart++, currentStart);\n        break;\n    }\n  }\n};\n\nconst findK = (ktr, length, j) => {\n  let lo = 1;\n  let hi = length;\n\n  while (lo < hi) {\n    const mid = (lo + hi) / 2 >>> 0;\n    if (j < ktr[mid]) hi = mid;else lo = mid + 1;\n  }\n\n  return lo;\n};\n\nconst smartDiff = (get, parentNode, futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges, currentLength, compare, before) => {\n  applyDiff(OND(futureNodes, futureStart, futureChanges, currentNodes, currentStart, currentChanges, compare) || HS(futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges), get, parentNode, futureNodes, futureStart, currentNodes, currentStart, currentLength, before);\n};\n\nconst drop = node => (node.remove || dropChild).call(node);\n\nfunction dropChild() {\n  const {\n    parentNode\n  } = this;\n  /* istanbul ignore else */\n\n  if (parentNode) parentNode.removeChild(this);\n}\n/*! (c) 2018 Andrea Giammarchi (ISC) */\n\n\nconst domdiff = (parentNode, // where changes happen\ncurrentNodes, // Array of current items/nodes\nfutureNodes, // Array of future items/nodes\noptions // optional object with one of the following properties\n//  before: domNode\n//  compare(generic, generic) => true if same generic\n//  node(generic) => Node\n) => {\n  if (!options) options = {};\n  const compare = options.compare || eqeq;\n  const get = options.node || identity;\n  const before = options.before == null ? null : get(options.before, 0);\n  const currentLength = currentNodes.length;\n  let currentEnd = currentLength;\n  let currentStart = 0;\n  let futureEnd = futureNodes.length;\n  let futureStart = 0; // common prefix\n\n  while (currentStart < currentEnd && futureStart < futureEnd && compare(currentNodes[currentStart], futureNodes[futureStart])) {\n    currentStart++;\n    futureStart++;\n  } // common suffix\n\n\n  while (currentStart < currentEnd && futureStart < futureEnd && compare(currentNodes[currentEnd - 1], futureNodes[futureEnd - 1])) {\n    currentEnd--;\n    futureEnd--;\n  }\n\n  const currentSame = currentStart === currentEnd;\n  const futureSame = futureStart === futureEnd; // same list\n\n  if (currentSame && futureSame) return futureNodes; // only stuff to add\n\n  if (currentSame && futureStart < futureEnd) {\n    append(get, parentNode, futureNodes, futureStart, futureEnd, next(get, currentNodes, currentStart, currentLength, before));\n    return futureNodes;\n  } // only stuff to remove\n\n\n  if (futureSame && currentStart < currentEnd) {\n    remove(get, currentNodes, currentStart, currentEnd);\n    return futureNodes;\n  }\n\n  const currentChanges = currentEnd - currentStart;\n  const futureChanges = futureEnd - futureStart;\n  let i = -1; // 2 simple indels: the shortest sequence is a subsequence of the longest\n\n  if (currentChanges < futureChanges) {\n    i = indexOf(futureNodes, futureStart, futureEnd, currentNodes, currentStart, currentEnd, compare); // inner diff\n\n    if (-1 < i) {\n      append(get, parentNode, futureNodes, futureStart, i, get(currentNodes[currentStart], 0));\n      append(get, parentNode, futureNodes, i + currentChanges, futureEnd, next(get, currentNodes, currentEnd, currentLength, before));\n      return futureNodes;\n    }\n  }\n  /* istanbul ignore else */\n  else if (futureChanges < currentChanges) {\n      i = indexOf(currentNodes, currentStart, currentEnd, futureNodes, futureStart, futureEnd, compare); // outer diff\n\n      if (-1 < i) {\n        remove(get, currentNodes, currentStart, i);\n        remove(get, currentNodes, i + futureChanges, currentEnd);\n        return futureNodes;\n      }\n    } // common case with one replacement for many nodes\n  // or many nodes replaced for a single one\n\n  /* istanbul ignore else */\n\n\n  if (currentChanges < 2 || futureChanges < 2) {\n    append(get, parentNode, futureNodes, futureStart, futureEnd, get(currentNodes[currentStart], 0));\n    remove(get, currentNodes, currentStart, currentEnd);\n    return futureNodes;\n  } // the half match diff part has been skipped in petit-dom\n  // https://github.com/yelouafi/petit-dom/blob/bd6f5c919b5ae5297be01612c524c40be45f14a7/src/vdom.js#L391-L397\n  // accordingly, I think it's safe to skip in here too\n  // if one day it'll come out like the speediest thing ever to do\n  // then I might add it in here too\n  // Extra: before going too fancy, what about reversed lists ?\n  //        This should bail out pretty quickly if that's not the case.\n\n\n  if (currentChanges === futureChanges && isReversed(futureNodes, futureEnd, currentNodes, currentStart, currentEnd, compare)) {\n    append(get, parentNode, futureNodes, futureStart, futureEnd, next(get, currentNodes, currentEnd, currentLength, before));\n    return futureNodes;\n  } // last resort through a smart diff\n\n\n  smartDiff(get, parentNode, futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges, currentLength, compare, before);\n  return futureNodes;\n};\n/**\n * Quick type checking\n * @param   {*} element - anything\n * @param   {string} type - type definition\n * @returns {boolean} true if the type corresponds\n */\n\n\nfunction checkType$1(element, type) {\n  return typeof element === type;\n}\n/**\n * Check if an element is part of an svg\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if we are in an svg context\n */\n\n\nfunction isSvg(el) {\n  const owner = el.ownerSVGElement;\n  return !!owner || owner === null;\n}\n/**\n * Check if an element is a template tag\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if it's a <template>\n */\n\n\nfunction isTemplate(el) {\n  return !isNil(el.content);\n}\n/**\n * Check that will be passed if its argument is a function\n * @param   {*} value - value to check\n * @returns {boolean} - true if the value is a function\n */\n\n\nfunction isFunction$1(value) {\n  return checkType$1(value, 'function');\n}\n/**\n * Check if a value is a Boolean\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is a boolean\n */\n\n\nfunction isBoolean(value) {\n  return checkType$1(value, 'boolean');\n}\n/**\n * Check if a value is an Object\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is an object\n */\n\n\nfunction isObject(value) {\n  return !isNil(value) && checkType$1(value, 'object');\n}\n/**\n * Check if a value is null or undefined\n * @param   {*}  value - anything\n * @returns {boolean} true only for the 'undefined' and 'null' types\n */\n\n\nfunction isNil(value) {\n  return value === null || value === undefined;\n}\n\nconst UNMOUNT_SCOPE = Symbol('unmount');\nconst EachBinding = Object.seal({\n  // dynamic binding properties\n  // childrenMap: null,\n  // node: null,\n  // root: null,\n  // condition: null,\n  // evaluate: null,\n  // template: null,\n  // isTemplateTag: false,\n  nodes: [],\n\n  // getKey: null,\n  // indexName: null,\n  // itemName: null,\n  // afterPlaceholder: null,\n  // placeholder: null,\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope);\n  },\n\n  update(scope, parentScope) {\n    const {\n      placeholder,\n      nodes,\n      childrenMap\n    } = this;\n    const collection = scope === UNMOUNT_SCOPE ? null : this.evaluate(scope);\n    const items = collection ? Array.from(collection) : [];\n    const parent = placeholder.parentNode; // prepare the diffing\n\n    const {\n      newChildrenMap,\n      batches,\n      futureNodes\n    } = createPatch(items, scope, parentScope, this); // patch the DOM only if there are new nodes\n\n    domdiff(parent, nodes, futureNodes, {\n      before: placeholder,\n      node: patch(Array.from(childrenMap.values()), parentScope)\n    }); // trigger the mounts and the updates\n\n    batches.forEach(fn => fn()); // update the children map\n\n    this.childrenMap = newChildrenMap;\n    this.nodes = futureNodes;\n    return this;\n  },\n\n  unmount(scope, parentScope) {\n    this.update(UNMOUNT_SCOPE, parentScope);\n    return this;\n  }\n\n});\n/**\n * Patch the DOM while diffing\n * @param   {TemplateChunk[]} redundant - redundant tepmplate chunks\n * @param   {*} parentScope - scope of the parent template\n * @returns {Function} patch function used by domdiff\n */\n\nfunction patch(redundant, parentScope) {\n  return (item, info) => {\n    if (info < 0) {\n      const element = redundant.pop();\n\n      if (element) {\n        const {\n          template,\n          context\n        } = element; // notice that we pass null as last argument because\n        // the root node and its children will be removed by domdiff\n\n        template.unmount(context, parentScope, null);\n      }\n    }\n\n    return item;\n  };\n}\n/**\n * Check whether a template must be filtered from a loop\n * @param   {Function} condition - filter function\n * @param   {Object} context - argument passed to the filter function\n * @returns {boolean} true if this item should be skipped\n */\n\n\nfunction mustFilterItem(condition, context) {\n  return condition ? Boolean(condition(context)) === false : false;\n}\n/**\n * Extend the scope of the looped template\n * @param   {Object} scope - current template scope\n * @param   {string} options.itemName - key to identify the looped item in the new context\n * @param   {string} options.indexName - key to identify the index of the looped item\n * @param   {number} options.index - current index\n * @param   {*} options.item - collection item looped\n * @returns {Object} enhanced scope object\n */\n\n\nfunction extendScope(scope, _ref) {\n  let {\n    itemName,\n    indexName,\n    index,\n    item\n  } = _ref;\n  scope[itemName] = item;\n  if (indexName) scope[indexName] = index;\n  return scope;\n}\n/**\n * Loop the current template items\n * @param   {Array} items - expression collection value\n * @param   {*} scope - template scope\n * @param   {*} parentScope - scope of the parent template\n * @param   {EeachBinding} binding - each binding object instance\n * @returns {Object} data\n * @returns {Map} data.newChildrenMap - a Map containing the new children template structure\n * @returns {Array} data.batches - array containing the template lifecycle functions to trigger\n * @returns {Array} data.futureNodes - array containing the nodes we need to diff\n */\n\n\nfunction createPatch(items, scope, parentScope, binding) {\n  const {\n    condition,\n    template,\n    childrenMap,\n    itemName,\n    getKey,\n    indexName,\n    root,\n    isTemplateTag\n  } = binding;\n  const newChildrenMap = new Map();\n  const batches = [];\n  const futureNodes = [];\n  items.forEach((item, index) => {\n    const context = extendScope(Object.create(scope), {\n      itemName,\n      indexName,\n      index,\n      item\n    });\n    const key = getKey ? getKey(context) : index;\n    const oldItem = childrenMap.get(key);\n\n    if (mustFilterItem(condition, context)) {\n      return;\n    }\n\n    const componentTemplate = oldItem ? oldItem.template : template.clone();\n    const el = oldItem ? componentTemplate.el : root.cloneNode();\n    const mustMount = !oldItem;\n    const meta = isTemplateTag && mustMount ? createTemplateMeta(componentTemplate) : {};\n\n    if (mustMount) {\n      batches.push(() => componentTemplate.mount(el, context, parentScope, meta));\n    } else {\n      batches.push(() => componentTemplate.update(context, parentScope));\n    } // create the collection of nodes to update or to add\n    // in case of template tags we need to add all its children nodes\n\n\n    if (isTemplateTag) {\n      const children = meta.children || componentTemplate.children;\n      futureNodes.push(...children);\n    } else {\n      futureNodes.push(el);\n    } // delete the old item from the children map\n\n\n    childrenMap.delete(key); // update the children map\n\n    newChildrenMap.set(key, {\n      template: componentTemplate,\n      context,\n      index\n    });\n  });\n  return {\n    newChildrenMap,\n    batches,\n    futureNodes\n  };\n}\n\nfunction create(node, _ref2) {\n  let {\n    evaluate,\n    condition,\n    itemName,\n    indexName,\n    getKey,\n    template\n  } = _ref2;\n  const placeholder = document.createTextNode('');\n  const parent = node.parentNode;\n  const root = node.cloneNode();\n  parent.insertBefore(placeholder, node);\n  removeNode(node);\n  return Object.assign({}, EachBinding, {\n    childrenMap: new Map(),\n    node,\n    root,\n    condition,\n    evaluate,\n    isTemplateTag: isTemplate(root),\n    template: template.createDOM(node),\n    getKey,\n    indexName,\n    itemName,\n    placeholder\n  });\n}\n/**\n * Binding responsible for the `if` directive\n */\n\n\nconst IfBinding = Object.seal({\n  // dynamic binding properties\n  // node: null,\n  // evaluate: null,\n  // isTemplateTag: false,\n  // placeholder: null,\n  // template: null,\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope);\n  },\n\n  update(scope, parentScope) {\n    const value = !!this.evaluate(scope);\n    const mustMount = !this.value && value;\n    const mustUnmount = this.value && !value;\n\n    const mount = () => {\n      const pristine = this.node.cloneNode();\n      this.placeholder.parentNode.insertBefore(pristine, this.placeholder);\n      this.template = this.template.clone();\n      this.template.mount(pristine, scope, parentScope);\n    };\n\n    switch (true) {\n      case mustMount:\n        mount();\n        break;\n\n      case mustUnmount:\n        this.unmount(scope);\n        break;\n\n      default:\n        if (value) this.template.update(scope, parentScope);\n    }\n\n    this.value = value;\n    return this;\n  },\n\n  unmount(scope, parentScope) {\n    this.template.unmount(scope, parentScope, true);\n    return this;\n  }\n\n});\n\nfunction create$1(node, _ref3) {\n  let {\n    evaluate,\n    template\n  } = _ref3;\n  const parent = node.parentNode;\n  const placeholder = document.createTextNode('');\n  parent.insertBefore(placeholder, node);\n  removeNode(node);\n  return Object.assign({}, IfBinding, {\n    node,\n    evaluate,\n    placeholder,\n    template: template.createDOM(node)\n  });\n}\n/**\n * Returns the memoized (cached) function.\n * // borrowed from https://www.30secondsofcode.org/js/s/memoize\n * @param {Function} fn - function to memoize\n * @returns {Function} memoize function\n */\n\n\nfunction memoize(fn) {\n  const cache = new Map();\n\n  const cached = val => {\n    return cache.has(val) ? cache.get(val) : cache.set(val, fn.call(this, val)) && cache.get(val);\n  };\n\n  cached.cache = cache;\n  return cached;\n}\n/**\n * Evaluate a list of attribute expressions\n * @param   {Array} attributes - attribute expressions generated by the riot compiler\n * @returns {Object} key value pairs with the result of the computation\n */\n\n\nfunction evaluateAttributeExpressions(attributes) {\n  return attributes.reduce((acc, attribute) => {\n    const {\n      value,\n      type\n    } = attribute;\n\n    switch (true) {\n      // spread attribute\n      case !attribute.name && type === ATTRIBUTE:\n        return Object.assign({}, acc, {}, value);\n      // value attribute\n\n      case type === VALUE:\n        acc.value = attribute.value;\n        break;\n      // normal attributes\n\n      default:\n        acc[dashToCamelCase(attribute.name)] = attribute.value;\n    }\n\n    return acc;\n  }, {});\n}\n\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst SET_ATTIBUTE = 'setAttribute';\nconst ElementProto = typeof Element === 'undefined' ? {} : Element.prototype;\nconst isNativeHtmlProperty = memoize(name => ElementProto.hasOwnProperty(name)); // eslint-disable-line\n\n/**\n * Add all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} attributes - object containing the attributes names and values\n * @returns {undefined} sorry it's a void function :(\n */\n\nfunction setAllAttributes(node, attributes) {\n  Object.entries(attributes).forEach((_ref4) => {\n    let [name, value] = _ref4;\n    return attributeExpression(node, {\n      name\n    }, value);\n  });\n}\n/**\n * Remove all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} attributes - object containing all the attribute names\n * @returns {undefined} sorry it's a void function :(\n */\n\n\nfunction removeAllAttributes(node, attributes) {\n  Object.keys(attributes).forEach(attribute => node.removeAttribute(attribute));\n}\n/**\n * This methods handles the DOM attributes updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - attribute name\n * @param   {*} value - new expression value\n * @param   {*} oldValue - the old expression cached value\n * @returns {undefined}\n */\n\n\nfunction attributeExpression(node, _ref5, value, oldValue) {\n  let {\n    name\n  } = _ref5;\n\n  // is it a spread operator? {...attributes}\n  if (!name) {\n    // is the value still truthy?\n    if (value) {\n      setAllAttributes(node, value);\n    } else if (oldValue) {\n      // otherwise remove all the old attributes\n      removeAllAttributes(node, oldValue);\n    }\n\n    return;\n  } // handle boolean attributes\n\n\n  if (!isNativeHtmlProperty(name) && (isBoolean(value) || isObject(value) || isFunction$1(value))) {\n    node[name] = value;\n  }\n\n  node[getMethod(value)](name, normalizeValue(name, value));\n}\n/**\n * Get the attribute modifier method\n * @param   {*} value - if truthy we return `setAttribute` othewise `removeAttribute`\n * @returns {string} the node attribute modifier method name\n */\n\n\nfunction getMethod(value) {\n  return isNil(value) || value === false || value === '' || isObject(value) || isFunction$1(value) ? REMOVE_ATTRIBUTE : SET_ATTIBUTE;\n}\n/**\n * Get the value as string\n * @param   {string} name - attribute name\n * @param   {*} value - user input value\n * @returns {string} input value as string\n */\n\n\nfunction normalizeValue(name, value) {\n  // be sure that expressions like selected={ true } will be always rendered as selected='selected'\n  if (value === true) return name;\n  return value;\n}\n\nconst RE_EVENTS_PREFIX = /^on/;\n/**\n * Set a new event listener\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - event name\n * @param   {*} value - new expression value\n * @param   {*} oldValue - old expression value\n * @returns {value} the callback just received\n */\n\nfunction eventExpression(node, _ref6, value, oldValue) {\n  let {\n    name\n  } = _ref6;\n  const normalizedEventName = name.replace(RE_EVENTS_PREFIX, '');\n\n  if (oldValue) {\n    node.removeEventListener(normalizedEventName, oldValue);\n  }\n\n  if (value) {\n    node.addEventListener(normalizedEventName, value, false);\n  }\n}\n/**\n * Normalize the user value in order to render a empty string in case of falsy values\n * @param   {*} value - user input value\n * @returns {string} hopefully a string\n */\n\n\nfunction normalizeStringValue(value) {\n  return isNil(value) ? '' : value;\n}\n/**\n * Get the the target text node to update or create one from of a comment node\n * @param   {HTMLElement} node - any html element containing childNodes\n * @param   {number} childNodeIndex - index of the text node in the childNodes list\n * @returns {HTMLTextNode} the text node to update\n */\n\n\nconst getTextNode = (node, childNodeIndex) => {\n  const target = node.childNodes[childNodeIndex];\n\n  if (target.nodeType === Node.COMMENT_NODE) {\n    const textNode = document.createTextNode('');\n    node.replaceChild(textNode, target);\n    return textNode;\n  }\n\n  return target;\n};\n/**\n * This methods handles a simple text expression update\n * @param   {HTMLElement} node - target node\n * @param   {Object} data - expression object\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\n\n\nfunction textExpression(node, data, value) {\n  node.data = normalizeStringValue(value);\n}\n/**\n * This methods handles the input fileds value updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\n\n\nfunction valueExpression(node, expression, value) {\n  node.value = normalizeStringValue(value);\n}\n\nvar expressions = {\n  [ATTRIBUTE]: attributeExpression,\n  [EVENT]: eventExpression,\n  [TEXT]: textExpression,\n  [VALUE]: valueExpression\n};\nconst Expression = Object.seal({\n  // Static props\n  // node: null,\n  // value: null,\n  // API methods\n\n  /**\n   * Mount the expression evaluating its initial value\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  mount(scope) {\n    // hopefully a pure function\n    this.value = this.evaluate(scope); // IO() DOM updates\n\n    apply(this, this.value);\n    return this;\n  },\n\n  /**\n   * Update the expression if its value changed\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  update(scope) {\n    // pure function\n    const value = this.evaluate(scope);\n\n    if (this.value !== value) {\n      // IO() DOM updates\n      apply(this, value);\n      this.value = value;\n    }\n\n    return this;\n  },\n\n  /**\n   * Expression teardown method\n   * @returns {Expression} self\n   */\n  unmount() {\n    // unmount only the event handling expressions\n    if (this.type === EVENT) apply(this, null);\n    return this;\n  }\n\n});\n/**\n * IO() function to handle the DOM updates\n * @param {Expression} expression - expression object\n * @param {*} value - current expression value\n * @returns {undefined}\n */\n\nfunction apply(expression, value) {\n  return expressions[expression.type](expression.node, expression, value, expression.value);\n}\n\nfunction create$2(node, data) {\n  return Object.assign({}, Expression, {}, data, {\n    node: data.type === TEXT ? getTextNode(node, data.childNodeIndex) : node\n  });\n}\n/**\n * Create a flat object having as keys a list of methods that if dispatched will propagate\n * on the whole collection\n * @param   {Array} collection - collection to iterate\n * @param   {Array<string>} methods - methods to execute on each item of the collection\n * @param   {*} context - context returned by the new methods created\n * @returns {Object} a new object to simplify the the nested methods dispatching\n */\n\n\nfunction flattenCollectionMethods(collection, methods, context) {\n  return methods.reduce((acc, method) => {\n    return Object.assign({}, acc, {\n      [method]: scope => {\n        return collection.map(item => item[method](scope)) && context;\n      }\n    });\n  }, {});\n}\n\nfunction create$3(node, _ref7) {\n  let {\n    expressions\n  } = _ref7;\n  return Object.assign({}, flattenCollectionMethods(expressions.map(expression => create$2(node, expression)), ['mount', 'update', 'unmount']));\n}\n\nfunction extendParentScope(attributes, scope, parentScope) {\n  if (!attributes || !attributes.length) return parentScope;\n  const expressions = attributes.map(attr => Object.assign({}, attr, {\n    value: attr.evaluate(scope)\n  }));\n  return Object.assign(Object.create(parentScope || null), evaluateAttributeExpressions(expressions));\n}\n\nconst SlotBinding = Object.seal({\n  // dynamic binding properties\n  // node: null,\n  // name: null,\n  attributes: [],\n\n  // template: null,\n  getTemplateScope(scope, parentScope) {\n    return extendParentScope(this.attributes, scope, parentScope);\n  },\n\n  // API methods\n  mount(scope, parentScope) {\n    const templateData = scope.slots ? scope.slots.find((_ref8) => {\n      let {\n        id\n      } = _ref8;\n      return id === this.name;\n    }) : false;\n    const {\n      parentNode\n    } = this.node;\n    this.template = templateData && create$6(templateData.html, templateData.bindings).createDOM(parentNode);\n\n    if (this.template) {\n      this.template.mount(this.node, this.getTemplateScope(scope, parentScope));\n      this.template.children = moveSlotInnerContent(this.node);\n    }\n\n    removeNode(this.node);\n    return this;\n  },\n\n  update(scope, parentScope) {\n    if (this.template) {\n      this.template.update(this.getTemplateScope(scope, parentScope));\n    }\n\n    return this;\n  },\n\n  unmount(scope, parentScope, mustRemoveRoot) {\n    if (this.template) {\n      this.template.unmount(this.getTemplateScope(scope, parentScope), null, mustRemoveRoot);\n    }\n\n    return this;\n  }\n\n});\n/**\n * Move the inner content of the slots outside of them\n * @param   {HTMLNode} slot - slot node\n * @param   {HTMLElement} children - array to fill with the child nodes detected\n * @returns {HTMLElement[]} list of the node moved\n */\n\nfunction moveSlotInnerContent(slot, children) {\n  if (children === void 0) {\n    children = [];\n  }\n\n  const child = slot.firstChild;\n\n  if (child) {\n    slot.parentNode.insertBefore(child, slot);\n    return [child, ...moveSlotInnerContent(slot)];\n  }\n\n  return children;\n}\n/**\n * Create a single slot binding\n * @param   {HTMLElement} node - slot node\n * @param   {string} options.name - slot id\n * @returns {Object} Slot binding object\n */\n\n\nfunction createSlot(node, _ref9) {\n  let {\n    name,\n    attributes\n  } = _ref9;\n  return Object.assign({}, SlotBinding, {\n    attributes,\n    node,\n    name\n  });\n}\n/**\n * Create a new tag object if it was registered before, otherwise fallback to the simple\n * template chunk\n * @param   {Function} component - component factory function\n * @param   {Array<Object>} slots - array containing the slots markup\n * @param   {Array} attributes - dynamic attributes that will be received by the tag element\n * @returns {TagImplementation|TemplateChunk} a tag implementation or a template chunk as fallback\n */\n\n\nfunction getTag(component, slots, attributes) {\n  if (slots === void 0) {\n    slots = [];\n  }\n\n  if (attributes === void 0) {\n    attributes = [];\n  }\n\n  // if this tag was registered before we will return its implementation\n  if (component) {\n    return component({\n      slots,\n      attributes\n    });\n  } // otherwise we return a template chunk\n\n\n  return create$6(slotsToMarkup(slots), [...slotBindings(slots), {\n    // the attributes should be registered as binding\n    // if we fallback to a normal template chunk\n    expressions: attributes.map(attr => {\n      return Object.assign({\n        type: ATTRIBUTE\n      }, attr);\n    })\n  }]);\n}\n/**\n * Merge all the slots bindings into a single array\n * @param   {Array<Object>} slots - slots collection\n * @returns {Array<Bindings>} flatten bindings array\n */\n\n\nfunction slotBindings(slots) {\n  return slots.reduce((acc, _ref10) => {\n    let {\n      bindings\n    } = _ref10;\n    return acc.concat(bindings);\n  }, []);\n}\n/**\n * Merge all the slots together in a single markup string\n * @param   {Array<Object>} slots - slots collection\n * @returns {string} markup of all the slots in a single string\n */\n\n\nfunction slotsToMarkup(slots) {\n  return slots.reduce((acc, slot) => {\n    return acc + slot.html;\n  }, '');\n}\n\nconst TagBinding = Object.seal({\n  // dynamic binding properties\n  // node: null,\n  // evaluate: null,\n  // name: null,\n  // slots: null,\n  // tag: null,\n  // attributes: null,\n  // getComponent: null,\n  mount(scope) {\n    return this.update(scope);\n  },\n\n  update(scope, parentScope) {\n    const name = this.evaluate(scope); // simple update\n\n    if (name === this.name) {\n      this.tag.update(scope);\n    } else {\n      // unmount the old tag if it exists\n      this.unmount(scope, parentScope, true); // mount the new tag\n\n      this.name = name;\n      this.tag = getTag(this.getComponent(name), this.slots, this.attributes);\n      this.tag.mount(this.node, scope);\n    }\n\n    return this;\n  },\n\n  unmount(scope, parentScope, keepRootTag) {\n    if (this.tag) {\n      // keep the root tag\n      this.tag.unmount(keepRootTag);\n    }\n\n    return this;\n  }\n\n});\n\nfunction create$4(node, _ref11) {\n  let {\n    evaluate,\n    getComponent,\n    slots,\n    attributes\n  } = _ref11;\n  return Object.assign({}, TagBinding, {\n    node,\n    evaluate,\n    slots,\n    attributes,\n    getComponent\n  });\n}\n\nvar bindings = {\n  [IF]: create$1,\n  [SIMPLE]: create$3,\n  [EACH]: create,\n  [TAG]: create$4,\n  [SLOT]: createSlot\n};\n/**\n * Text expressions in a template tag will get childNodeIndex value normalized\n * depending on the position of the <template> tag offset\n * @param   {Expression[]} expressions - riot expressions array\n * @param   {number} textExpressionsOffset - offset of the <template> tag\n * @returns {Expression[]} expressions containing the text expressions normalized\n */\n\nfunction fixTextExpressionsOffset(expressions, textExpressionsOffset) {\n  return expressions.map(e => e.type === TEXT ? Object.assign({}, e, {\n    childNodeIndex: e.childNodeIndex + textExpressionsOffset\n  }) : e);\n}\n/**\n * Bind a new expression object to a DOM node\n * @param   {HTMLElement} root - DOM node where to bind the expression\n * @param   {Object} binding - binding data\n * @param   {number|null} templateTagOffset - if it's defined we need to fix the text expressions childNodeIndex offset\n * @returns {Binding} Binding object\n */\n\n\nfunction create$5(root, binding, templateTagOffset) {\n  const {\n    selector,\n    type,\n    redundantAttribute,\n    expressions\n  } = binding; // find the node to apply the bindings\n\n  const node = selector ? root.querySelector(selector) : root; // remove eventually additional attributes created only to select this node\n\n  if (redundantAttribute) node.removeAttribute(redundantAttribute);\n  const bindingExpressions = expressions || []; // init the binding\n\n  return (bindings[type] || bindings[SIMPLE])(node, Object.assign({}, binding, {\n    expressions: templateTagOffset && !selector ? fixTextExpressionsOffset(bindingExpressions, templateTagOffset) : bindingExpressions\n  }));\n} // in this case a simple innerHTML is enough\n\n\nfunction createHTMLTree(html, root) {\n  const template = isTemplate(root) ? root : document.createElement('template');\n  template.innerHTML = html;\n  return template.content;\n} // for svg nodes we need a bit more work\n\n\nfunction createSVGTree(html, container) {\n  // create the SVGNode\n  const svgNode = container.ownerDocument.importNode(new window.DOMParser().parseFromString(`<svg xmlns=\"http://www.w3.org/2000/svg\">${html}</svg>`, 'application/xml').documentElement, true);\n  return svgNode;\n}\n/**\n * Create the DOM that will be injected\n * @param {Object} root - DOM node to find out the context where the fragment will be created\n * @param   {string} html - DOM to create as string\n * @returns {HTMLDocumentFragment|HTMLElement} a new html fragment\n */\n\n\nfunction createDOMTree(root, html) {\n  if (isSvg(root)) return createSVGTree(html, root);\n  return createHTMLTree(html, root);\n}\n/**\n * Inject the DOM tree into a target node\n * @param   {HTMLElement} el - target element\n * @param   {HTMLFragment|SVGElement} dom - dom tree to inject\n * @returns {undefined}\n */\n\n\nfunction injectDOM(el, dom) {\n  switch (true) {\n    case isSvg(el):\n      moveChildren(dom, el);\n      break;\n\n    case isTemplate(el):\n      el.parentNode.replaceChild(dom, el);\n      break;\n\n    default:\n      el.appendChild(dom);\n  }\n}\n/**\n * Create the Template DOM skeleton\n * @param   {HTMLElement} el - root node where the DOM will be injected\n * @param   {string} html - markup that will be injected into the root node\n * @returns {HTMLFragment} fragment that will be injected into the root node\n */\n\n\nfunction createTemplateDOM(el, html) {\n  return html && (typeof html === 'string' ? createDOMTree(el, html) : html);\n}\n/**\n * Template Chunk model\n * @type {Object}\n */\n\n\nconst TemplateChunk = Object.freeze({\n  // Static props\n  // bindings: null,\n  // bindingsData: null,\n  // html: null,\n  // isTemplateTag: false,\n  // fragment: null,\n  // children: null,\n  // dom: null,\n  // el: null,\n\n  /**\n   * Create the template DOM structure that will be cloned on each mount\n   * @param   {HTMLElement} el - the root node\n   * @returns {TemplateChunk} self\n   */\n  createDOM(el) {\n    // make sure that the DOM gets created before cloning the template\n    this.dom = this.dom || createTemplateDOM(el, this.html);\n    return this;\n  },\n\n  // API methods\n\n  /**\n   * Attach the template to a DOM node\n   * @param   {HTMLElement} el - target DOM node\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {Object} meta - meta properties needed to handle the <template> tags in loops\n   * @returns {TemplateChunk} self\n   */\n  mount(el, scope, parentScope, meta) {\n    if (meta === void 0) {\n      meta = {};\n    }\n\n    if (!el) throw new Error('Please provide DOM node to mount properly your template');\n    if (this.el) this.unmount(scope); // <template> tags require a bit more work\n    // the template fragment might be already created via meta outside of this call\n\n    const {\n      fragment,\n      children,\n      avoidDOMInjection\n    } = meta; // <template> bindings of course can not have a root element\n    // so we check the parent node to set the query selector bindings\n\n    const {\n      parentNode\n    } = children ? children[0] : el;\n    const isTemplateTag = isTemplate(el);\n    const templateTagOffset = isTemplateTag ? Math.max(Array.from(parentNode.children).indexOf(el), 0) : null;\n    this.isTemplateTag = isTemplateTag; // create the DOM if it wasn't created before\n\n    this.createDOM(el);\n\n    if (this.dom) {\n      // create the new template dom fragment if it want already passed in via meta\n      this.fragment = fragment || this.dom.cloneNode(true);\n    } // store root node\n    // notice that for template tags the root note will be the parent tag\n\n\n    this.el = this.isTemplateTag ? parentNode : el; // create the children array only for the <template> fragments\n\n    this.children = this.isTemplateTag ? children || Array.from(this.fragment.childNodes) : null; // inject the DOM into the el only if a fragment is available\n\n    if (!avoidDOMInjection && this.fragment) injectDOM(el, this.fragment); // create the bindings\n\n    this.bindings = this.bindingsData.map(binding => create$5(this.el, binding, templateTagOffset));\n    this.bindings.forEach(b => b.mount(scope, parentScope));\n    return this;\n  },\n\n  /**\n   * Update the template with fresh data\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @returns {TemplateChunk} self\n   */\n  update(scope, parentScope) {\n    this.bindings.forEach(b => b.update(scope, parentScope));\n    return this;\n  },\n\n  /**\n   * Remove the template from the node where it was initially mounted\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {boolean|null} mustRemoveRoot - if true remove the root element,\n   * if false or undefined clean the root tag content, if null don't touch the DOM\n   * @returns {TemplateChunk} self\n   */\n  unmount(scope, parentScope, mustRemoveRoot) {\n    if (this.el) {\n      this.bindings.forEach(b => b.unmount(scope, parentScope, mustRemoveRoot));\n\n      switch (true) {\n        // <template> tags should be treated a bit differently\n        // we need to clear their children only if it's explicitly required by the caller\n        // via mustRemoveRoot !== null\n        case this.children && mustRemoveRoot !== null:\n          clearChildren(this.children);\n          break;\n        // remove the root node only if the mustRemoveRoot === true\n\n        case mustRemoveRoot === true:\n          removeNode(this.el);\n          break;\n        // otherwise we clean the node children\n\n        case mustRemoveRoot !== null:\n          cleanNode(this.el);\n          break;\n      }\n\n      this.el = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * Clone the template chunk\n   * @returns {TemplateChunk} a clone of this object resetting the this.el property\n   */\n  clone() {\n    return Object.assign({}, this, {\n      el: null\n    });\n  }\n\n});\n/**\n * Create a template chunk wiring also the bindings\n * @param   {string|HTMLElement} html - template string\n * @param   {Array} bindings - bindings collection\n * @returns {TemplateChunk} a new TemplateChunk copy\n */\n\nfunction create$6(html, bindings) {\n  if (bindings === void 0) {\n    bindings = [];\n  }\n\n  return Object.assign({}, TemplateChunk, {\n    html,\n    bindingsData: bindings\n  });\n}\n\n/**\n * Helper function to set an immutable property\n * @param   {Object} source - object where the new property will be set\n * @param   {string} key - object key where the new property will be stored\n * @param   {*} value - value of the new property\n * @param   {Object} options - set the propery overriding the default options\n * @returns {Object} - the original object modified\n */\nfunction defineProperty(source, key, value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  /* eslint-disable fp/no-mutating-methods */\n  Object.defineProperty(source, key, Object.assign({\n    value,\n    enumerable: false,\n    writable: false,\n    configurable: true\n  }, options));\n  /* eslint-enable fp/no-mutating-methods */\n\n  return source;\n}\n/**\n * Define multiple properties on a target object\n * @param   {Object} source - object where the new properties will be set\n * @param   {Object} properties - object containing as key pair the key + value properties\n * @param   {Object} options - set the propery overriding the default options\n * @returns {Object} the original object modified\n */\n\nfunction defineProperties(source, properties, options) {\n  Object.entries(properties).forEach((_ref) => {\n    let [key, value] = _ref;\n    defineProperty(source, key, value, options);\n  });\n  return source;\n}\n/**\n * Define default properties if they don't exist on the source object\n * @param   {Object} source - object that will receive the default properties\n * @param   {Object} defaults - object containing additional optional keys\n * @returns {Object} the original object received enhanced\n */\n\nfunction defineDefaults(source, defaults) {\n  Object.entries(defaults).forEach((_ref2) => {\n    let [key, value] = _ref2;\n    if (!source[key]) source[key] = value;\n  });\n  return source;\n}\n\nconst ATTRIBUTE$1 = 0;\nconst VALUE$1 = 3;\n\n/**\n * Convert a string from camel case to dash-case\n * @param   {string} string - probably a component tag name\n * @returns {string} component name normalized\n */\nfunction camelToDashCase(string) {\n  return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n/**\n * Convert a string containing dashes to camel case\n * @param   {string} string - input string\n * @returns {string} my-string -> myString\n */\n\nfunction dashToCamelCase$1(string) {\n  return string.replace(/-(\\w)/g, (_, c) => c.toUpperCase());\n}\n\n/**\n * Throw an error with a descriptive message\n * @param   { string } message - error message\n * @returns { undefined } hoppla.. at this point the program should stop working\n */\n\nfunction panic(message) {\n  throw new Error(message);\n}\n/**\n * Evaluate a list of attribute expressions\n * @param   {Array} attributes - attribute expressions generated by the riot compiler\n * @returns {Object} key value pairs with the result of the computation\n */\n\nfunction evaluateAttributeExpressions$1(attributes) {\n  return attributes.reduce((acc, attribute) => {\n    const {\n      value,\n      type\n    } = attribute;\n\n    switch (true) {\n      // spread attribute\n      case !attribute.name && type === ATTRIBUTE$1:\n        return Object.assign({}, acc, {}, value);\n      // value attribute\n\n      case type === VALUE$1:\n        acc.value = attribute.value;\n        break;\n      // normal attributes\n\n      default:\n        acc[dashToCamelCase$1(attribute.name)] = attribute.value;\n    }\n\n    return acc;\n  }, {});\n}\n\n/**\n * Converts any DOM node/s to a loopable array\n * @param   { HTMLElement|NodeList } els - single html element or a node list\n * @returns { Array } always a loopable object\n */\nfunction domToArray(els) {\n  // can this object be already looped?\n  if (!Array.isArray(els)) {\n    // is it a node list?\n    if (/^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(Object.prototype.toString.call(els)) && typeof els.length === 'number') return Array.from(els);else // if it's a single node\n      // it will be returned as \"array\" with one single entry\n      return [els];\n  } // this object could be looped out of the box\n\n\n  return els;\n}\n\n/**\n * Simple helper to find DOM nodes returning them as array like loopable object\n * @param   { string|DOMNodeList } selector - either the query or the DOM nodes to arraify\n * @param   { HTMLElement }        ctx      - context defining where the query will search for the DOM nodes\n * @returns { Array } DOM nodes found as array\n */\n\nfunction $(selector, ctx) {\n  return domToArray(typeof selector === 'string' ? (ctx || document).querySelectorAll(selector) : selector);\n}\n\n/**\n * Normalize the return values, in case of a single value we avoid to return an array\n * @param   { Array } values - list of values we want to return\n * @returns { Array|string|boolean } either the whole list of values or the single one found\n * @private\n */\n\nconst normalize = values => values.length === 1 ? values[0] : values;\n/**\n * Parse all the nodes received to get/remove/check their attributes\n * @param   { HTMLElement|NodeList|Array } els    - DOM node/s to parse\n * @param   { string|Array }               name   - name or list of attributes\n * @param   { string }                     method - method that will be used to parse the attributes\n * @returns { Array|string } result of the parsing in a list or a single value\n * @private\n */\n\n\nfunction parseNodes(els, name, method) {\n  const names = typeof name === 'string' ? [name] : name;\n  return normalize(domToArray(els).map(el => {\n    return normalize(names.map(n => el[method](n)));\n  }));\n}\n/**\n * Set any attribute on a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Object }              name  - either the name of the attribute to set\n *                                                 or a list of properties as object key - value\n * @param   { string }                     value - the new value of the attribute (optional)\n * @returns { HTMLElement|NodeList|Array } the original array of elements passed to this function\n *\n * @example\n *\n * import { set } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * set(img, 'width', 100)\n *\n * // or also\n * set(img, {\n *   width: 300,\n *   height: 300\n * })\n *\n */\n\n\nfunction set(els, name, value) {\n  const attrs = typeof name === 'object' ? name : {\n    [name]: value\n  };\n  const props = Object.keys(attrs);\n  domToArray(els).forEach(el => {\n    props.forEach(prop => el.setAttribute(prop, attrs[prop]));\n  });\n  return els;\n}\n/**\n * Get any attribute from a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Array }               name  - name or list of attributes to get\n * @returns { Array|string } list of the attributes found\n *\n * @example\n *\n * import { get } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * get(img, 'width') // => '200'\n *\n * // or also\n * get(img, ['width', 'height']) // => ['200', '300']\n *\n * // or also\n * get([img1, img2], ['width', 'height']) // => [['200', '300'], ['500', '200']]\n */\n\nfunction get(els, name) {\n  return parseNodes(els, name, 'getAttribute');\n}\n\nconst CSS_BY_NAME = new Map();\nconst STYLE_NODE_SELECTOR = 'style[riot]'; // memoized curried function\n\nconst getStyleNode = (style => {\n  return () => {\n    // lazy evaluation:\n    // if this function was already called before\n    // we return its cached result\n    if (style) return style; // create a new style element or use an existing one\n    // and cache it internally\n\n    style = $(STYLE_NODE_SELECTOR)[0] || document.createElement('style');\n    set(style, 'type', 'text/css');\n    /* istanbul ignore next */\n\n    if (!style.parentNode) document.head.appendChild(style);\n    return style;\n  };\n})();\n/**\n * Object that will be used to inject and manage the css of every tag instance\n */\n\n\nvar cssManager = {\n  CSS_BY_NAME,\n\n  /**\n   * Save a tag style to be later injected into DOM\n   * @param { string } name - if it's passed we will map the css to a tagname\n   * @param { string } css - css string\n   * @returns {Object} self\n   */\n  add(name, css) {\n    if (!CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.set(name, css);\n      this.inject();\n    }\n\n    return this;\n  },\n\n  /**\n   * Inject all previously saved tag styles into DOM\n   * innerHTML seems slow: http://jsperf.com/riot-insert-style\n   * @returns {Object} self\n   */\n  inject() {\n    getStyleNode().innerHTML = [...CSS_BY_NAME.values()].join('\\n');\n    return this;\n  },\n\n  /**\n   * Remove a tag style from the DOM\n   * @param {string} name a registered tagname\n   * @returns {Object} self\n   */\n  remove(name) {\n    if (CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.delete(name);\n      this.inject();\n    }\n\n    return this;\n  }\n\n};\n\n/**\n * Function to curry any javascript method\n * @param   {Function}  fn - the target function we want to curry\n * @param   {...[args]} acc - initial arguments\n * @returns {Function|*} it will return a function until the target function\n *                       will receive all of its arguments\n */\nfunction curry(fn) {\n  for (var _len = arguments.length, acc = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    acc[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    args = [...acc, ...args];\n    return args.length < fn.length ? curry(fn, ...args) : fn(...args);\n  };\n}\n\n/**\n * Get the tag name of any DOM node\n * @param   {HTMLElement} element - DOM node we want to inspect\n * @returns {string} name to identify this dom node in riot\n */\n\nfunction getName(element) {\n  return get(element, IS_DIRECTIVE) || element.tagName.toLowerCase();\n}\n\nconst COMPONENT_CORE_HELPERS = Object.freeze({\n  // component helpers\n  $(selector) {\n    return $(selector, this.root)[0];\n  },\n\n  $$(selector) {\n    return $(selector, this.root);\n  }\n\n});\nconst PURE_COMPONENT_API = Object.freeze({\n  [MOUNT_METHOD_KEY]: noop,\n  [UPDATE_METHOD_KEY]: noop,\n  [UNMOUNT_METHOD_KEY]: noop\n});\nconst COMPONENT_LIFECYCLE_METHODS = Object.freeze({\n  [SHOULD_UPDATE_KEY]: noop,\n  [ON_BEFORE_MOUNT_KEY]: noop,\n  [ON_MOUNTED_KEY]: noop,\n  [ON_BEFORE_UPDATE_KEY]: noop,\n  [ON_UPDATED_KEY]: noop,\n  [ON_BEFORE_UNMOUNT_KEY]: noop,\n  [ON_UNMOUNTED_KEY]: noop\n});\nconst MOCKED_TEMPLATE_INTERFACE = Object.assign({}, PURE_COMPONENT_API, {\n  clone: noop,\n  createDOM: noop\n});\n/**\n * Bind a DOM node to its component object\n * @param   {HTMLElement} node - html node mounted\n * @param   {Object} component - Riot.js component object\n * @returns {Object} the component object received as second argument\n */\n\nconst bindDOMNodeToComponentObject = (node, component) => node[DOM_COMPONENT_INSTANCE_PROPERTY] = component;\n/**\n * Wrap the Riot.js core API methods using a mapping function\n * @param   {Function} mapFunction - lifting function\n * @returns {Object} an object having the { mount, update, unmount } functions\n */\n\n\nfunction createCoreAPIMethods(mapFunction) {\n  return [MOUNT_METHOD_KEY, UPDATE_METHOD_KEY, UNMOUNT_METHOD_KEY].reduce((acc, method) => {\n    acc[method] = mapFunction(method);\n    return acc;\n  }, {});\n}\n/**\n * Factory function to create the component templates only once\n * @param   {Function} template - component template creation function\n * @param   {Object} components - object containing the nested components\n * @returns {TemplateChunk} template chunk object\n */\n\n\nfunction componentTemplateFactory(template, components) {\n  return template(create$6, expressionTypes, bindingTypes, name => {\n    return components[name] || COMPONENTS_IMPLEMENTATION_MAP.get(name);\n  });\n}\n/**\n * Create a pure component\n * @param   {Function} pureFactoryFunction - pure component factory function\n * @param   {Array} options.slots - component slots\n * @param   {Array} options.attributes - component attributes\n * @param   {Array} options.template - template factory function\n * @param   {Array} options.template - template factory function\n * @param   {any} options.props - initial component properties\n * @returns {Object} pure component object\n */\n\n\nfunction createPureComponent(pureFactoryFunction, _ref) {\n  let {\n    slots,\n    attributes,\n    props,\n    css,\n    template\n  } = _ref;\n  if (template) panic('Pure components can not have html');\n  if (css) panic('Pure components do not have css');\n  const component = defineDefaults(pureFactoryFunction({\n    slots,\n    attributes,\n    props\n  }), PURE_COMPONENT_API);\n  return createCoreAPIMethods(method => function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // intercept the mount calls to bind the DOM node to the pure object created\n    // see also https://github.com/riot/riot/issues/2806\n    if (method === MOUNT_METHOD_KEY) {\n      const [el] = args;\n      bindDOMNodeToComponentObject(el, component);\n    }\n\n    component[method](...args);\n    return component;\n  });\n}\n/**\n * Create the component interface needed for the @riotjs/dom-bindings tag bindings\n * @param   {string} options.css - component css\n * @param   {Function} options.template - functon that will return the dom-bindings template function\n * @param   {Object} options.exports - component interface\n * @param   {string} options.name - component name\n * @returns {Object} component like interface\n */\n\n\nfunction createComponent(_ref2) {\n  let {\n    css,\n    template,\n    exports,\n    name\n  } = _ref2;\n  const templateFn = template ? componentTemplateFactory(template, exports ? createSubcomponents(exports.components) : {}) : MOCKED_TEMPLATE_INTERFACE;\n  return (_ref3) => {\n    let {\n      slots,\n      attributes,\n      props\n    } = _ref3;\n    // pure components rendering will be managed by the end user\n    if (exports && exports[IS_PURE_SYMBOL]) return createPureComponent(exports, {\n      slots,\n      attributes,\n      props,\n      css,\n      template\n    });\n    const componentAPI = callOrAssign(exports) || {};\n    const component = defineComponent({\n      css,\n      template: templateFn,\n      componentAPI,\n      name\n    })({\n      slots,\n      attributes,\n      props\n    }); // notice that for the components create via tag binding\n    // we need to invert the mount (state/parentScope) arguments\n    // the template bindings will only forward the parentScope updates\n    // and never deal with the component state\n\n    return {\n      mount(element, parentScope, state) {\n        return component.mount(element, state, parentScope);\n      },\n\n      update(parentScope, state) {\n        return component.update(state, parentScope);\n      },\n\n      unmount(preserveRoot) {\n        return component.unmount(preserveRoot);\n      }\n\n    };\n  };\n}\n/**\n * Component definition function\n * @param   {Object} implementation - the componen implementation will be generated via compiler\n * @param   {Object} component - the component initial properties\n * @returns {Object} a new component implementation object\n */\n\nfunction defineComponent(_ref4) {\n  let {\n    css,\n    template,\n    componentAPI,\n    name\n  } = _ref4;\n  // add the component css into the DOM\n  if (css && name) cssManager.add(name, css);\n  return curry(enhanceComponentAPI)(defineProperties( // set the component defaults without overriding the original component API\n  defineDefaults(componentAPI, Object.assign({}, COMPONENT_LIFECYCLE_METHODS, {\n    [STATE_KEY]: {}\n  })), Object.assign({\n    // defined during the component creation\n    [SLOTS_KEY]: null,\n    [ROOT_KEY]: null\n  }, COMPONENT_CORE_HELPERS, {\n    name,\n    css,\n    template\n  })));\n}\n/**\n * Create the bindings to update the component attributes\n * @param   {HTMLElement} node - node where we will bind the expressions\n * @param   {Array} attributes - list of attribute bindings\n * @returns {TemplateChunk} - template bindings object\n */\n\nfunction createAttributeBindings(node, attributes) {\n  if (attributes === void 0) {\n    attributes = [];\n  }\n\n  const expressions = attributes.map(a => create$2(node, a));\n  const binding = {};\n  return Object.assign(binding, Object.assign({\n    expressions\n  }, createCoreAPIMethods(method => scope => {\n    expressions.forEach(e => e[method](scope));\n    return binding;\n  })));\n}\n/**\n * Create the subcomponents that can be included inside a tag in runtime\n * @param   {Object} components - components imported in runtime\n * @returns {Object} all the components transformed into Riot.Component factory functions\n */\n\n\nfunction createSubcomponents(components) {\n  if (components === void 0) {\n    components = {};\n  }\n\n  return Object.entries(callOrAssign(components)).reduce((acc, _ref5) => {\n    let [key, value] = _ref5;\n    acc[camelToDashCase(key)] = createComponent(value);\n    return acc;\n  }, {});\n}\n/**\n * Run the component instance through all the plugins set by the user\n * @param   {Object} component - component instance\n * @returns {Object} the component enhanced by the plugins\n */\n\n\nfunction runPlugins(component) {\n  return [...PLUGINS_SET].reduce((c, fn) => fn(c) || c, component);\n}\n/**\n * Compute the component current state merging it with its previous state\n * @param   {Object} oldState - previous state object\n * @param   {Object} newState - new state givent to the `update` call\n * @returns {Object} new object state\n */\n\n\nfunction computeState(oldState, newState) {\n  return Object.assign({}, oldState, {}, callOrAssign(newState));\n}\n/**\n * Add eventually the \"is\" attribute to link this DOM node to its css\n * @param {HTMLElement} element - target root node\n * @param {string} name - name of the component mounted\n * @returns {undefined} it's a void function\n */\n\n\nfunction addCssHook(element, name) {\n  if (getName(element) !== name) {\n    set(element, IS_DIRECTIVE, name);\n  }\n}\n/**\n * Component creation factory function that will enhance the user provided API\n * @param   {Object} component - a component implementation previously defined\n * @param   {Array} options.slots - component slots generated via riot compiler\n * @param   {Array} options.attributes - attribute expressions generated via riot compiler\n * @returns {Riot.Component} a riot component instance\n */\n\n\nfunction enhanceComponentAPI(component, _ref6) {\n  let {\n    slots,\n    attributes,\n    props\n  } = _ref6;\n  return autobindMethods(runPlugins(defineProperties(Object.create(component), {\n    mount(element, state, parentScope) {\n      if (state === void 0) {\n        state = {};\n      }\n\n      this[ATTRIBUTES_KEY_SYMBOL] = createAttributeBindings(element, attributes).mount(parentScope);\n      defineProperty(this, PROPS_KEY, Object.freeze(Object.assign({}, props, {}, evaluateAttributeExpressions$1(this[ATTRIBUTES_KEY_SYMBOL].expressions))));\n      this[STATE_KEY] = computeState(this[STATE_KEY], state);\n      this[TEMPLATE_KEY_SYMBOL] = this.template.createDOM(element).clone(); // link this object to the DOM node\n\n      bindDOMNodeToComponentObject(element, this); // add eventually the 'is' attribute\n\n      component.name && addCssHook(element, component.name); // define the root element\n\n      defineProperty(this, ROOT_KEY, element); // define the slots array\n\n      defineProperty(this, SLOTS_KEY, slots); // before mount lifecycle event\n\n      this[ON_BEFORE_MOUNT_KEY](this[PROPS_KEY], this[STATE_KEY]); // mount the template\n\n      this[TEMPLATE_KEY_SYMBOL].mount(element, this, parentScope);\n      this[PARENT_KEY_SYMBOL] = parentScope;\n      this[ON_MOUNTED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      return this;\n    },\n\n    update(state, parentScope) {\n      if (state === void 0) {\n        state = {};\n      }\n\n      if (parentScope) {\n        this[ATTRIBUTES_KEY_SYMBOL].update(parentScope);\n      }\n\n      const newProps = evaluateAttributeExpressions$1(this[ATTRIBUTES_KEY_SYMBOL].expressions);\n      if (this[SHOULD_UPDATE_KEY](newProps, this[PROPS_KEY]) === false) return;\n      defineProperty(this, PROPS_KEY, Object.freeze(Object.assign({}, props, {}, newProps)));\n      this[STATE_KEY] = computeState(this[STATE_KEY], state);\n      this[ON_BEFORE_UPDATE_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      this[TEMPLATE_KEY_SYMBOL].update(this, this[PARENT_KEY_SYMBOL]);\n      this[ON_UPDATED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      return this;\n    },\n\n    unmount(preserveRoot) {\n      this[ON_BEFORE_UNMOUNT_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      this[ATTRIBUTES_KEY_SYMBOL].unmount(); // if the preserveRoot is null the template html will be left untouched\n      // in that case the DOM cleanup will happen differently from a parent node\n\n      this[TEMPLATE_KEY_SYMBOL].unmount(this, this[PARENT_KEY_SYMBOL], preserveRoot === null ? null : !preserveRoot);\n      this[ON_UNMOUNTED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      return this;\n    }\n\n  })), Object.keys(component).filter(prop => isFunction(component[prop])));\n}\n/**\n * Component initialization function starting from a DOM node\n * @param   {HTMLElement} element - element to upgrade\n * @param   {Object} initialProps - initial component properties\n * @param   {string} componentName - component id\n * @returns {Object} a new component instance bound to a DOM node\n */\n\nfunction mountComponent(element, initialProps, componentName) {\n  const name = componentName || getName(element);\n  if (!COMPONENTS_IMPLEMENTATION_MAP.has(name)) panic(`The component named \"${name}\" was never registered`);\n  const component = COMPONENTS_IMPLEMENTATION_MAP.get(name)({\n    props: initialProps\n  });\n  return component.mount(element);\n}\n\n/**\n * Get all the element attributes as object\n * @param   {HTMLElement} element - DOM node we want to parse\n * @returns {Object} all the attributes found as a key value pairs\n */\n\nfunction DOMattributesToObject(element) {\n  return Array.from(element.attributes).reduce((acc, attribute) => {\n    acc[dashToCamelCase$1(attribute.name)] = attribute.value;\n    return acc;\n  }, {});\n}\n\n/**\n * Similar to compose but performs from left-to-right function composition.<br/>\n * {@link https://30secondsofcode.org/function#composeright see also}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n/**\n * Performs right-to-left function composition.<br/>\n * Use Array.prototype.reduce() to perform right-to-left function composition.<br/>\n * The last (rightmost) function can accept one or more arguments; the remaining functions must be unary.<br/>\n * {@link https://30secondsofcode.org/function#compose original source code}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n\nfunction compose() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return fns.reduce((f, g) => function () {\n    return f(g(...arguments));\n  });\n}\n\nconst {\n  DOM_COMPONENT_INSTANCE_PROPERTY: DOM_COMPONENT_INSTANCE_PROPERTY$1,\n  COMPONENTS_IMPLEMENTATION_MAP: COMPONENTS_IMPLEMENTATION_MAP$1,\n  PLUGINS_SET: PLUGINS_SET$1\n} = globals;\n/**\n * Evaluate the component properties either from its real attributes or from its initial user properties\n * @param   {HTMLElement} element - component root\n * @param   {Object}  initialProps - initial props\n * @returns {Object} component props key value pairs\n */\n\nfunction evaluateInitialProps(element, initialProps) {\n  if (initialProps === void 0) {\n    initialProps = [];\n  }\n\n  return Object.assign({}, DOMattributesToObject(element), {}, callOrAssign(initialProps));\n}\n/**\n * Riot public api\n */\n\n/**\n * Register a custom tag by name\n * @param   {string} name - component name\n * @param   {Object} implementation - tag implementation\n * @returns {Map} map containing all the components implementations\n */\n\n\nfunction register(name, _ref) {\n  let {\n    css,\n    template,\n    exports\n  } = _ref;\n  if (COMPONENTS_IMPLEMENTATION_MAP$1.has(name)) panic(`The component \"${name}\" was already registered`);\n  COMPONENTS_IMPLEMENTATION_MAP$1.set(name, createComponent({\n    name,\n    css,\n    template,\n    exports\n  }));\n  return COMPONENTS_IMPLEMENTATION_MAP$1;\n}\n/**\n * Unregister a riot web component\n * @param   {string} name - component name\n * @returns {Map} map containing all the components implementations\n */\n\nfunction unregister(name) {\n  if (!COMPONENTS_IMPLEMENTATION_MAP$1.has(name)) panic(`The component \"${name}\" was never registered`);\n  COMPONENTS_IMPLEMENTATION_MAP$1.delete(name);\n  cssManager.remove(name);\n  return COMPONENTS_IMPLEMENTATION_MAP$1;\n}\n/**\n * Mounting function that will work only for the components that were globally registered\n * @param   {string|HTMLElement} selector - query for the selection or a DOM element\n * @param   {Object} initialProps - the initial component properties\n * @param   {string} name - optional component name\n * @returns {Array} list of nodes upgraded\n */\n\nfunction mount(selector, initialProps, name) {\n  return $(selector).map(element => mountComponent(element, evaluateInitialProps(element, initialProps), name));\n}\n/**\n * Sweet unmounting helper function for the DOM node mounted manually by the user\n * @param   {string|HTMLElement} selector - query for the selection or a DOM element\n * @param   {boolean|null} keepRootElement - if true keep the root element\n * @returns {Array} list of nodes unmounted\n */\n\nfunction unmount(selector, keepRootElement) {\n  return $(selector).map(element => {\n    if (element[DOM_COMPONENT_INSTANCE_PROPERTY$1]) {\n      element[DOM_COMPONENT_INSTANCE_PROPERTY$1].unmount(keepRootElement);\n    }\n\n    return element;\n  });\n}\n/**\n * Define a riot plugin\n * @param   {Function} plugin - function that will receive all the components created\n * @returns {Set} the set containing all the plugins installed\n */\n\nfunction install(plugin) {\n  if (!isFunction(plugin)) panic('Plugins must be of type function');\n  if (PLUGINS_SET$1.has(plugin)) panic('This plugin was already install');\n  PLUGINS_SET$1.add(plugin);\n  return PLUGINS_SET$1;\n}\n/**\n * Uninstall a riot plugin\n * @param   {Function} plugin - plugin previously installed\n * @returns {Set} the set containing all the plugins installed\n */\n\nfunction uninstall(plugin) {\n  if (!PLUGINS_SET$1.has(plugin)) panic('This plugin was never installed');\n  PLUGINS_SET$1.delete(plugin);\n  return PLUGINS_SET$1;\n}\n/**\n * Helpter method to create component without relying on the registered ones\n * @param   {Object} implementation - component implementation\n * @returns {Function} function that will allow you to mount a riot component on a DOM node\n */\n\nfunction component(implementation) {\n  return function (el, props, _temp) {\n    let {\n      slots,\n      attributes\n    } = _temp === void 0 ? {} : _temp;\n    return compose(c => c.mount(el), c => c({\n      props: evaluateInitialProps(el, props),\n      slots,\n      attributes\n    }), createComponent)(implementation);\n  };\n}\n/**\n * Lift a riot component Interface into a pure riot object\n * @param   {Function} func - RiotPureComponent factory function\n * @returns {Function} the lifted original function received as argument\n */\n\nfunction pure(func) {\n  if (!isFunction(func)) panic('riot.pure accepts only arguments of type \"function\"');\n  func[IS_PURE_SYMBOL] = true;\n  return func;\n}\n/** @type {string} current riot version */\n\nconst version = 'v4.8.7'; // expose some internal stuff that might be used from external tools\n\nconst __ = {\n  cssManager,\n  createComponent,\n  defineComponent,\n  globals\n};\n\nexport { __, component, install, mount, pure, register, uninstall, unmount, unregister, version };\n","/**\n * Converts any DOM node/s to a loopable array\n * @param   { HTMLElement|NodeList } els - single html element or a node list\n * @returns { Array } always a loopable object\n */\nexport default function domToArray(els) {\n  // can this object be already looped?\n  if (!Array.isArray(els)) {\n    // is it a node list?\n    if (\n      /^\\[object (HTMLCollection|NodeList|Object)\\]$/\n        .test(Object.prototype.toString.call(els))\n        && typeof els.length === 'number'\n    )\n      return Array.from(els)\n    else\n      // if it's a single node\n      // it will be returned as \"array\" with one single entry\n      return [els]\n  }\n  // this object could be looped out of the box\n  return els\n}","import domToArray from 'bianco.dom-to-array'\n\n/**\n * Simple helper to find DOM nodes returning them as array like loopable object\n * @param   { string|DOMNodeList } selector - either the query or the DOM nodes to arraify\n * @param   { HTMLElement }        ctx      - context defining where the query will search for the DOM nodes\n * @returns { Array } DOM nodes found as array\n */\nexport default function $(selector, ctx) {\n  return domToArray(typeof selector === 'string' ?\n    (ctx || document).querySelectorAll(selector) :\n    selector\n  )\n}\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('riot'), require('bianco.query')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'riot', 'bianco.query'], factory) :\n  (global = global || self, factory(global.riotHotReload = {}, global.riot, global.$));\n}(this, function (exports, riot, $) { 'use strict';\n\n  $ = $ && $.hasOwnProperty('default') ? $['default'] : $;\n\n  const { cssManager } = riot.__;\n  const { DOM_COMPONENT_INSTANCE_PROPERTY } = riot.__.globals;\n\n  function reload(componentAPI) {\n    const {name} = componentAPI;\n\n    if (!name) {\n      console.warn('Anonymous components can not be reloaded'); // eslint-disable-line\n      return []\n    }\n\n    return $(`${name}, [is=${name}]`).map(el => {\n      const oldTag = el[DOM_COMPONENT_INSTANCE_PROPERTY];\n\n      // remove the tag template from the DOM\n      oldTag.unmount(true);\n      // delete the old css from the css manager\n      cssManager.remove(name);\n\n      // create the new tag\n      const newTag = riot.component(componentAPI)(el, oldTag.props);\n      newTag.update(oldTag.state);\n\n      return newTag\n    })\n  }\n\n  exports.default = reload;\n  exports.reload = reload;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// Define logics about this component here.\r\nvar progressRep = nodecg.Replicant('progress');\r\nvar graphicsRep = nodecg.Replicant('graphics');\r\nfunction Segment() {\r\n    return {\r\n        state: {\r\n            currentSegments: [],\r\n            icons: {\r\n                top: '',\r\n                other: ''\r\n            },\r\n            topIndex: -1\r\n        },\r\n        onMounted: function () {\r\n            var _this = this;\r\n            progressRep.on('change', function (newVal) {\r\n                _this.state.currentSegments = newVal.map(function (progress) {\r\n                    return progress.segments.current;\r\n                });\r\n                _this.calcTopTeam(_this.state.currentSegments);\r\n                _this.update();\r\n            });\r\n            graphicsRep.on('change', function (newVal) {\r\n                _this.state.icons = newVal.checkpointIcons;\r\n                _this.update();\r\n            });\r\n        },\r\n        calcTopTeam: function (currentSegs) {\r\n            var topIndex = -1;\r\n            var topSegment = {\r\n                run: -1,\r\n                seg: -1\r\n            };\r\n            for (var i = 0; i < currentSegs.length; i++) {\r\n                if (!currentSegs[i]) {\r\n                    topIndex = i;\r\n                    break;\r\n                }\r\n                if (currentSegs[i].runIndex > topSegment.run) {\r\n                    topIndex = i;\r\n                    topSegment.run = currentSegs[i].runIndex;\r\n                    topSegment.seg = currentSegs[i].segIndex;\r\n                }\r\n                else if (currentSegs[i].runIndex === topSegment.run &&\r\n                    currentSegs[i].segIndex > topSegment.seg) {\r\n                    topIndex = i;\r\n                    topSegment.run = currentSegs[i].runIndex;\r\n                    topSegment.seg = currentSegs[i].segIndex;\r\n                }\r\n            }\r\n            this.state.topIndex = topIndex;\r\n            console.log(topIndex);\r\n        }\r\n    };\r\n}\r\n\r\nexport default {\r\n  'css': `segment .top,[is=\"segment\"] .top{ background-color: rgba(255, 255, 255, 0.8); } segment .no-reached,[is=\"segment\"] .no-reached{ background-color: rgba(0, 0, 0, 0.8); } segment .not-last-segment,[is=\"segment\"] .not-last-segment{ border-right: 1px solid white; } segment .flag,[is=\"segment\"] .flag{ margin-right: auto; margin-left: auto; font-size: 24px; }`,\r\n  'exports': Segment,\r\n\r\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\r\n    return template(\r\n      '<div class=\"columns is-vcentered is-marginless is-mobile is-multiline top\"><div expr13=\"expr13\"></div><div expr18=\"expr18\" class=\"column is-full has-background-dark has-text-white\"> </div></div>',\r\n      [{\r\n        'type': bindingTypes.EACH,\r\n        'getKey': null,\r\n        'condition': null,\r\n\r\n        'template': template(\r\n          '<figure expr14=\"expr14\" class=\"image is-48x48 flag\"></figure><figure expr16=\"expr16\" class=\"image flag\"></figure>',\r\n          [{\r\n            'expressions': [{\r\n              'type': expressionTypes.ATTRIBUTE,\r\n              'name': 'class',\r\n\r\n              'evaluate': function(scope) {\r\n                return [\r\n                  'column is-paddingless has-text-centered has-text-info ',\r\n                  (scope.current != null && scope.current.runIndex < scope.props.runIdx) ? 'no-reached' : '',\r\n                  ' ',\r\n                  (scope.current != null && scope.current.runIndex == scope.props.runIdx && scope.current.segIndex <= scope.props.segIdx) ? 'no-reached' : '',\r\n                  ' ',\r\n                  scope.idx < scope.state.currentSegments.length - 1 ? 'not-last-segment' : ''\r\n                ].join('');\r\n              }\r\n            }]\r\n          }, {\r\n            'type': bindingTypes.IF,\r\n\r\n            'evaluate': function(scope) {\r\n              return scope.idx === scope.state.topIndex ? scope.state.icons.top !== '' : scope.state.icons.other !== '';\r\n            },\r\n\r\n            'redundantAttribute': 'expr14',\r\n            'selector': '[expr14]',\r\n\r\n            'template': template('<img expr15=\"expr15\"/>', [{\r\n              'type': bindingTypes.IF,\r\n\r\n              'evaluate': function(scope) {\r\n                return scope.current != null && scope.current.runIndex == scope.props.runIdx && scope.current.segIndex == scope.props.segIdx;\r\n              },\r\n\r\n              'redundantAttribute': 'expr15',\r\n              'selector': '[expr15]',\r\n\r\n              'template': template(null, [{\r\n                'expressions': [{\r\n                  'type': expressionTypes.ATTRIBUTE,\r\n                  'name': 'src',\r\n\r\n                  'evaluate': function(scope) {\r\n                    return scope.idx === scope.state.topIndex ? scope.state.icons.top : scope.state.icons.other;\r\n                  }\r\n                }]\r\n              }])\r\n            }])\r\n          }, {\r\n            'type': bindingTypes.IF,\r\n\r\n            'evaluate': function(scope) {\r\n              return scope.idx === scope.state.topIndex ? scope.state.icons.top === '' : scope.state.icons.other === '';\r\n            },\r\n\r\n            'redundantAttribute': 'expr16',\r\n            'selector': '[expr16]',\r\n\r\n            'template': template(\r\n              '<span class=\"icon\"><i expr17=\"expr17\" class=\"fas fa-flag\"></i></span>',\r\n              [{\r\n                'type': bindingTypes.IF,\r\n\r\n                'evaluate': function(scope) {\r\n                  return scope.current != null && scope.current.runIndex == scope.props.runIdx && scope.current.segIndex == scope.props.segIdx;\r\n                },\r\n\r\n                'redundantAttribute': 'expr17',\r\n                'selector': '[expr17]',\r\n                'template': template(null, [])\r\n              }]\r\n            )\r\n          }]\r\n        ),\r\n\r\n        'redundantAttribute': 'expr13',\r\n        'selector': '[expr13]',\r\n        'itemName': 'current',\r\n        'indexName': 'idx',\r\n\r\n        'evaluate': function(scope) {\r\n          return scope.state.currentSegments;\r\n        }\r\n      }, {\r\n        'redundantAttribute': 'expr18',\r\n        'selector': '[expr18]',\r\n\r\n        'expressions': [{\r\n          'type': expressionTypes.TEXT,\r\n          'childNodeIndex': 0,\r\n\r\n          'evaluate': function(scope) {\r\n            return ['\\r\\n            ', scope.props.segment, '\\r\\n        '].join('');\r\n          }\r\n        }]\r\n      }]\r\n    );\r\n  },\r\n\r\n  'name': 'segment'\r\n};","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d*\\.)?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = (parseFloat(match[1]) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (obj == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n","// Define logics about this component here.\r\nimport Segment from './segment.riot';\r\nimport Color from 'color';\r\nvar relayRep = nodecg.Replicant('relay');\r\nvar graphicsRep = nodecg.Replicant('graphics');\r\nvar teamListRep = nodecg.Replicant('team-list');\r\nfunction Checkpoint() {\r\n    return {\r\n        state: {\r\n            runs: [],\r\n            progress: [],\r\n            checkpointIndex: 0,\r\n            minCpIdxs: {\r\n                run: 0,\r\n                seg: 0\r\n            },\r\n            teamIdxs: []\r\n        },\r\n        teamColorIsLight: function (team) {\r\n            return Color(team.color).isLight();\r\n        },\r\n        onMounted: function () {\r\n            var _this = this;\r\n            relayRep.on('change', function (newVal) {\r\n                _this.state.runs = newVal.runs;\r\n                _this.calcCheckpointIndex();\r\n                _this.update();\r\n            });\r\n            graphicsRep.on('change', function (newVal) {\r\n                _this.state.checkpointIndex = newVal.checkpointIndex;\r\n                _this.calcCheckpointIndex();\r\n                _this.update();\r\n            });\r\n            teamListRep.on('change', function (newVal) {\r\n                _this.state.teams = newVal;\r\n                _this.update();\r\n            });\r\n        },\r\n        calcCheckpointIndex: function () {\r\n            var totalSegmentCount = 0;\r\n            for (var i = 0; i < this.state.runs.length; i++) {\r\n                this.state.minCpIdxs.run = i;\r\n                if (this.state.checkpointIndex < (totalSegmentCount + this.state.runs[i].segments.length)) {\r\n                    break;\r\n                }\r\n                totalSegmentCount += this.state.runs[i].segments.length;\r\n            }\r\n            this.state.minCpIdxs.seg = this.state.checkpointIndex - totalSegmentCount;\r\n        }\r\n    };\r\n}\r\nCheckpoint.components = {\r\n    Segment: Segment\r\n};\r\n\r\nexport default {\r\n  'css': `checkpoint .hero-body,[is=\"checkpoint\"] .hero-body{ padding: 1.5rem 1.5rem; } checkpoint .not-last-segment,[is=\"checkpoint\"] .not-last-segment{ border-right: 1px solid white; } checkpoint .game-imaged,[is=\"checkpoint\"] .game-imaged{ background-position: center; background-size: cover; } checkpoint .game-imaged > div,[is=\"checkpoint\"] .game-imaged > div{ background-color: rgba(0, 0, 0, 0.5); }`,\r\n  'exports': Checkpoint,\r\n\r\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\r\n    return template(\r\n      '<div class=\"container\"><section class=\"hero has-background-light\"><div class=\"hero-body\"><div class=\"container\"><h1 class=\"title is-5\">\\r\\n                        チェックポイント\\r\\n                    </h1></div></div></section><div class=\"columns is-marginless is-mobile has-text-white has-background-dark\"><div expr0=\"expr0\"></div></div><div expr1=\"expr1\"></div></div>',\r\n      [{\r\n        'type': bindingTypes.EACH,\r\n        'getKey': null,\r\n        'condition': null,\r\n\r\n        'template': template(' ', [{\r\n          'expressions': [{\r\n            'type': expressionTypes.TEXT,\r\n            'childNodeIndex': 0,\r\n\r\n            'evaluate': function(scope) {\r\n              return ['\\r\\n                ', scope.team.name[0], '\\r\\n            '].join('');\r\n            }\r\n          }, {\r\n            'type': expressionTypes.ATTRIBUTE,\r\n            'name': 'class',\r\n\r\n            'evaluate': function(scope) {\r\n              return [\r\n                'column has-text-centered ',\r\n                scope.idx < scope.state.teams.length - 1 ? 'not-last-segment' : '',\r\n                ' ',\r\n                scope.teamColorIsLight(scope.team) ? 'has-text-dark' : 'has-text-light'\r\n              ].join('');\r\n            }\r\n          }, {\r\n            'type': expressionTypes.ATTRIBUTE,\r\n            'name': 'style',\r\n\r\n            'evaluate': function(scope) {\r\n              return ['background-color: ', scope.team.color].join('');\r\n            }\r\n          }]\r\n        }]),\r\n\r\n        'redundantAttribute': 'expr0',\r\n        'selector': '[expr0]',\r\n        'itemName': 'team',\r\n        'indexName': 'idx',\r\n\r\n        'evaluate': function(scope) {\r\n          return scope.state.teams;\r\n        }\r\n      }, {\r\n        'type': bindingTypes.EACH,\r\n        'getKey': null,\r\n        'condition': null,\r\n\r\n        'template': template('<div expr2=\"expr2\"></div><segment expr4=\"expr4\"></segment>', [{\r\n          'type': bindingTypes.IF,\r\n\r\n          'evaluate': function(scope) {\r\n            return scope.runIdx >= scope.state.minCpIdxs.run;\r\n          },\r\n\r\n          'redundantAttribute': 'expr2',\r\n          'selector': '[expr2]',\r\n\r\n          'template': template(\r\n            '<div class=\"column has-text-centered\"><div expr3=\"expr3\"> </div></div>',\r\n            [{\r\n              'expressions': [{\r\n                'type': expressionTypes.ATTRIBUTE,\r\n                'name': 'class',\r\n\r\n                'evaluate': function(scope) {\r\n                  return [\r\n                    'columns is-marginless is-mobile has-text-white has-text-weight-bold ',\r\n                    scope.run.image ? 'game-imaged' : 'has-background-primary'\r\n                  ].join('');\r\n                }\r\n              }, {\r\n                'type': expressionTypes.ATTRIBUTE,\r\n                'name': 'style',\r\n\r\n                'evaluate': function(scope) {\r\n                  return ['background-image: url(\\'', scope.run.image, '\\')'].join('');\r\n                }\r\n              }]\r\n            }, {\r\n              'redundantAttribute': 'expr3',\r\n              'selector': '[expr3]',\r\n\r\n              'expressions': [{\r\n                'type': expressionTypes.TEXT,\r\n                'childNodeIndex': 0,\r\n\r\n                'evaluate': function(scope) {\r\n                  return scope.run.game;\r\n                }\r\n              }]\r\n            }]\r\n          )\r\n        }, {\r\n          'type': bindingTypes.EACH,\r\n          'getKey': null,\r\n\r\n          'condition': function(scope) {\r\n            return scope.runIdx > scope.state.minCpIdxs.run || (scope.runIdx == scope.state.minCpIdxs.run && scope.idx >= scope.state.minCpIdxs.seg);\r\n          },\r\n\r\n          'template': template(null, [{\r\n            'type': bindingTypes.TAG,\r\n            'getComponent': getComponent,\r\n\r\n            'evaluate': function(scope) {\r\n              return 'segment';\r\n            },\r\n\r\n            'slots': [],\r\n\r\n            'attributes': [{\r\n              'type': expressionTypes.ATTRIBUTE,\r\n              'name': 'segment',\r\n\r\n              'evaluate': function(scope) {\r\n                return scope.segment;\r\n              }\r\n            }, {\r\n              'type': expressionTypes.ATTRIBUTE,\r\n              'name': 'runIdx',\r\n\r\n              'evaluate': function(scope) {\r\n                return scope.runIdx;\r\n              }\r\n            }, {\r\n              'type': expressionTypes.ATTRIBUTE,\r\n              'name': 'segIdx',\r\n\r\n              'evaluate': function(scope) {\r\n                return scope.idx;\r\n              }\r\n            }]\r\n          }]),\r\n\r\n          'redundantAttribute': 'expr4',\r\n          'selector': '[expr4]',\r\n          'itemName': 'segment',\r\n          'indexName': 'idx',\r\n\r\n          'evaluate': function(scope) {\r\n            return scope.run.segments;\r\n          }\r\n        }]),\r\n\r\n        'redundantAttribute': 'expr1',\r\n        'selector': '[expr1]',\r\n        'itemName': 'run',\r\n        'indexName': 'runIdx',\r\n\r\n        'evaluate': function(scope) {\r\n          return scope.state.runs;\r\n        }\r\n      }]\r\n    );\r\n  },\r\n\r\n  'name': 'checkpoint'\r\n};","import \"@riotjs/hot-reload\";\r\nimport * as riot from \"riot\";\r\nimport Checkpoint from \"./components/checkpoint/checkpoint.riot\";\r\n\r\nriot.component(Checkpoint)(\r\n  document.getElementById(\"root\") || document.body,\r\n  {}\r\n);\r\n"]}